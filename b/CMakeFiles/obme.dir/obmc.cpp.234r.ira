
;; Function void obmc(imgpel**, imgpel*, mvinfo*, int, int, int, int) (_Z4obmcPPcS_P6mvinfoiiii, funcdef_no=1384, decl_uid=33296, cgraph_uid=400, symbol_order=402)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 15 count 13 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r198: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r198,l0) best DREG, allocno GENERAL_REGS
    r197: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r197,l0) best AREG, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a101 (r143,l0) best DREG, allocno GENERAL_REGS
    r142: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a98 (r142,l0) best AREG, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a105 (r139,l0) best AREG, allocno GENERAL_REGS
    r138: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a106 (r138,l0) best DREG, allocno GENERAL_REGS
    r137: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a104 (r137,l0) best AREG, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r130,l0) best AREG, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a100 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a1(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a2(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6
  a3(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a4(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a5(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a6(r197,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a7(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a8(r130,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a9(r198,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:13 NO_REX_SSE_REGS:13 SSE_REGS:13 MMX_REGS:13 INT_SSE_REGS:13 ALL_REGS:208 MEM:4
  a10(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a11(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a12(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a13(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a14(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a15(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a16(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a17(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a18(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a19(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a20(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a21(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a22(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a23(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a24(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a25(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a26(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a27(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a28(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a29(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a30(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a31(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a32(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a33(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a34(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a35(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a36(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a37(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a38(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a39(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a40(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a41(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a42(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a43(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a44(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a45(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a46(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a47(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a48(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a49(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a50(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a51(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a52(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a53(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a54(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a55(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a56(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a57(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:74 NO_REX_SSE_REGS:74 SSE_REGS:74 MMX_REGS:94 INT_SSE_REGS:78 ALL_REGS:1448 MEM:20
  a58(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a59(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:29 NO_REX_SSE_REGS:29 SSE_REGS:29 MMX_REGS:39 INT_SSE_REGS:31 ALL_REGS:624 MEM:10
  a60(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a61(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a62(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a63(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a64(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a65(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a66(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a67(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:74 NO_REX_SSE_REGS:74 SSE_REGS:74 MMX_REGS:94 INT_SSE_REGS:78 ALL_REGS:1448 MEM:20
  a68(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a69(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:29 NO_REX_SSE_REGS:29 SSE_REGS:29 MMX_REGS:39 INT_SSE_REGS:31 ALL_REGS:624 MEM:10
  a70(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a71(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a72(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a73(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a74(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a75(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:74 NO_REX_SSE_REGS:74 SSE_REGS:74 MMX_REGS:94 INT_SSE_REGS:78 ALL_REGS:1448 MEM:20
  a76(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a77(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:29 NO_REX_SSE_REGS:29 SSE_REGS:29 MMX_REGS:39 INT_SSE_REGS:31 ALL_REGS:624 MEM:10
  a78(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a79(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a80(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a81(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a82(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a83(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a84(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a85(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:74 NO_REX_SSE_REGS:74 SSE_REGS:74 MMX_REGS:94 INT_SSE_REGS:78 ALL_REGS:1448 MEM:20
  a86(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a87(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:29 NO_REX_SSE_REGS:29 SSE_REGS:29 MMX_REGS:39 INT_SSE_REGS:31 ALL_REGS:624 MEM:10
  a88(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a89(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a90(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a91(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a92(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a93(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:74 NO_REX_SSE_REGS:74 SSE_REGS:74 MMX_REGS:94 INT_SSE_REGS:78 ALL_REGS:1448 MEM:20
  a94(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a95(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:29 NO_REX_SSE_REGS:29 SSE_REGS:29 MMX_REGS:39 INT_SSE_REGS:31 ALL_REGS:624 MEM:10
  a96(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a97(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a98(r142,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a99(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a100(r87,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a101(r143,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:13 NO_REX_SSE_REGS:13 SSE_REGS:13 MMX_REGS:13 INT_SSE_REGS:13 ALL_REGS:208 MEM:4
  a102(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a103(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a104(r137,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a105(r139,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a106(r138,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:13 NO_REX_SSE_REGS:13 SSE_REGS:13 MMX_REGS:13 INT_SSE_REGS:13 ALL_REGS:208 MEM:4

   Insn 188(l0): point = 1
   Insn 24(l0): point = 4
   Insn 23(l0): point = 6
   Insn 22(l0): point = 8
   Insn 184(l0): point = 11
   Insn 172(l0): point = 13
   Insn 107(l0): point = 16
   Insn 106(l0): point = 18
   Insn 105(l0): point = 20
   Insn 103(l0): point = 23
   Insn 102(l0): point = 25
   Insn 101(l0): point = 27
   Insn 100(l0): point = 29
   Insn 99(l0): point = 31
   Insn 98(l0): point = 33
   Insn 97(l0): point = 35
   Insn 96(l0): point = 37
   Insn 95(l0): point = 39
   Insn 94(l0): point = 41
   Insn 93(l0): point = 43
   Insn 92(l0): point = 45
   Insn 91(l0): point = 47
   Insn 90(l0): point = 49
   Insn 89(l0): point = 51
   Insn 88(l0): point = 53
   Insn 87(l0): point = 55
   Insn 86(l0): point = 57
   Insn 85(l0): point = 59
   Insn 84(l0): point = 61
   Insn 83(l0): point = 63
   Insn 82(l0): point = 65
   Insn 81(l0): point = 67
   Insn 77(l0): point = 69
   Insn 76(l0): point = 71
   Insn 75(l0): point = 73
   Insn 74(l0): point = 75
   Insn 73(l0): point = 77
   Insn 72(l0): point = 79
   Insn 71(l0): point = 81
   Insn 70(l0): point = 83
   Insn 69(l0): point = 85
   Insn 68(l0): point = 87
   Insn 67(l0): point = 89
   Insn 66(l0): point = 91
   Insn 65(l0): point = 93
   Insn 64(l0): point = 95
   Insn 63(l0): point = 97
   Insn 62(l0): point = 99
   Insn 61(l0): point = 101
   Insn 60(l0): point = 103
   Insn 59(l0): point = 105
   Insn 58(l0): point = 107
   Insn 57(l0): point = 109
   Insn 56(l0): point = 111
   Insn 55(l0): point = 113
   Insn 54(l0): point = 115
   Insn 53(l0): point = 117
   Insn 52(l0): point = 119
   Insn 48(l0): point = 121
   Insn 47(l0): point = 123
   Insn 46(l0): point = 125
   Insn 45(l0): point = 127
   Insn 44(l0): point = 129
   Insn 43(l0): point = 131
   Insn 42(l0): point = 133
   Insn 41(l0): point = 135
   Insn 40(l0): point = 137
   Insn 39(l0): point = 139
   Insn 38(l0): point = 141
   Insn 37(l0): point = 143
   Insn 36(l0): point = 145
   Insn 35(l0): point = 147
   Insn 34(l0): point = 149
   Insn 33(l0): point = 151
   Insn 32(l0): point = 153
   Insn 31(l0): point = 155
   Insn 30(l0): point = 157
   Insn 29(l0): point = 159
   Insn 28(l0): point = 161
   Insn 27(l0): point = 163
   Insn 26(l0): point = 165
   Insn 182(l0): point = 168
   Insn 166(l0): point = 170
   Insn 113(l0): point = 173
   Insn 112(l0): point = 175
   Insn 111(l0): point = 177
   Insn 109(l0): point = 180
   Insn 180(l0): point = 183
   Insn 160(l0): point = 185
   Insn 159(l0): point = 187
   Insn 158(l0): point = 189
   Insn 157(l0): point = 191
   Insn 156(l0): point = 193
   Insn 155(l0): point = 195
   Insn 154(l0): point = 197
   Insn 153(l0): point = 200
   Insn 152(l0): point = 202
   Insn 151(l0): point = 204
   Insn 150(l0): point = 206
   Insn 149(l0): point = 208
   Insn 148(l0): point = 210
   Insn 147(l0): point = 212
   Insn 146(l0): point = 214
   Insn 145(l0): point = 216
   Insn 144(l0): point = 218
   Insn 143(l0): point = 220
   Insn 142(l0): point = 222
   Insn 141(l0): point = 224
   Insn 140(l0): point = 226
   Insn 139(l0): point = 228
   Insn 138(l0): point = 230
   Insn 137(l0): point = 232
   Insn 136(l0): point = 234
   Insn 135(l0): point = 236
   Insn 134(l0): point = 238
   Insn 133(l0): point = 240
   Insn 132(l0): point = 242
   Insn 131(l0): point = 244
   Insn 130(l0): point = 246
   Insn 129(l0): point = 248
   Insn 128(l0): point = 250
   Insn 127(l0): point = 252
   Insn 126(l0): point = 254
   Insn 125(l0): point = 256
   Insn 124(l0): point = 258
   Insn 123(l0): point = 260
   Insn 122(l0): point = 262
   Insn 121(l0): point = 264
   Insn 120(l0): point = 266
   Insn 119(l0): point = 268
   Insn 118(l0): point = 270
   Insn 117(l0): point = 272
   Insn 116(l0): point = 274
   Insn 115(l0): point = 276
   Insn 20(l0): point = 279
   Insn 19(l0): point = 281
   Insn 18(l0): point = 283
   Insn 17(l0): point = 286
   Insn 16(l0): point = 288
   Insn 15(l0): point = 290
   Insn 14(l0): point = 292
   Insn 13(l0): point = 294
   Insn 12(l0): point = 296
   Insn 11(l0): point = 298
   Insn 7(l0): point = 300
   Insn 6(l0): point = 302
   Insn 5(l0): point = 304
   Insn 4(l0): point = 306
   Insn 3(l0): point = 308
   Insn 2(l0): point = 310
 a0(r114): [188..256]
 a1(r135): [188..189]
 a2(r134): [190..191]
 a3(r133): [192..193]
 a4(r122): [192..230]
 a5(r132): [194..195]
 a6(r197): [196..197]
 a7(r131): [198..200]
 a8(r130): [199..204]
 a9(r198): [197..198]
 a10(r196): [201..202]
 a11(r129): [205..206]
 a12(r128): [207..208]
 a13(r195): [209..210]
 a14(r127): [209..212]
 a15(r126): [213..214]
 a16(r125): [215..216]
 a17(r123): [215..224]
 a18(r124): [217..218]
 a19(r194): [219..220]
 a20(r193): [219..222]
 a21(r192): [225..226]
 a22(r191): [225..228]
 a23(r121): [231..232]
 a24(r120): [233..234]
 a25(r190): [235..236]
 a26(r119): [235..238]
 a27(r118): [239..240]
 a28(r117): [241..242]
 a29(r115): [241..250]
 a30(r116): [243..244]
 a31(r189): [245..246]
 a32(r188): [245..248]
 a33(r187): [251..252]
 a34(r186): [251..254]
 a35(r185): [257..258]
 a36(r113): [257..260]
 a37(r112): [261..262]
 a38(r111): [263..264]
 a39(r109): [263..272]
 a40(r110): [265..266]
 a41(r184): [267..268]
 a42(r183): [267..270]
 a43(r182): [273..274]
 a44(r181): [273..276]
 a45(r180): [176..177]
 a46(r179): [19..20]
 a47(r178): [26..27]
 a48(r108): [28..29]
 a49(r177): [30..31]
 a50(r107): [30..33]
 a51(r106): [34..35]
 a52(r176): [36..37]
 a53(r175): [40..41]
 a54(r105): [42..43]
 a55(r174): [44..45]
 a56(r104): [44..47]
 a57(r172): [52..57] [48..49]
 a58(r173): [50..51]
 a59(r103): [54..59]
 a60(r171): [60..61]
 a61(r169): [64..65]
 a62(r170): [66..67]
 a63(r102): [66..69]
 a64(r101): [70..71]
 a65(r166): [72..73]
 a66(r100): [72..75]
 a67(r164): [80..85] [76..77]
 a68(r165): [78..79]
 a69(r99): [82..87]
 a70(r163): [88..89]
 a71(r162): [92..93]
 a72(r98): [94..95]
 a73(r161): [96..97]
 a74(r97): [96..99]
 a75(r159): [104..109] [100..101]
 a76(r160): [102..103]
 a77(r96): [106..111]
 a78(r158): [112..113]
 a79(r156): [116..117]
 a80(r157): [118..119]
 a81(r95): [118..121]
 a82(r94): [122..123]
 a83(r153): [124..125]
 a84(r93): [124..127]
 a85(r151): [132..137] [128..129]
 a86(r152): [130..131]
 a87(r92): [134..139]
 a88(r150): [140..141]
 a89(r149): [144..145]
 a90(r91): [146..147]
 a91(r148): [148..149]
 a92(r90): [148..151]
 a93(r146): [156..161] [152..153]
 a94(r147): [154..155]
 a95(r89): [158..163]
 a96(r145): [164..165]
 a97(r144): [7..8]
 a98(r142): [282..283]
 a99(r88): [284..286]
 a100(r87): [285..290]
 a101(r143): [283..284]
 a102(r141): [287..288]
 a103(r140): [291..292]
 a104(r137): [295..296]
 a105(r139): [297..298]
 a106(r138): [296..296]
Compressing live ranges: from 313 to 162 - 51%
Ranges after the compression:
 a0(r114): [90..136]
 a1(r135): [90..91]
 a2(r134): [92..93]
 a3(r133): [94..95]
 a4(r122): [94..120]
 a5(r132): [96..97]
 a6(r197): [98..99]
 a7(r131): [100..102]
 a8(r130): [101..104]
 a9(r198): [99..100]
 a10(r196): [103..104]
 a11(r129): [105..106]
 a12(r128): [107..108]
 a13(r195): [109..110]
 a14(r127): [109..110]
 a15(r126): [111..112]
 a16(r125): [113..114]
 a17(r123): [113..118]
 a18(r124): [115..116]
 a19(r194): [117..118]
 a20(r193): [117..118]
 a21(r192): [119..120]
 a22(r191): [119..120]
 a23(r121): [121..122]
 a24(r120): [123..124]
 a25(r190): [125..126]
 a26(r119): [125..126]
 a27(r118): [127..128]
 a28(r117): [129..130]
 a29(r115): [129..134]
 a30(r116): [131..132]
 a31(r189): [133..134]
 a32(r188): [133..134]
 a33(r187): [135..136]
 a34(r186): [135..136]
 a35(r185): [137..138]
 a36(r113): [137..138]
 a37(r112): [139..140]
 a38(r111): [141..142]
 a39(r109): [141..146]
 a40(r110): [143..144]
 a41(r184): [145..146]
 a42(r183): [145..146]
 a43(r182): [147..148]
 a44(r181): [147..148]
 a45(r180): [88..89]
 a46(r179): [2..3]
 a47(r178): [4..5]
 a48(r108): [6..7]
 a49(r177): [8..9]
 a50(r107): [8..9]
 a51(r106): [10..11]
 a52(r176): [12..13]
 a53(r175): [14..15]
 a54(r105): [16..17]
 a55(r174): [18..19]
 a56(r104): [18..19]
 a57(r172): [24..25] [20..21]
 a58(r173): [22..23]
 a59(r103): [24..25]
 a60(r171): [26..27]
 a61(r169): [28..29]
 a62(r170): [30..31]
 a63(r102): [30..31]
 a64(r101): [32..33]
 a65(r166): [34..35]
 a66(r100): [34..35]
 a67(r164): [40..41] [36..37]
 a68(r165): [38..39]
 a69(r99): [40..41]
 a70(r163): [42..43]
 a71(r162): [44..45]
 a72(r98): [46..47]
 a73(r161): [48..49]
 a74(r97): [48..49]
 a75(r159): [54..55] [50..51]
 a76(r160): [52..53]
 a77(r96): [54..55]
 a78(r158): [56..57]
 a79(r156): [58..59]
 a80(r157): [60..61]
 a81(r95): [60..61]
 a82(r94): [62..63]
 a83(r153): [64..65]
 a84(r93): [64..65]
 a85(r151): [70..71] [66..67]
 a86(r152): [68..69]
 a87(r92): [70..71]
 a88(r150): [72..73]
 a89(r149): [74..75]
 a90(r91): [76..77]
 a91(r148): [78..79]
 a92(r90): [78..79]
 a93(r146): [84..85] [80..81]
 a94(r147): [82..83]
 a95(r89): [84..85]
 a96(r145): [86..87]
 a97(r144): [0..1]
 a98(r142): [149..150]
 a99(r88): [151..153]
 a100(r87): [152..155]
 a101(r143): [150..151]
 a102(r141): [154..155]
 a103(r140): [156..157]
 a104(r137): [158..159]
 a105(r139): [160..161]
 a106(r138): [159..159]
  pref0:a9(r198)<-hr1@1
  pref1:a6(r197)<-hr0@1
  pref2:a101(r143)<-hr1@1
  pref3:a98(r142)<-hr0@1
  pref4:a105(r139)<-hr0@1
  pref5:a106(r138)<-hr1@1
  pref6:a104(r137)<-hr0@1
  pref7:a8(r130)<-hr0@1
  pref8:a100(r87)<-hr0@1
  regions=1, blocks=13, points=162
    allocnos=107 (big 0), copies=0, conflicts=0, ranges=112
Disposition:
  100:r87  l0     0   99:r88  l0     1   95:r89  l0     1   92:r90  l0     1
   90:r91  l0     0   87:r92  l0     1   84:r93  l0     1   82:r94  l0     0
   81:r95  l0     1   77:r96  l0     1   74:r97  l0     1   72:r98  l0     0
   69:r99  l0     1   66:r100 l0     1   64:r101 l0     0   63:r102 l0     1
   59:r103 l0     1   56:r104 l0     1   54:r105 l0     0   51:r106 l0     0
   50:r107 l0     1   48:r108 l0     0   39:r109 l0     2   40:r110 l0     0
   38:r111 l0     0   37:r112 l0     0   36:r113 l0     1    0:r114 l0     2
   29:r115 l0     4   30:r116 l0     0   28:r117 l0     0   27:r118 l0     0
   26:r119 l0     1   24:r120 l0     0   23:r121 l0     0    4:r122 l0     5
   17:r123 l0     4   18:r124 l0     0   16:r125 l0     0   15:r126 l0     0
   14:r127 l0     1   12:r128 l0     0   11:r129 l0     0    8:r130 l0     0
    7:r131 l0     1    5:r132 l0     0    3:r133 l0     0    2:r134 l0     0
    1:r135 l0     0  104:r137 l0     0  106:r138 l0     1  105:r139 l0     0
  103:r140 l0     0  102:r141 l0     1   98:r142 l0     0  101:r143 l0     2
   97:r144 l0     0   96:r145 l0     0   93:r146 l0     0   94:r147 l0     0
   91:r148 l0     0   89:r149 l0     0   88:r150 l0     0   85:r151 l0     0
   86:r152 l0     0   83:r153 l0     0   79:r156 l0     0   80:r157 l0     0
   78:r158 l0     0   75:r159 l0     0   76:r160 l0     0   73:r161 l0     0
   71:r162 l0     0   70:r163 l0     0   67:r164 l0     0   68:r165 l0     0
   65:r166 l0     0   61:r169 l0     0   62:r170 l0     0   60:r171 l0     0
   57:r172 l0     0   58:r173 l0     0   55:r174 l0     0   53:r175 l0     0
   52:r176 l0     0   49:r177 l0     0   47:r178 l0     0   46:r179 l0     0
   45:r180 l0     0   44:r181 l0     1   43:r182 l0     0   42:r183 l0     1
   41:r184 l0     0   35:r185 l0     0   34:r186 l0     1   33:r187 l0     0
   32:r188 l0     1   31:r189 l0     0   25:r190 l0     0   22:r191 l0     1
   21:r192 l0     0   20:r193 l0     1   19:r194 l0     0   13:r195 l0     0
   10:r196 l0     1    6:r197 l0     0    9:r198 l0     4
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void obmc(imgpel**, imgpel*, mvinfo*, int, int, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 6[bp] 17[flags] 37[r8] 38[r9]
;;  ref usage 	r0={1d} r1={1d,1u} r2={1d,1u} r4={1d,1u} r5={1d,1u} r6={1d,12u} r7={1d,12u} r16={1d,15u} r17={52d,3u} r20={1d,78u,23e} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d,1u} r38={1d,1u} r87={1d,2u} r88={1d,2u} r89={1d,2u,1e} r90={1d,1u,1e} r91={1d,1u} r92={1d,2u,1e} r93={1d,1u,1e} r94={1d,1u} r95={1d,1u,1e} r96={1d,2u,1e} r97={1d,1u,1e} r98={1d,1u} r99={1d,2u,1e} r100={1d,1u,1e} r101={1d,1u} r102={1d,1u,1e} r103={1d,2u,1e} r104={1d,1u,1e} r105={1d,1u} r106={1d,1u} r107={1d,1u,1e} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u,1e} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u,1e} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u,1e} r128={1d,1u} r129={1d,1u} r130={1d,2u} r131={1d,2u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r137={1d,1u} r138={1d} r139={1d,2u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d} r144={1d,1u} r145={1d,1u} r146={4d,4u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={4d,4u} r152={1d,1u} r153={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={4d,4u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={4d,4u} r165={1d,1u} r166={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={4d,4u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d} 
;;    total ref usage 487{193d,255u,39e} in 150{150 regular + 0 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 17 [flags] 87 88 137 138 139 140 141 142 143
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 refFrame+0 S8 A64])
        (reg:DI 5 di [ refFrame ])) /home/kai/git_repos/obme/obmc.cpp:9 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ refFrame ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 currFrame+0 S8 A64])
        (reg:DI 4 si [ currFrame ])) /home/kai/git_repos/obme/obmc.cpp:9 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ currFrame ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 mvs+0 S8 A64])
        (reg:DI 1 dx [ mvs ])) /home/kai/git_repos/obme/obmc.cpp:9 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ mvs ])
        (nil)))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 width+0 S4 A32])
        (reg:SI 2 cx [ width ])) /home/kai/git_repos/obme/obmc.cpp:9 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ width ])
        (nil)))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 height+0 S4 A32])
        (reg:SI 37 r8 [ height ])) /home/kai/git_repos/obme/obmc.cpp:9 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ height ])
        (nil)))
(insn 7 6 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 blocksize+0 S4 A32])
        (reg:SI 38 r9 [ blocksize ])) /home/kai/git_repos/obme/obmc.cpp:9 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [ blocksize ])
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg:SI 139)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 blocksize+0 S4 A32])) /home/kai/git_repos/obme/obmc.cpp:11 90 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:SI 137)
                (div:SI (reg:SI 139)
                    (mem/c:SI (reg/f:DI 16 argp) [0 overlap+0 S4 A64])))
            (set (reg:SI 138)
                (mod:SI (reg:SI 139)
                    (mem/c:SI (reg/f:DI 16 argp) [0 overlap+0 S4 A64])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:11 341 {*divmodsi4}
     (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_UNUSED (reg:SI 138)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 13 12 14 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 ratio+0 S4 A32])
        (reg:SI 137)) /home/kai/git_repos/obme/obmc.cpp:11 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 137)
        (nil)))
(insn 14 13 15 2 (set (reg:SI 140)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 width+0 S4 A32])) /home/kai/git_repos/obme/obmc.cpp:13 90 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg:SI 87 [ D.34928 ])
                (mult:SI (reg:SI 140)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -80 [0xffffffffffffffb0])) [0 height+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:13 305 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 16 15 17 2 (set (reg:SI 141)
        (mem/c:SI (reg/f:DI 16 argp) [0 overlap+0 S4 A64])) /home/kai/git_repos/obme/obmc.cpp:13 90 {*movsi_internal}
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg:SI 88 [ D.34928 ])
                (mult:SI (reg:SI 141)
                    (mem/c:SI (reg/f:DI 16 argp) [0 overlap+0 S4 A64])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:13 305 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 141)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 18 17 19 2 (parallel [
            (set (reg:SI 142)
                (div:SI (reg:SI 87 [ D.34928 ])
                    (reg:SI 88 [ D.34928 ])))
            (set (reg:SI 143)
                (mod:SI (reg:SI 87 [ D.34928 ])
                    (reg:SI 88 [ D.34928 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:13 341 {*divmodsi4}
     (expr_list:REG_DEAD (reg:SI 88 [ D.34928 ])
        (expr_list:REG_DEAD (reg:SI 87 [ D.34928 ])
            (expr_list:REG_UNUSED (reg:SI 143)
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(insn 19 18 20 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 numMV+0 S4 A32])
        (reg:SI 142)) /home/kai/git_repos/obme/obmc.cpp:13 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 142)
        (nil)))
(insn 20 19 173 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 i+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/obmc.cpp:14 90 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              10 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 144
(code_label 173 20 21 3 7 "" [1 uses])
(note 21 173 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 3 (set (reg:SI 144)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/obmc.cpp:14 90 {*movsi_internal}
     (nil))
(insn 23 22 24 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 144)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [0 numMV+0 S4 A32]))) /home/kai/git_repos/obme/obmc.cpp:14 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 144)
        (nil)))
(jump_insn 24 23 25 3 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 187)
            (pc))) /home/kai/git_repos/obme/obmc.cpp:14 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 187)
;;  succ:       12
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 145 146 147 148 149 150 151 152 153 156 157 158 159 160 161 162 163 164 165 166 169 170 171 172 173 174 175 176 177 178
(note 25 24 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 4 (set (reg:SI 145)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/obmc.cpp:17 90 {*movsi_internal}
     (nil))
(insn 27 26 28 4 (set (reg:DI 89 [ D.34929 ])
        (sign_extend:DI (reg:SI 145))) /home/kai/git_repos/obme/obmc.cpp:17 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 145)
        (nil)))
(insn 28 27 29 4 (set (reg:DI 146)
        (reg:DI 89 [ D.34929 ])) /home/kai/git_repos/obme/obmc.cpp:17 89 {*movdi_internal}
     (nil))
(insn 29 28 30 4 (parallel [
            (set (reg:DI 146)
                (ashift:DI (reg:DI 146)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:17 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 30 29 31 4 (parallel [
            (set (reg:DI 146)
                (plus:DI (reg:DI 146)
                    (reg:DI 89 [ D.34929 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:17 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 89 [ D.34929 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 89 [ D.34929 ])
                    (const_int 3 [0x3]))
                (nil)))))
(insn 31 30 32 4 (parallel [
            (set (reg:DI 147)
                (ashift:DI (reg:DI 146)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:17 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 146)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 32 31 33 4 (set (reg:DI 146)
        (reg:DI 147)) /home/kai/git_repos/obme/obmc.cpp:17 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 147)
        (nil)))
(insn 33 32 34 4 (set (reg:DI 90 [ D.34929 ])
        (reg:DI 146)) /home/kai/git_repos/obme/obmc.cpp:17 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 146)
        (nil)))
(insn 34 33 35 4 (set (reg/f:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 mvs+0 S8 A64])) /home/kai/git_repos/obme/obmc.cpp:17 89 {*movdi_internal}
     (nil))
(insn 35 34 36 4 (parallel [
            (set (reg/f:DI 91 [ D.34930 ])
                (plus:DI (reg:DI 90 [ D.34929 ])
                    (reg/f:DI 148)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:17 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 148)
        (expr_list:REG_DEAD (reg:DI 90 [ D.34929 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -72 [0xffffffffffffffb8])) [0 mvs+0 S8 A64])
                        (reg:DI 90 [ D.34929 ]))
                    (nil))))))
(insn 36 35 37 4 (set (reg:SI 149)
        (mem/j:SI (reg/f:DI 91 [ D.34930 ]) [0 _20->iCx+0 S4 A32])) /home/kai/git_repos/obme/obmc.cpp:17 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.34930 ])
        (nil)))
(insn 37 36 38 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 cX+0 S4 A32])
        (reg:SI 149)) /home/kai/git_repos/obme/obmc.cpp:17 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 149)
        (nil)))
(insn 38 37 39 4 (set (reg:SI 150)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/obmc.cpp:18 90 {*movsi_internal}
     (nil))
(insn 39 38 40 4 (set (reg:DI 92 [ D.34929 ])
        (sign_extend:DI (reg:SI 150))) /home/kai/git_repos/obme/obmc.cpp:18 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 150)
        (nil)))
(insn 40 39 41 4 (set (reg:DI 151)
        (reg:DI 92 [ D.34929 ])) /home/kai/git_repos/obme/obmc.cpp:18 89 {*movdi_internal}
     (nil))
(insn 41 40 42 4 (parallel [
            (set (reg:DI 151)
                (ashift:DI (reg:DI 151)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:18 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 42 41 43 4 (parallel [
            (set (reg:DI 151)
                (plus:DI (reg:DI 151)
                    (reg:DI 92 [ D.34929 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:18 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 92 [ D.34929 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 92 [ D.34929 ])
                    (const_int 3 [0x3]))
                (nil)))))
(insn 43 42 44 4 (parallel [
            (set (reg:DI 152)
                (ashift:DI (reg:DI 151)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:18 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 151)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 44 43 45 4 (set (reg:DI 151)
        (reg:DI 152)) /home/kai/git_repos/obme/obmc.cpp:18 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 152)
        (nil)))
(insn 45 44 46 4 (set (reg:DI 93 [ D.34929 ])
        (reg:DI 151)) /home/kai/git_repos/obme/obmc.cpp:18 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 151)
        (nil)))
(insn 46 45 47 4 (set (reg/f:DI 153)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 mvs+0 S8 A64])) /home/kai/git_repos/obme/obmc.cpp:18 89 {*movdi_internal}
     (nil))
(insn 47 46 48 4 (parallel [
            (set (reg/f:DI 94 [ D.34930 ])
                (plus:DI (reg:DI 93 [ D.34929 ])
                    (reg/f:DI 153)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:18 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 153)
        (expr_list:REG_DEAD (reg:DI 93 [ D.34929 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -72 [0xffffffffffffffb8])) [0 mvs+0 S8 A64])
                        (reg:DI 93 [ D.34929 ]))
                    (nil))))))
(insn 48 47 52 4 (set (reg:SI 95 [ D.34928 ])
        (mem/j:SI (plus:DI (reg/f:DI 94 [ D.34930 ])
                (const_int 8 [0x8])) [0 _24->iMvx+0 S4 A32])) /home/kai/git_repos/obme/obmc.cpp:18 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.34930 ])
        (nil)))
(insn 52 48 53 4 (set (reg:SI 157)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 cX+0 S4 A32])) /home/kai/git_repos/obme/obmc.cpp:18 90 {*movsi_internal}
     (nil))
(insn 53 52 54 4 (parallel [
            (set (reg:SI 156)
                (plus:SI (reg:SI 95 [ D.34928 ])
                    (reg:SI 157)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:18 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 157)
        (expr_list:REG_DEAD (reg:SI 95 [ D.34928 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 95 [ D.34928 ])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -28 [0xffffffffffffffe4])) [0 cX+0 S4 A32]))
                    (nil))))))
(insn 54 53 55 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 mvX+0 S4 A32])
        (reg:SI 156)) /home/kai/git_repos/obme/obmc.cpp:18 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 156)
        (nil)))
(insn 55 54 56 4 (set (reg:SI 158)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/obmc.cpp:19 90 {*movsi_internal}
     (nil))
(insn 56 55 57 4 (set (reg:DI 96 [ D.34929 ])
        (sign_extend:DI (reg:SI 158))) /home/kai/git_repos/obme/obmc.cpp:19 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 158)
        (nil)))
(insn 57 56 58 4 (set (reg:DI 159)
        (reg:DI 96 [ D.34929 ])) /home/kai/git_repos/obme/obmc.cpp:19 89 {*movdi_internal}
     (nil))
(insn 58 57 59 4 (parallel [
            (set (reg:DI 159)
                (ashift:DI (reg:DI 159)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:19 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 59 58 60 4 (parallel [
            (set (reg:DI 159)
                (plus:DI (reg:DI 159)
                    (reg:DI 96 [ D.34929 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:19 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 96 [ D.34929 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 96 [ D.34929 ])
                    (const_int 3 [0x3]))
                (nil)))))
(insn 60 59 61 4 (parallel [
            (set (reg:DI 160)
                (ashift:DI (reg:DI 159)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:19 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 159)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 61 60 62 4 (set (reg:DI 159)
        (reg:DI 160)) /home/kai/git_repos/obme/obmc.cpp:19 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 160)
        (nil)))
(insn 62 61 63 4 (set (reg:DI 97 [ D.34929 ])
        (reg:DI 159)) /home/kai/git_repos/obme/obmc.cpp:19 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 159)
        (nil)))
(insn 63 62 64 4 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 mvs+0 S8 A64])) /home/kai/git_repos/obme/obmc.cpp:19 89 {*movdi_internal}
     (nil))
(insn 64 63 65 4 (parallel [
            (set (reg/f:DI 98 [ D.34930 ])
                (plus:DI (reg:DI 97 [ D.34929 ])
                    (reg/f:DI 161)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:19 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 161)
        (expr_list:REG_DEAD (reg:DI 97 [ D.34929 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -72 [0xffffffffffffffb8])) [0 mvs+0 S8 A64])
                        (reg:DI 97 [ D.34929 ]))
                    (nil))))))
(insn 65 64 66 4 (set (reg:SI 162)
        (mem/j:SI (plus:DI (reg/f:DI 98 [ D.34930 ])
                (const_int 4 [0x4])) [0 _29->iCy+0 S4 A32])) /home/kai/git_repos/obme/obmc.cpp:19 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98 [ D.34930 ])
        (nil)))
(insn 66 65 67 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 cY+0 S4 A32])
        (reg:SI 162)) /home/kai/git_repos/obme/obmc.cpp:19 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 162)
        (nil)))
(insn 67 66 68 4 (set (reg:SI 163)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/obmc.cpp:20 90 {*movsi_internal}
     (nil))
(insn 68 67 69 4 (set (reg:DI 99 [ D.34929 ])
        (sign_extend:DI (reg:SI 163))) /home/kai/git_repos/obme/obmc.cpp:20 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 163)
        (nil)))
(insn 69 68 70 4 (set (reg:DI 164)
        (reg:DI 99 [ D.34929 ])) /home/kai/git_repos/obme/obmc.cpp:20 89 {*movdi_internal}
     (nil))
(insn 70 69 71 4 (parallel [
            (set (reg:DI 164)
                (ashift:DI (reg:DI 164)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:20 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 71 70 72 4 (parallel [
            (set (reg:DI 164)
                (plus:DI (reg:DI 164)
                    (reg:DI 99 [ D.34929 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:20 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 99 [ D.34929 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 99 [ D.34929 ])
                    (const_int 3 [0x3]))
                (nil)))))
(insn 72 71 73 4 (parallel [
            (set (reg:DI 165)
                (ashift:DI (reg:DI 164)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:20 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 164)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 73 72 74 4 (set (reg:DI 164)
        (reg:DI 165)) /home/kai/git_repos/obme/obmc.cpp:20 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 165)
        (nil)))
(insn 74 73 75 4 (set (reg:DI 100 [ D.34929 ])
        (reg:DI 164)) /home/kai/git_repos/obme/obmc.cpp:20 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 164)
        (nil)))
(insn 75 74 76 4 (set (reg/f:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 mvs+0 S8 A64])) /home/kai/git_repos/obme/obmc.cpp:20 89 {*movdi_internal}
     (nil))
(insn 76 75 77 4 (parallel [
            (set (reg/f:DI 101 [ D.34930 ])
                (plus:DI (reg:DI 100 [ D.34929 ])
                    (reg/f:DI 166)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:20 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 166)
        (expr_list:REG_DEAD (reg:DI 100 [ D.34929 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -72 [0xffffffffffffffb8])) [0 mvs+0 S8 A64])
                        (reg:DI 100 [ D.34929 ]))
                    (nil))))))
(insn 77 76 81 4 (set (reg:SI 102 [ D.34928 ])
        (mem/j:SI (plus:DI (reg/f:DI 101 [ D.34930 ])
                (const_int 12 [0xc])) [0 _33->iMvy+0 S4 A32])) /home/kai/git_repos/obme/obmc.cpp:20 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101 [ D.34930 ])
        (nil)))
(insn 81 77 82 4 (set (reg:SI 170)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 cY+0 S4 A32])) /home/kai/git_repos/obme/obmc.cpp:20 90 {*movsi_internal}
     (nil))
(insn 82 81 83 4 (parallel [
            (set (reg:SI 169)
                (plus:SI (reg:SI 102 [ D.34928 ])
                    (reg:SI 170)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:20 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 170)
        (expr_list:REG_DEAD (reg:SI 102 [ D.34928 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 102 [ D.34928 ])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -20 [0xffffffffffffffec])) [0 cY+0 S4 A32]))
                    (nil))))))
(insn 83 82 84 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 mvY+0 S4 A32])
        (reg:SI 169)) /home/kai/git_repos/obme/obmc.cpp:20 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 169)
        (nil)))
(insn 84 83 85 4 (set (reg:SI 171)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/obmc.cpp:21 90 {*movsi_internal}
     (nil))
(insn 85 84 86 4 (set (reg:DI 103 [ D.34929 ])
        (sign_extend:DI (reg:SI 171))) /home/kai/git_repos/obme/obmc.cpp:21 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 171)
        (nil)))
(insn 86 85 87 4 (set (reg:DI 172)
        (reg:DI 103 [ D.34929 ])) /home/kai/git_repos/obme/obmc.cpp:21 89 {*movdi_internal}
     (nil))
(insn 87 86 88 4 (parallel [
            (set (reg:DI 172)
                (ashift:DI (reg:DI 172)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:21 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 88 87 89 4 (parallel [
            (set (reg:DI 172)
                (plus:DI (reg:DI 172)
                    (reg:DI 103 [ D.34929 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:21 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 103 [ D.34929 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 103 [ D.34929 ])
                    (const_int 3 [0x3]))
                (nil)))))
(insn 89 88 90 4 (parallel [
            (set (reg:DI 173)
                (ashift:DI (reg:DI 172)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:21 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 172)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 90 89 91 4 (set (reg:DI 172)
        (reg:DI 173)) /home/kai/git_repos/obme/obmc.cpp:21 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 173)
        (nil)))
(insn 91 90 92 4 (set (reg:DI 104 [ D.34929 ])
        (reg:DI 172)) /home/kai/git_repos/obme/obmc.cpp:21 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 172)
        (nil)))
(insn 92 91 93 4 (set (reg/f:DI 174)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 mvs+0 S8 A64])) /home/kai/git_repos/obme/obmc.cpp:21 89 {*movdi_internal}
     (nil))
(insn 93 92 94 4 (parallel [
            (set (reg/f:DI 105 [ D.34930 ])
                (plus:DI (reg:DI 104 [ D.34929 ])
                    (reg/f:DI 174)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:21 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 174)
        (expr_list:REG_DEAD (reg:DI 104 [ D.34929 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -72 [0xffffffffffffffb8])) [0 mvs+0 S8 A64])
                        (reg:DI 104 [ D.34929 ]))
                    (nil))))))
(insn 94 93 95 4 (set (reg:SI 175)
        (mem/j:SI (plus:DI (reg/f:DI 105 [ D.34930 ])
                (const_int 20 [0x14])) [0 _38->frame+0 S4 A32])) /home/kai/git_repos/obme/obmc.cpp:21 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 105 [ D.34930 ])
        (nil)))
(insn 95 94 96 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 idx+0 S4 A32])
        (reg:SI 175)) /home/kai/git_repos/obme/obmc.cpp:21 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 175)
        (nil)))
(insn 96 95 97 4 (set (reg:SI 176)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 idx+0 S4 A32])) /home/kai/git_repos/obme/obmc.cpp:25 90 {*movsi_internal}
     (nil))
(insn 97 96 98 4 (set (reg:DI 106 [ D.34929 ])
        (sign_extend:DI (reg:SI 176))) /home/kai/git_repos/obme/obmc.cpp:25 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 176)
        (nil)))
(insn 98 97 99 4 (parallel [
            (set (reg:DI 107 [ D.34929 ])
                (ashift:DI (reg:DI 106 [ D.34929 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:25 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 106 [ D.34929 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 99 98 100 4 (set (reg/f:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 refFrame+0 S8 A64])) /home/kai/git_repos/obme/obmc.cpp:25 89 {*movdi_internal}
     (nil))
(insn 100 99 101 4 (parallel [
            (set (reg/f:DI 108 [ D.34931 ])
                (plus:DI (reg:DI 107 [ D.34929 ])
                    (reg/f:DI 177)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:25 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 177)
        (expr_list:REG_DEAD (reg:DI 107 [ D.34929 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -56 [0xffffffffffffffc8])) [0 refFrame+0 S8 A64])
                        (reg:DI 107 [ D.34929 ]))
                    (nil))))))
(insn 101 100 102 4 (set (reg/f:DI 178)
        (mem/f:DI (reg/f:DI 108 [ D.34931 ]) [0 *_43+0 S8 A64])) /home/kai/git_repos/obme/obmc.cpp:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 108 [ D.34931 ])
        (nil)))
(insn 102 101 103 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 ref+0 S8 A64])
        (reg/f:DI 178)) /home/kai/git_repos/obme/obmc.cpp:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 178)
        (nil)))
(insn 103 102 167 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 y+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/obmc.cpp:26 90 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              9 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 179
(code_label 167 103 104 5 6 "" [1 uses])
(note 104 167 105 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 5 (set (reg:SI 179)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/obmc.cpp:26 90 {*movsi_internal}
     (nil))
(insn 106 105 107 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 179)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -84 [0xffffffffffffffac])) [0 blocksize+0 S4 A32]))) /home/kai/git_repos/obme/obmc.cpp:26 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 179)
        (nil)))
(jump_insn 107 106 108 5 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 170)
            (pc))) /home/kai/git_repos/obme/obmc.cpp:26 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 170)
;;  succ:       10
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 108 107 109 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 161 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 x+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/obmc.cpp:27 90 {*movsi_internal}
     (nil))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              8 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 180
(code_label 161 109 110 7 5 "" [1 uses])
(note 110 161 111 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 7 (set (reg:SI 180)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/obmc.cpp:27 90 {*movsi_internal}
     (nil))
(insn 112 111 113 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 180)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -84 [0xffffffffffffffac])) [0 blocksize+0 S4 A32]))) /home/kai/git_repos/obme/obmc.cpp:27 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 180)
        (nil)))
(jump_insn 113 112 114 7 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 164)
            (pc))) /home/kai/git_repos/obme/obmc.cpp:27 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 164)
;;  succ:       9
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198
(note 114 113 115 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 8 (set (reg:SI 181)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 cX+0 S4 A32])) /home/kai/git_repos/obme/obmc.cpp:29 90 {*movsi_internal}
     (nil))
(insn 116 115 117 8 (set (reg:SI 182)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/obmc.cpp:29 90 {*movsi_internal}
     (nil))
(insn 117 116 118 8 (parallel [
            (set (reg:SI 109 [ D.34928 ])
                (plus:SI (reg:SI 181)
                    (reg:SI 182)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:29 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 182)
        (expr_list:REG_DEAD (reg:SI 181)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -28 [0xffffffffffffffe4])) [0 cX+0 S4 A32])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 x+0 S4 A32]))
                    (nil))))))
(insn 118 117 119 8 (set (reg:SI 183)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 cY+0 S4 A32])) /home/kai/git_repos/obme/obmc.cpp:29 90 {*movsi_internal}
     (nil))
(insn 119 118 120 8 (set (reg:SI 184)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/obmc.cpp:29 90 {*movsi_internal}
     (nil))
(insn 120 119 121 8 (parallel [
            (set (reg:SI 110 [ D.34928 ])
                (plus:SI (reg:SI 183)
                    (reg:SI 184)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:29 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 184)
        (expr_list:REG_DEAD (reg:SI 183)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -20 [0xffffffffffffffec])) [0 cY+0 S4 A32])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -44 [0xffffffffffffffd4])) [0 y+0 S4 A32]))
                    (nil))))))
(insn 121 120 122 8 (parallel [
            (set (reg:SI 111 [ D.34928 ])
                (mult:SI (reg:SI 110 [ D.34928 ])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -76 [0xffffffffffffffb4])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:29 305 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 110 [ D.34928 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 122 121 123 8 (parallel [
            (set (reg:SI 112 [ D.34928 ])
                (plus:SI (reg:SI 109 [ D.34928 ])
                    (reg:SI 111 [ D.34928 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:29 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 111 [ D.34928 ])
        (expr_list:REG_DEAD (reg:SI 109 [ D.34928 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 123 122 124 8 (set (reg:DI 113 [ D.34932 ])
        (sign_extend:DI (reg:SI 112 [ D.34928 ]))) /home/kai/git_repos/obme/obmc.cpp:29 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 112 [ D.34928 ])
        (nil)))
(insn 124 123 125 8 (set (reg/f:DI 185)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 currFrame+0 S8 A64])) /home/kai/git_repos/obme/obmc.cpp:29 89 {*movdi_internal}
     (nil))
(insn 125 124 126 8 (parallel [
            (set (reg/f:DI 114 [ D.34933 ])
                (plus:DI (reg:DI 113 [ D.34932 ])
                    (reg/f:DI 185)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:29 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 185)
        (expr_list:REG_DEAD (reg:DI 113 [ D.34932 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 currFrame+0 S8 A64])
                        (reg:DI 113 [ D.34932 ]))
                    (nil))))))
(insn 126 125 127 8 (set (reg:SI 186)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 cX+0 S4 A32])) /home/kai/git_repos/obme/obmc.cpp:29 90 {*movsi_internal}
     (nil))
(insn 127 126 128 8 (set (reg:SI 187)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/obmc.cpp:29 90 {*movsi_internal}
     (nil))
(insn 128 127 129 8 (parallel [
            (set (reg:SI 115 [ D.34928 ])
                (plus:SI (reg:SI 186)
                    (reg:SI 187)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:29 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 187)
        (expr_list:REG_DEAD (reg:SI 186)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -28 [0xffffffffffffffe4])) [0 cX+0 S4 A32])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 x+0 S4 A32]))
                    (nil))))))
(insn 129 128 130 8 (set (reg:SI 188)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 cY+0 S4 A32])) /home/kai/git_repos/obme/obmc.cpp:29 90 {*movsi_internal}
     (nil))
(insn 130 129 131 8 (set (reg:SI 189)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/obmc.cpp:29 90 {*movsi_internal}
     (nil))
(insn 131 130 132 8 (parallel [
            (set (reg:SI 116 [ D.34928 ])
                (plus:SI (reg:SI 188)
                    (reg:SI 189)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:29 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 189)
        (expr_list:REG_DEAD (reg:SI 188)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -20 [0xffffffffffffffec])) [0 cY+0 S4 A32])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -44 [0xffffffffffffffd4])) [0 y+0 S4 A32]))
                    (nil))))))
(insn 132 131 133 8 (parallel [
            (set (reg:SI 117 [ D.34928 ])
                (mult:SI (reg:SI 116 [ D.34928 ])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -76 [0xffffffffffffffb4])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:29 305 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 116 [ D.34928 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 133 132 134 8 (parallel [
            (set (reg:SI 118 [ D.34928 ])
                (plus:SI (reg:SI 115 [ D.34928 ])
                    (reg:SI 117 [ D.34928 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:29 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 117 [ D.34928 ])
        (expr_list:REG_DEAD (reg:SI 115 [ D.34928 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 134 133 135 8 (set (reg:DI 119 [ D.34932 ])
        (sign_extend:DI (reg:SI 118 [ D.34928 ]))) /home/kai/git_repos/obme/obmc.cpp:29 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 118 [ D.34928 ])
        (nil)))
(insn 135 134 136 8 (set (reg/f:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 currFrame+0 S8 A64])) /home/kai/git_repos/obme/obmc.cpp:29 89 {*movdi_internal}
     (nil))
(insn 136 135 137 8 (parallel [
            (set (reg/f:DI 120 [ D.34933 ])
                (plus:DI (reg:DI 119 [ D.34932 ])
                    (reg/f:DI 190)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:29 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 190)
        (expr_list:REG_DEAD (reg:DI 119 [ D.34932 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 currFrame+0 S8 A64])
                        (reg:DI 119 [ D.34932 ]))
                    (nil))))))
(insn 137 136 138 8 (set (reg:QI 121 [ D.34934 ])
        (mem:QI (reg/f:DI 120 [ D.34933 ]) [0 *_59+0 S1 A8])) /home/kai/git_repos/obme/obmc.cpp:29 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 120 [ D.34933 ])
        (nil)))
(insn 138 137 139 8 (set (reg:QI 122 [ D.34935 ])
        (reg:QI 121 [ D.34934 ])) /home/kai/git_repos/obme/obmc.cpp:29 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 121 [ D.34934 ])
        (nil)))
(insn 139 138 140 8 (set (reg:SI 191)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 mvX+0 S4 A32])) /home/kai/git_repos/obme/obmc.cpp:29 90 {*movsi_internal}
     (nil))
(insn 140 139 141 8 (set (reg:SI 192)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/obmc.cpp:29 90 {*movsi_internal}
     (nil))
(insn 141 140 142 8 (parallel [
            (set (reg:SI 123 [ D.34928 ])
                (plus:SI (reg:SI 191)
                    (reg:SI 192)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:29 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 192)
        (expr_list:REG_DEAD (reg:SI 191)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 mvX+0 S4 A32])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 x+0 S4 A32]))
                    (nil))))))
(insn 142 141 143 8 (set (reg:SI 193)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 mvY+0 S4 A32])) /home/kai/git_repos/obme/obmc.cpp:29 90 {*movsi_internal}
     (nil))
(insn 143 142 144 8 (set (reg:SI 194)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/obmc.cpp:29 90 {*movsi_internal}
     (nil))
(insn 144 143 145 8 (parallel [
            (set (reg:SI 124 [ D.34928 ])
                (plus:SI (reg:SI 193)
                    (reg:SI 194)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:29 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 194)
        (expr_list:REG_DEAD (reg:SI 193)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -16 [0xfffffffffffffff0])) [0 mvY+0 S4 A32])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -44 [0xffffffffffffffd4])) [0 y+0 S4 A32]))
                    (nil))))))
(insn 145 144 146 8 (parallel [
            (set (reg:SI 125 [ D.34928 ])
                (mult:SI (reg:SI 124 [ D.34928 ])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -76 [0xffffffffffffffb4])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:29 305 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 124 [ D.34928 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 146 145 147 8 (parallel [
            (set (reg:SI 126 [ D.34928 ])
                (plus:SI (reg:SI 123 [ D.34928 ])
                    (reg:SI 125 [ D.34928 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:29 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 125 [ D.34928 ])
        (expr_list:REG_DEAD (reg:SI 123 [ D.34928 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 147 146 148 8 (set (reg:DI 127 [ D.34932 ])
        (sign_extend:DI (reg:SI 126 [ D.34928 ]))) /home/kai/git_repos/obme/obmc.cpp:29 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 126 [ D.34928 ])
        (nil)))
(insn 148 147 149 8 (set (reg/f:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 ref+0 S8 A64])) /home/kai/git_repos/obme/obmc.cpp:29 89 {*movdi_internal}
     (nil))
(insn 149 148 150 8 (parallel [
            (set (reg/f:DI 128 [ D.34933 ])
                (plus:DI (reg:DI 127 [ D.34932 ])
                    (reg/f:DI 195)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:29 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 195)
        (expr_list:REG_DEAD (reg:DI 127 [ D.34932 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 ref+0 S8 A64])
                        (reg:DI 127 [ D.34932 ]))
                    (nil))))))
(insn 150 149 151 8 (set (reg:QI 129 [ D.34934 ])
        (mem:QI (reg/f:DI 128 [ D.34933 ]) [0 *_67+0 S1 A8])) /home/kai/git_repos/obme/obmc.cpp:29 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 128 [ D.34933 ])
        (nil)))
(insn 151 150 152 8 (set (reg:SI 130 [ D.34928 ])
        (sign_extend:SI (reg:QI 129 [ D.34934 ]))) /home/kai/git_repos/obme/obmc.cpp:29 148 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 129 [ D.34934 ])
        (nil)))
(insn 152 151 153 8 (set (reg:SI 196)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 ratio+0 S4 A32])) /home/kai/git_repos/obme/obmc.cpp:29 90 {*movsi_internal}
     (nil))
(insn 153 152 154 8 (parallel [
            (set (reg:SI 131 [ D.34928 ])
                (mult:SI (reg:SI 196)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -36 [0xffffffffffffffdc])) [0 ratio+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:29 305 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 196)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 154 153 155 8 (parallel [
            (set (reg:SI 197)
                (div:SI (reg:SI 130 [ D.34928 ])
                    (reg:SI 131 [ D.34928 ])))
            (set (reg:SI 198)
                (mod:SI (reg:SI 130 [ D.34928 ])
                    (reg:SI 131 [ D.34928 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:29 341 {*divmodsi4}
     (expr_list:REG_DEAD (reg:SI 131 [ D.34928 ])
        (expr_list:REG_DEAD (reg:SI 130 [ D.34928 ])
            (expr_list:REG_UNUSED (reg:SI 198)
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(insn 155 154 156 8 (set (reg:SI 132 [ D.34928 ])
        (reg:SI 197)) /home/kai/git_repos/obme/obmc.cpp:29 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 197)
        (nil)))
(insn 156 155 157 8 (set (reg:QI 133 [ D.34935 ])
        (subreg:QI (reg:SI 132 [ D.34928 ]) 0)) /home/kai/git_repos/obme/obmc.cpp:29 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 132 [ D.34928 ])
        (nil)))
(insn 157 156 158 8 (parallel [
            (set (reg:QI 134 [ D.34935 ])
                (plus:QI (reg:QI 122 [ D.34935 ])
                    (reg:QI 133 [ D.34935 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:29 221 {*addqi_1}
     (expr_list:REG_DEAD (reg:QI 133 [ D.34935 ])
        (expr_list:REG_DEAD (reg:QI 122 [ D.34935 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 158 157 159 8 (set (reg:QI 135 [ D.34934 ])
        (reg:QI 134 [ D.34935 ])) /home/kai/git_repos/obme/obmc.cpp:29 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 134 [ D.34935 ])
        (nil)))
(insn 159 158 160 8 (set (mem:QI (reg/f:DI 114 [ D.34933 ]) [0 *_53+0 S1 A8])
        (reg:QI 135 [ D.34934 ])) /home/kai/git_repos/obme/obmc.cpp:29 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 135 [ D.34934 ])
        (expr_list:REG_DEAD (reg/f:DI 114 [ D.34933 ])
            (nil))))
(insn 160 159 180 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -40 [0xffffffffffffffd8])) [0 x+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 x+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:27 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 180 160 181 8 (set (pc)
        (label_ref 161)) /home/kai/git_repos/obme/obmc.cpp:27 654 {jump}
     (nil)
 -> 161)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 181 180 164)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 164 181 165 9 4 "" [1 uses])
(note 165 164 166 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 166 165 182 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -44 [0xffffffffffffffd4])) [0 y+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -44 [0xffffffffffffffd4])) [0 y+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:26 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 182 166 183 9 (set (pc)
        (label_ref 167)) /home/kai/git_repos/obme/obmc.cpp:26 654 {jump}
     (nil)
 -> 167)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 183 182 170)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 170 183 171 10 3 "" [1 uses])
(note 171 170 172 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 184 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -48 [0xffffffffffffffd0])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -48 [0xffffffffffffffd0])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obmc.cpp:14 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 184 172 185 10 (set (pc)
        (label_ref 173)) /home/kai/git_repos/obme/obmc.cpp:14 654 {jump}
     (nil)
 -> 173)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 185 184 187)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 11, flags: (NEW, RTL, MODIFIED)
;;  pred:       3
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 187 185 186 12 8 "" [1 uses])
(note 186 187 188 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 188 186 178 12 (const_int 0 [0]) /home/kai/git_repos/obme/obmc.cpp:33 684 {nop}
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 [100.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 178 188 179 11 1 "" [0 uses])
(note 179 178 0 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void __static_initialization_and_destruction_0(int, int) (_Z41__static_initialization_and_destruction_0ii, funcdef_no=1565, decl_uid=34766, cgraph_uid=581, symbol_order=607)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 7 (    1)
Building IRA IR
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 24(l0): point = 1
   Insn 18(l0): point = 4
   Insn 17(l0): point = 6
   Insn 16(l0): point = 8
   Insn 15(l0): point = 10
   Insn 14(l0): point = 12
   Insn 13(l0): point = 14
   Insn 11(l0): point = 17
   Insn 10(l0): point = 19
   Insn 8(l0): point = 22
   Insn 7(l0): point = 24
   Insn 3(l0): point = 26
   Insn 2(l0): point = 28
Compressing live ranges: from 31 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=7, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void __static_initialization_and_destruction_0(int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={4d,1u} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,6u} r7={1d,8u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,5u} r17={4d,2u} r18={2d} r19={2d} r20={1d,10u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} 
;;    total ref usage 206{169d,37u,0e} in 13{11 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 __initialize_p+0 S4 A32])
        (reg:SI 5 di [ __initialize_p ])) /home/kai/git_repos/obme/obmc.cpp:33 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ __initialize_p ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __priority+0 S4 A32])
        (reg:SI 4 si [ __priority ])) /home/kai/git_repos/obme/obmc.cpp:33 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ __priority ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 __initialize_p+0 S4 A32])
            (const_int 1 [0x1]))) /home/kai/git_repos/obme/obmc.cpp:33 7 {*cmpsi_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 25)
            (pc))) /home/kai/git_repos/obme/obmc.cpp:33 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 25)
;;  succ:       3 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 __priority+0 S4 A32])
            (const_int 65535 [0xffff]))) /home/kai/git_repos/obme/obmc.cpp:33 7 {*cmpsi_1}
     (nil))
(jump_insn 11 10 12 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 25)
            (pc))) /home/kai/git_repos/obme/obmc.cpp:33 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 25)
;;  succ:       4 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7fbe9848e7e0 __ioinit>)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(call_insn 14 13 15 4 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x7fbe98797e58 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/iostream:74 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 4 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7fbe9820bab0 __dso_handle>)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(insn 16 15 17 4 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7fbe9848e7e0 __ioinit>)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7fbe987aa0d8 __comp_dtor >)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(call_insn 18 17 25 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7fbe98214000 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/iostream:74 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 5, flags: (NEW, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              2
;;              3
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 25 18 23 6 11 "" [2 uses])
(note 23 25 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 21 6 (const_int 0 [0]) /home/kai/git_repos/obme/obmc.cpp:33 684 {nop}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 21 24 22 5 9 "" [0 uses])
(note 22 21 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function (static initializers for /home/kai/git_repos/obme/obmc.cpp) (_GLOBAL__sub_I__Z4obmcPPcS_P6mvinfoiiii, funcdef_no=1566, decl_uid=34772, cgraph_uid=582, symbol_order=729)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 7.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 7(l0): point = 0
   Insn 6(l0): point = 2
   Insn 5(l0): point = 4
Compressing live ranges: from 7 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


(static initializers for /home/kai/git_repos/obme/obmc.cpp)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={3d,1u} r5={3d,1u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} 
;;    total ref usage 103{93d,10u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 4 si)
        (const_int 65535 [0xffff])) /home/kai/git_repos/obme/obmc.cpp:33 90 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) /home/kai/git_repos/obme/obmc.cpp:33 90 {*movsi_internal}
     (nil))
(call_insn 7 6 0 2 (call (mem:QI (symbol_ref:DI ("_Z41__static_initialization_and_destruction_0ii") [flags 0x3]  <function_decl 0x7fbe9820dd80 __static_initialization_and_destruction_0>) [0 __static_initialization_and_destruction_0 S1 A8])
        (const_int 0 [0])) /home/kai/git_repos/obme/obmc.cpp:33 660 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

