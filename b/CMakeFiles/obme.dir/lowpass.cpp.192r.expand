
;; Function void lowpassFilter(imgpel*, imgpel*, int, int, int) (_Z13lowpassFilterPcS_iii, funcdef_no=0, decl_uid=2339, cgraph_uid=0, symbol_order=0)

void lowpassFilter(imgpel*, imgpel*, int, int, int) (imgpel * src, imgpel * dst, const int boxSize, const int width, const int height)
{
  int i;
  int j;
  int total;
  int sum;
  int x;
  int y;
  const int right;
  const int left;
  char D.2419;
  int D.2418;
  imgpel * D.2417;
  sizetype D.2416;
  int D.2415;
  int D.2414;
  int D.2412;
  char D.2411;
  imgpel * D.2410;
  sizetype D.2409;
  int D.2408;
  int D.2407;
  int D.2397;
  int D.2394;
  int D.2388;
  int _15;
  int _25;
  int _27;
  int _28;
  int _29;
  sizetype _30;
  imgpel * _32;
  char _33;
  int _34;
  int _39;
  int _40;
  sizetype _41;
  imgpel * _43;
  int _44;
  char _45;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  left_14 = boxSize_13(D) / 2;
  _15 = left_14 + 1;
  right_16 = boxSize_13(D) - _15;
  y_17 = 0;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                18
  # y_1 = PHI <y_17(2), y_48(18)>
  if (y_1 >= height_19(D))
    goto <bb 19>;
  else
    goto <bb 4>;
;;    succ:       19
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  x_20 = 0;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                17
  # x_2 = PHI <x_20(4), x_47(17)>
  if (x_2 >= width_21(D))
    goto <bb 18>;
  else
    goto <bb 6>;
;;    succ:       18
;;                6

;;   basic block 6, loop depth 2
;;    pred:       5
  sum_22 = 0;
  total_23 = 0;
  j_24 = y_1 - left_14;
;;    succ:       7

;;   basic block 7, loop depth 3
;;    pred:       6
;;                16
  # sum_3 = PHI <sum_22(6), sum_4(16)>
  # total_6 = PHI <total_23(6), total_7(16)>
  # j_9 = PHI <j_24(6), j_38(16)>
  _25 = y_1 + right_16;
  if (_25 < j_9)
    goto <bb 17>;
  else
    goto <bb 8>;
;;    succ:       17
;;                8

;;   basic block 8, loop depth 3
;;    pred:       7
  i_26 = x_2 - left_14;
;;    succ:       9

;;   basic block 9, loop depth 4
;;    pred:       8
;;                15
  # sum_4 = PHI <sum_3(8), sum_5(15)>
  # total_7 = PHI <total_6(8), total_8(15)>
  # i_10 = PHI <i_26(8), i_37(15)>
  _27 = x_2 + right_16;
  if (_27 < i_10)
    goto <bb 16>;
  else
    goto <bb 10>;
;;    succ:       16
;;                10

;;   basic block 10, loop depth 4
;;    pred:       9
  if (i_10 >= 0)
    goto <bb 11>;
  else
    goto <bb 15>;
;;    succ:       11
;;                15

;;   basic block 11, loop depth 4
;;    pred:       10
  if (i_10 < width_21(D))
    goto <bb 12>;
  else
    goto <bb 15>;
;;    succ:       12
;;                15

;;   basic block 12, loop depth 4
;;    pred:       11
  if (j_9 >= 0)
    goto <bb 13>;
  else
    goto <bb 15>;
;;    succ:       13
;;                15

;;   basic block 13, loop depth 4
;;    pred:       12
  if (j_9 < height_19(D))
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14
;;                15

;;   basic block 14, loop depth 4
;;    pred:       13
  _28 = j_9 * width_21(D);
  _29 = _28 + i_10;
  _30 = (sizetype) _29;
  _32 = src_31(D) + _30;
  _33 = *_32;
  _34 = (int) _33;
  sum_35 = _34 + sum_4;
  total_36 = total_7 + 1;
;;    succ:       15

;;   basic block 15, loop depth 4
;;    pred:       10
;;                11
;;                12
;;                13
;;                14
  # sum_5 = PHI <sum_4(10), sum_4(11), sum_4(12), sum_4(13), sum_35(14)>
  # total_8 = PHI <total_7(10), total_7(11), total_7(12), total_7(13), total_36(14)>
  i_37 = i_10 + 1;
  goto <bb 9>;
;;    succ:       9

;;   basic block 16, loop depth 3
;;    pred:       9
  j_38 = j_9 + 1;
  goto <bb 7>;
;;    succ:       7

;;   basic block 17, loop depth 2
;;    pred:       7
  _39 = y_1 * width_21(D);
  _40 = _39 + x_2;
  _41 = (sizetype) _40;
  _43 = dst_42(D) + _41;
  _44 = sum_3 / total_6;
  _45 = (char) _44;
  *_43 = _45;
  x_47 = x_2 + 1;
  goto <bb 5>;
;;    succ:       5

;;   basic block 18, loop depth 1
;;    pred:       5
  y_48 = y_1 + 1;
  goto <bb 3>;
;;    succ:       3

;;   basic block 19, loop depth 0
;;    pred:       3
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (y_1 - 1 )
Partition 2 (x_2 - 2 )
Partition 3 (sum_3 - 3 )
Partition 4 (sum_4 - 4 )
Partition 5 (sum_5 - 5 )
Partition 6 (total_6 - 6 )
Partition 7 (total_7 - 7 )
Partition 8 (total_8 - 8 )
Partition 9 (j_9 - 9 )
Partition 10 (i_10 - 10 )
Partition 13 (boxSize_13(D) - 13 )
Partition 14 (left_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (right_16 - 16 )
Partition 17 (y_17 - 17 )
Partition 19 (height_19(D) - 19 )
Partition 20 (x_20 - 20 )
Partition 21 (width_21(D) - 21 )
Partition 22 (sum_22 - 22 )
Partition 23 (total_23 - 23 )
Partition 24 (j_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (i_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (src_31(D) - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (sum_35 - 35 )
Partition 36 (total_36 - 36 )
Partition 37 (i_37 - 37 )
Partition 38 (j_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (dst_42(D) - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 47 (x_47 - 47 )
Partition 48 (y_48 - 48 )


Partition map 

Partition 0 (y_1 - 1 )
Partition 1 (x_2 - 2 )
Partition 2 (sum_3 - 3 )
Partition 3 (sum_4 - 4 )
Partition 4 (sum_5 - 5 )
Partition 5 (total_6 - 6 )
Partition 6 (total_7 - 7 )
Partition 7 (total_8 - 8 )
Partition 8 (j_9 - 9 )
Partition 9 (i_10 - 10 )
Partition 10 (boxSize_13(D) - 13 )
Partition 11 (y_17 - 17 )
Partition 12 (height_19(D) - 19 )
Partition 13 (x_20 - 20 )
Partition 14 (width_21(D) - 21 )
Partition 15 (sum_22 - 22 )
Partition 16 (total_23 - 23 )
Partition 17 (j_24 - 24 )
Partition 18 (i_26 - 26 )
Partition 19 (src_31(D) - 31 )
Partition 20 (sum_35 - 35 )
Partition 21 (total_36 - 36 )
Partition 22 (i_37 - 37 )
Partition 23 (j_38 - 38 )
Partition 24 (dst_42(D) - 42 )
Partition 25 (x_47 - 47 )
Partition 26 (y_48 - 48 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) y_1 <-> y_17
(2147483646) y_1 <-> y_48
(2147483646) x_2 <-> x_20
(2147483646) x_2 <-> x_47
(2147483646) sum_3 <-> sum_4
(2147483646) sum_3 <-> sum_5
(2147483646) sum_3 <-> sum_22
(2147483646) sum_3 <-> sum_35
(2147483646) total_6 <-> total_7
(2147483646) total_6 <-> total_8
(2147483646) total_6 <-> total_23
(2147483646) total_6 <-> total_36
(2147483646) j_9 <-> j_24
(2147483646) j_9 <-> j_38
(2147483646) i_10 <-> i_26
(2147483646) i_10 <-> i_37
(8) sum_4 <-> sum_5
(8) total_7 <-> total_8

Partition map 

Partition 0 (y_1 - 1 )
Partition 1 (x_2 - 2 )
Partition 2 (sum_3 - 3 )
Partition 3 (sum_4 - 4 )
Partition 4 (sum_5 - 5 )
Partition 5 (total_6 - 6 )
Partition 6 (total_7 - 7 )
Partition 7 (total_8 - 8 )
Partition 8 (j_9 - 9 )
Partition 9 (i_10 - 10 )
Partition 10 (boxSize_13(D) - 13 )
Partition 11 (y_17 - 17 )
Partition 12 (height_19(D) - 19 )
Partition 13 (x_20 - 20 )
Partition 14 (width_21(D) - 21 )
Partition 15 (sum_22 - 22 )
Partition 16 (total_23 - 23 )
Partition 17 (j_24 - 24 )
Partition 18 (i_26 - 26 )
Partition 19 (src_31(D) - 31 )
Partition 20 (sum_35 - 35 )
Partition 21 (total_36 - 36 )
Partition 22 (i_37 - 37 )
Partition 23 (j_38 - 38 )
Partition 24 (dst_42(D) - 42 )
Partition 25 (x_47 - 47 )
Partition 26 (y_48 - 48 )

Coalesce list: (1)y_1 & (17)y_17 [map: 0, 11] : Success -> 0
Coalesce list: (1)y_1 & (48)y_48 [map: 0, 26] : Success -> 0
Coalesce list: (2)x_2 & (20)x_20 [map: 1, 13] : Success -> 1
Coalesce list: (2)x_2 & (47)x_47 [map: 1, 25] : Success -> 1
Coalesce list: (3)sum_3 & (4)sum_4 [map: 2, 3] : Success -> 2
Coalesce list: (3)sum_3 & (5)sum_5 [map: 2, 4] : Success -> 2
Coalesce list: (3)sum_3 & (22)sum_22 [map: 2, 15] : Success -> 2
Coalesce list: (3)sum_3 & (35)sum_35 [map: 2, 20] : Success -> 2
Coalesce list: (6)total_6 & (7)total_7 [map: 5, 6] : Success -> 5
Coalesce list: (6)total_6 & (8)total_8 [map: 5, 7] : Success -> 5
Coalesce list: (6)total_6 & (23)total_23 [map: 5, 16] : Success -> 5
Coalesce list: (6)total_6 & (36)total_36 [map: 5, 21] : Success -> 5
Coalesce list: (9)j_9 & (24)j_24 [map: 8, 17] : Success -> 8
Coalesce list: (9)j_9 & (38)j_38 [map: 8, 23] : Success -> 8
Coalesce list: (10)i_10 & (26)i_26 [map: 9, 18] : Success -> 9
Coalesce list: (10)i_10 & (37)i_37 [map: 9, 22] : Success -> 9
Coalesce list: (4)sum_3 & (5)sum_3: Already Coalesced.
Coalesce list: (7)total_6 & (8)total_6: Already Coalesced.
Coalesce list: (8)total_6 & (36)total_6: Already Coalesced.
Coalesce list: (5)sum_3 & (35)sum_3: Already Coalesced.
Coalesce list: (10)i_10 & (37)i_10: Already Coalesced.
Coalesce list: (10)i_10 & (26)i_10: Already Coalesced.
Coalesce list: (7)total_6 & (8)total_6: Already Coalesced.
Coalesce list: (4)sum_3 & (5)sum_3: Already Coalesced.
Coalesce list: (9)j_9 & (38)j_9: Already Coalesced.
Coalesce list: (9)j_9 & (24)j_9: Already Coalesced.
Coalesce list: (6)total_6 & (23)total_6: Already Coalesced.
Coalesce list: (3)sum_3 & (22)sum_3: Already Coalesced.
Coalesce list: (2)x_2 & (47)x_2: Already Coalesced.
Coalesce list: (2)x_2 & (20)x_2: Already Coalesced.
Coalesce list: (1)y_1 & (48)y_1: Already Coalesced.
Coalesce list: (1)y_1 & (17)y_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (y_1 - 1 17 48 )
Partition 1 (x_2 - 2 20 47 )
Partition 2 (sum_3 - 3 4 5 22 35 )
Partition 3 (total_6 - 6 7 8 23 36 )
Partition 4 (j_9 - 9 24 38 )
Partition 5 (i_10 - 10 26 37 )
Partition 6 (boxSize_13(D) - 13 )
Partition 7 (left_14 - 14 )
Partition 8 (_15 - 15 )
Partition 9 (right_16 - 16 )
Partition 10 (height_19(D) - 19 )
Partition 11 (width_21(D) - 21 )
Partition 12 (_25 - 25 )
Partition 13 (_27 - 27 )
Partition 14 (_28 - 28 )
Partition 15 (_29 - 29 )
Partition 16 (_30 - 30 )
Partition 17 (src_31(D) - 31 )
Partition 18 (_32 - 32 )
Partition 19 (_33 - 33 )
Partition 20 (_34 - 34 )
Partition 21 (_39 - 39 )
Partition 22 (_40 - 40 )
Partition 23 (_41 - 41 )
Partition 24 (dst_42(D) - 42 )
Partition 25 (_43 - 43 )
Partition 26 (_44 - 44 )
Partition 27 (_45 - 45 )

void lowpassFilter(imgpel*, imgpel*, int, int, int) (imgpel * src, imgpel * dst, const int boxSize, const int width, const int height)
{
  int i;
  int j;
  int total;
  int sum;
  int x;
  int y;
  const int right;
  const int left;
  char D.2419;
  int D.2418;
  imgpel * D.2417;
  sizetype D.2416;
  int D.2415;
  int D.2414;
  int D.2412;
  char D.2411;
  imgpel * D.2410;
  sizetype D.2409;
  int D.2408;
  int D.2407;
  int D.2397;
  int D.2394;
  int D.2388;
  int _15;
  int _25;
  int _27;
  int _28;
  int _29;
  sizetype _30;
  imgpel * _32;
  char _33;
  int _34;
  int _39;
  int _40;
  sizetype _41;
  imgpel * _43;
  int _44;
  char _45;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  left_14 = boxSize_13(D) / 2;
  _15 = left_14 + 1;
  right_16 = boxSize_13(D) - _15;
  y_17 = 0;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                18
  # y_1 = PHI <y_17(2), y_48(18)>
  if (y_1 >= height_19(D))
    goto <bb 19>;
  else
    goto <bb 4>;
;;    succ:       19
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  x_20 = 0;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                17
  # x_2 = PHI <x_20(4), x_47(17)>
  if (x_2 >= width_21(D))
    goto <bb 18>;
  else
    goto <bb 6>;
;;    succ:       18
;;                6

;;   basic block 6, loop depth 2
;;    pred:       5
  sum_22 = 0;
  total_23 = 0;
  j_24 = y_1 - left_14;
;;    succ:       7

;;   basic block 7, loop depth 3
;;    pred:       6
;;                16
  # sum_3 = PHI <sum_22(6), sum_4(16)>
  # total_6 = PHI <total_23(6), total_7(16)>
  # j_9 = PHI <j_24(6), j_38(16)>
  _25 = y_1 + right_16;
  if (_25 < j_9)
    goto <bb 17>;
  else
    goto <bb 8>;
;;    succ:       17
;;                8

;;   basic block 8, loop depth 3
;;    pred:       7
  i_26 = x_2 - left_14;
;;    succ:       9

;;   basic block 9, loop depth 4
;;    pred:       8
;;                15
  # sum_4 = PHI <sum_3(8), sum_5(15)>
  # total_7 = PHI <total_6(8), total_8(15)>
  # i_10 = PHI <i_26(8), i_37(15)>
  _27 = x_2 + right_16;
  if (_27 < i_10)
    goto <bb 16>;
  else
    goto <bb 10>;
;;    succ:       16
;;                10

;;   basic block 10, loop depth 4
;;    pred:       9
  if (i_10 >= 0)
    goto <bb 11>;
  else
    goto <bb 15>;
;;    succ:       11
;;                15

;;   basic block 11, loop depth 4
;;    pred:       10
  if (i_10 < width_21(D))
    goto <bb 12>;
  else
    goto <bb 15>;
;;    succ:       12
;;                15

;;   basic block 12, loop depth 4
;;    pred:       11
  if (j_9 >= 0)
    goto <bb 13>;
  else
    goto <bb 15>;
;;    succ:       13
;;                15

;;   basic block 13, loop depth 4
;;    pred:       12
  if (j_9 < height_19(D))
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14
;;                15

;;   basic block 14, loop depth 4
;;    pred:       13
  _28 = j_9 * width_21(D);
  _29 = _28 + i_10;
  _30 = (sizetype) _29;
  _32 = src_31(D) + _30;
  _33 = *_32;
  _34 = (int) _33;
  sum_35 = _34 + sum_4;
  total_36 = total_7 + 1;
;;    succ:       15

;;   basic block 15, loop depth 4
;;    pred:       10
;;                11
;;                12
;;                13
;;                14
  # sum_5 = PHI <sum_4(10), sum_4(11), sum_4(12), sum_4(13), sum_35(14)>
  # total_8 = PHI <total_7(10), total_7(11), total_7(12), total_7(13), total_36(14)>
  i_37 = i_10 + 1;
  goto <bb 9>;
;;    succ:       9

;;   basic block 16, loop depth 3
;;    pred:       9
  j_38 = j_9 + 1;
  goto <bb 7>;
;;    succ:       7

;;   basic block 17, loop depth 2
;;    pred:       7
  _39 = y_1 * width_21(D);
  _40 = _39 + x_2;
  _41 = (sizetype) _40;
  _43 = dst_42(D) + _41;
  _44 = sum_3 / total_6;
  _45 = (char) _44;
  *_43 = _45;
  x_47 = x_2 + 1;
  goto <bb 5>;
;;    succ:       5

;;   basic block 18, loop depth 1
;;    pred:       5
  y_48 = y_1 + 1;
  goto <bb 3>;
;;    succ:       3

;;   basic block 19, loop depth 0
;;    pred:       3
  return;
;;    succ:       EXIT

}


Partition 7: size 4 align 4
	right_16
Partition 6: size 4 align 4
	left_14
Partition 5: size 4 align 4
	i_10
Partition 4: size 4 align 4
	j_9
Partition 3: size 4 align 4
	total_6
Partition 2: size 4 align 4
	sum_3
Partition 1: size 4 align 4
	x_2
Partition 0: size 4 align 4
	y_1

;; Generating RTL for gimple basic block 2

;; left_14 = boxSize_13(D) / 2;

(insn 10 9 11 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [0 boxSize+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:7 -1
     (nil))

(insn 11 10 12 (parallel [
            (set (reg:SI 104)
                (lshiftrt:SI (reg:SI 103)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:7 -1
     (nil))

(insn 12 11 13 (parallel [
            (set (reg:SI 105)
                (plus:SI (reg:SI 104)
                    (reg:SI 103)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:7 -1
     (nil))

(insn 13 12 14 (parallel [
            (set (reg:SI 106)
                (ashiftrt:SI (reg:SI 105)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:7 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 103)
            (const_int 2 [0x2]))
        (nil)))

(insn 14 13 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 left+0 S4 A32])
        (reg:SI 106)) /home/kai/git_repos/obme/lowpass.cpp:7 -1
     (nil))

;; _15 = left_14 + 1;

(insn 15 14 16 (set (reg:SI 107)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 left+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:8 -1
     (nil))

(insn 16 15 0 (parallel [
            (set (reg:SI 87 [ D.2421 ])
                (plus:SI (reg:SI 107)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:8 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 left+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

;; right_16 = boxSize_13(D) - _15;

(insn 20 16 21 (set (reg:SI 111)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [0 boxSize+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:8 -1
     (nil))

(insn 21 20 22 (parallel [
            (set (reg:SI 110)
                (minus:SI (reg:SI 111)
                    (reg:SI 87 [ D.2421 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:8 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -52 [0xffffffffffffffcc])) [0 boxSize+0 S4 A32])
            (reg:SI 87 [ D.2421 ]))
        (nil)))

(insn 22 21 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 right+0 S4 A32])
        (reg:SI 110)) /home/kai/git_repos/obme/lowpass.cpp:8 -1
     (nil))

;; y_17 = 0;

(insn 23 22 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/lowpass.cpp:10 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; if (y_1 >= height_19(D))

(insn 25 24 26 (set (reg:SI 112)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:10 -1
     (nil))

(insn 26 25 27 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 112)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -60 [0xffffffffffffffc4])) [0 height+0 S4 A32]))) /home/kai/git_repos/obme/lowpass.cpp:10 -1
     (nil))

(jump_insn 27 26 0 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) /home/kai/git_repos/obme/lowpass.cpp:10 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; x_20 = 0;

(insn 29 28 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/lowpass.cpp:11 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; if (x_2 >= width_21(D))

(insn 31 30 32 (set (reg:SI 113)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:11 -1
     (nil))

(insn 32 31 33 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 113)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 width+0 S4 A32]))) /home/kai/git_repos/obme/lowpass.cpp:11 -1
     (nil))

(jump_insn 33 32 0 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) /home/kai/git_repos/obme/lowpass.cpp:11 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; sum_22 = 0;

(insn 35 34 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sum+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/lowpass.cpp:12 -1
     (nil))

;; total_23 = 0;

(insn 36 35 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 total+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/lowpass.cpp:13 -1
     (nil))

;; j_24 = y_1 - left_14;

(insn 40 36 41 (set (reg:SI 117)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:16 -1
     (nil))

(insn 41 40 42 (parallel [
            (set (reg:SI 116)
                (minus:SI (reg:SI 117)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 left+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:16 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 left+0 S4 A32]))
        (nil)))

(insn 42 41 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
        (reg:SI 116)) /home/kai/git_repos/obme/lowpass.cpp:16 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; _25 = y_1 + right_16;

(insn 44 43 45 (set (reg:SI 118)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:16 -1
     (nil))

(insn 45 44 46 (set (reg:SI 119)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 right+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:16 -1
     (nil))

(insn 46 45 0 (parallel [
            (set (reg:SI 88 [ D.2421 ])
                (plus:SI (reg:SI 118)
                    (reg:SI 119)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:16 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 right+0 S4 A32]))
        (nil)))

;; if (_25 < j_9)

(insn 47 46 48 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88 [ D.2421 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32]))) /home/kai/git_repos/obme/lowpass.cpp:16 -1
     (nil))

(jump_insn 48 47 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) /home/kai/git_repos/obme/lowpass.cpp:16 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; i_26 = x_2 - left_14;

(insn 53 49 54 (set (reg:SI 123)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:17 -1
     (nil))

(insn 54 53 55 (parallel [
            (set (reg:SI 122)
                (minus:SI (reg:SI 123)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 left+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:17 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 left+0 S4 A32]))
        (nil)))

(insn 55 54 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (reg:SI 122)) /home/kai/git_repos/obme/lowpass.cpp:17 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; _27 = x_2 + right_16;

(insn 57 56 58 (set (reg:SI 124)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:17 -1
     (nil))

(insn 58 57 59 (set (reg:SI 125)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 right+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:17 -1
     (nil))

(insn 59 58 0 (parallel [
            (set (reg:SI 89 [ D.2421 ])
                (plus:SI (reg:SI 124)
                    (reg:SI 125)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:17 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 right+0 S4 A32]))
        (nil)))

;; if (_27 < i_10)

(insn 60 59 61 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 89 [ D.2421 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32]))) /home/kai/git_repos/obme/lowpass.cpp:17 -1
     (nil))

(jump_insn 61 60 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) /home/kai/git_repos/obme/lowpass.cpp:17 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; if (i_10 >= 0)

(insn 63 62 64 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 0 [0]))) /home/kai/git_repos/obme/lowpass.cpp:18 -1
     (nil))

(jump_insn 64 63 0 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) /home/kai/git_repos/obme/lowpass.cpp:18 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; if (i_10 < width_21(D))

(insn 66 65 67 (set (reg:SI 126)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:18 -1
     (nil))

(insn 67 66 68 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 126)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 width+0 S4 A32]))) /home/kai/git_repos/obme/lowpass.cpp:18 -1
     (nil))

(jump_insn 68 67 0 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) /home/kai/git_repos/obme/lowpass.cpp:18 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; if (j_9 >= 0)

(insn 70 69 71 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
            (const_int 0 [0]))) /home/kai/git_repos/obme/lowpass.cpp:18 -1
     (nil))

(jump_insn 71 70 0 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) /home/kai/git_repos/obme/lowpass.cpp:18 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; if (j_9 < height_19(D))

(insn 73 72 74 (set (reg:SI 127)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:19 -1
     (nil))

(insn 74 73 75 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 127)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -60 [0xffffffffffffffc4])) [0 height+0 S4 A32]))) /home/kai/git_repos/obme/lowpass.cpp:19 -1
     (nil))

(jump_insn 75 74 0 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) /home/kai/git_repos/obme/lowpass.cpp:19 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; _28 = j_9 * width_21(D);

(insn 77 76 78 (set (reg:SI 128)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:20 -1
     (nil))

(insn 78 77 0 (parallel [
            (set (reg:SI 90 [ D.2421 ])
                (mult:SI (reg:SI 128)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -56 [0xffffffffffffffc8])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:20 -1
     (nil))

;; _29 = _28 + i_10;

(insn 79 78 80 (set (reg:SI 129)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:20 -1
     (nil))

(insn 80 79 0 (parallel [
            (set (reg:SI 91 [ D.2421 ])
                (plus:SI (reg:SI 90 [ D.2421 ])
                    (reg:SI 129)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:20 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 90 [ D.2421 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32]))
        (nil)))

;; _30 = (sizetype) _29;

(insn 81 80 0 (set (reg:DI 92 [ D.2422 ])
        (sign_extend:DI (reg:SI 91 [ D.2421 ]))) /home/kai/git_repos/obme/lowpass.cpp:20 -1
     (nil))

;; _32 = src_31(D) + _30;

(insn 82 81 83 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 src+0 S8 A64])) /home/kai/git_repos/obme/lowpass.cpp:20 -1
     (nil))

(insn 83 82 0 (parallel [
            (set (reg/f:DI 93 [ D.2423 ])
                (plus:DI (reg:DI 92 [ D.2422 ])
                    (reg/f:DI 130)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:20 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 src+0 S8 A64])
            (reg:DI 92 [ D.2422 ]))
        (nil)))

;; _33 = *_32;

(insn 84 83 0 (set (reg:QI 94 [ D.2424 ])
        (mem:QI (reg/f:DI 93 [ D.2423 ]) [0 *_32+0 S1 A8])) /home/kai/git_repos/obme/lowpass.cpp:20 -1
     (nil))

;; _34 = (int) _33;

(insn 85 84 0 (set (reg:SI 95 [ D.2421 ])
        (sign_extend:SI (reg:QI 94 [ D.2424 ]))) /home/kai/git_repos/obme/lowpass.cpp:20 -1
     (nil))

;; sum_35 = _34 + sum_4;

(insn 86 85 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -24 [0xffffffffffffffe8])) [0 sum+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [0 sum+0 S4 A32])
                    (reg:SI 95 [ D.2421 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:20 -1
     (nil))

;; total_36 = total_7 + 1;

(insn 87 86 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 total+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 total+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:21 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; 

(code_label 88 87 89 6 "" [0 uses])

(note 89 88 0 NOTE_INSN_BASIC_BLOCK)

;; i_37 = i_10 + 1;

(insn 90 89 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:17 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; 

(code_label 94 93 95 5 "" [0 uses])

(note 95 94 0 NOTE_INSN_BASIC_BLOCK)

;; j_38 = j_9 + 1;

(insn 96 95 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:16 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; 

(code_label 100 99 101 4 "" [0 uses])

(note 101 100 0 NOTE_INSN_BASIC_BLOCK)

;; _39 = y_1 * width_21(D);

(insn 102 101 103 (set (reg:SI 131)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:24 -1
     (nil))

(insn 103 102 0 (parallel [
            (set (reg:SI 96 [ D.2421 ])
                (mult:SI (reg:SI 131)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -56 [0xffffffffffffffc8])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:24 -1
     (nil))

;; _40 = _39 + x_2;

(insn 104 103 105 (set (reg:SI 132)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:24 -1
     (nil))

(insn 105 104 0 (parallel [
            (set (reg:SI 97 [ D.2421 ])
                (plus:SI (reg:SI 96 [ D.2421 ])
                    (reg:SI 132)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:24 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 96 [ D.2421 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32]))
        (nil)))

;; _41 = (sizetype) _40;

(insn 106 105 0 (set (reg:DI 98 [ D.2422 ])
        (sign_extend:DI (reg:SI 97 [ D.2421 ]))) /home/kai/git_repos/obme/lowpass.cpp:24 -1
     (nil))

;; _43 = dst_42(D) + _41;

(insn 107 106 108 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 dst+0 S8 A64])) /home/kai/git_repos/obme/lowpass.cpp:24 -1
     (nil))

(insn 108 107 0 (parallel [
            (set (reg/f:DI 99 [ D.2423 ])
                (plus:DI (reg:DI 98 [ D.2422 ])
                    (reg/f:DI 133)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:24 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [0 dst+0 S8 A64])
            (reg:DI 98 [ D.2422 ]))
        (nil)))

;; _44 = sum_3 / total_6;

(insn 109 108 110 (set (reg:SI 136)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sum+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:24 -1
     (nil))

(insn 110 109 111 (parallel [
            (set (reg:SI 134)
                (div:SI (reg:SI 136)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 total+0 S4 A32])))
            (set (reg:SI 135)
                (mod:SI (reg:SI 136)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 total+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:24 -1
     (nil))

(insn 111 110 0 (set (reg:SI 100 [ D.2421 ])
        (reg:SI 134)) /home/kai/git_repos/obme/lowpass.cpp:24 -1
     (nil))

;; _45 = (char) _44;

(insn 112 111 0 (set (reg:QI 101 [ D.2424 ])
        (subreg:QI (reg:SI 100 [ D.2421 ]) 0)) /home/kai/git_repos/obme/lowpass.cpp:24 -1
     (nil))

;; *_43 = _45;

(insn 113 112 0 (set (mem:QI (reg/f:DI 99 [ D.2423 ]) [0 *_43+0 S1 A8])
        (reg:QI 101 [ D.2424 ])) /home/kai/git_repos/obme/lowpass.cpp:24 -1
     (nil))

;; x_47 = x_2 + 1;

(insn 114 113 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:11 -1
     (nil))

;; Generating RTL for gimple basic block 18

;; 

(code_label 118 117 119 3 "" [0 uses])

(note 119 118 0 NOTE_INSN_BASIC_BLOCK)

;; y_48 = y_1 + 1;

(insn 120 119 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:10 -1
     (nil))

;; Generating RTL for gimple basic block 19

;; 

(code_label 124 123 125 2 "" [0 uses])

(note 125 124 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 4->20 redirected to 21
deleting block 20


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 src+0 S8 A64])
        (reg:DI 5 di [ src ])) /home/kai/git_repos/obme/lowpass.cpp:6 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 dst+0 S8 A64])
        (reg:DI 4 si [ dst ])) /home/kai/git_repos/obme/lowpass.cpp:6 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [0 boxSize+0 S4 A32])
        (reg:SI 1 dx [ boxSize ])) /home/kai/git_repos/obme/lowpass.cpp:6 -1
     (nil))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 width+0 S4 A32])
        (reg:SI 2 cx [ width ])) /home/kai/git_repos/obme/lowpass.cpp:6 -1
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -60 [0xffffffffffffffc4])) [0 height+0 S4 A32])
        (reg:SI 37 r8 [ height ])) /home/kai/git_repos/obme/lowpass.cpp:6 -1
     (nil))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [0 boxSize+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:7 -1
     (nil))
(insn 11 10 12 2 (parallel [
            (set (reg:SI 104)
                (lshiftrt:SI (reg:SI 103)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:7 -1
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:SI 105)
                (plus:SI (reg:SI 104)
                    (reg:SI 103)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:7 -1
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:SI 106)
                (ashiftrt:SI (reg:SI 105)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:7 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 103)
            (const_int 2 [0x2]))
        (nil)))
(insn 14 13 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 left+0 S4 A32])
        (reg:SI 106)) /home/kai/git_repos/obme/lowpass.cpp:7 -1
     (nil))
(insn 15 14 16 2 (set (reg:SI 107)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 left+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:8 -1
     (nil))
(insn 16 15 20 2 (parallel [
            (set (reg:SI 87 [ D.2421 ])
                (plus:SI (reg:SI 107)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:8 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 left+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 20 16 21 2 (set (reg:SI 111)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [0 boxSize+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:8 -1
     (nil))
(insn 21 20 22 2 (parallel [
            (set (reg:SI 110)
                (minus:SI (reg:SI 111)
                    (reg:SI 87 [ D.2421 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:8 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -52 [0xffffffffffffffcc])) [0 boxSize+0 S4 A32])
            (reg:SI 87 [ D.2421 ]))
        (nil)))
(insn 22 21 23 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 right+0 S4 A32])
        (reg:SI 110)) /home/kai/git_repos/obme/lowpass.cpp:8 -1
     (nil))
(insn 23 22 121 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/lowpass.cpp:10 -1
     (nil))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              19 (DFS_BACK)
(code_label 121 23 24 4 10 "" [1 uses])
(note 24 121 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (reg:SI 112)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:10 -1
     (nil))
(insn 26 25 27 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 112)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -60 [0xffffffffffffffc4])) [0 height+0 S4 A32]))) /home/kai/git_repos/obme/lowpass.cpp:10 -1
     (nil))
(jump_insn 27 26 28 4 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 126)
            (pc))) /home/kai/git_repos/obme/lowpass.cpp:10 612 {*jcc_1}
     (nil)
 -> 126)
;;  succ:       21
;;              5 (FALLTHRU)

;; basic block 5, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 28 27 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 115 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/lowpass.cpp:11 -1
     (nil))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
;;              18 (DFS_BACK)
(code_label 115 29 30 6 9 "" [1 uses])
(note 30 115 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (set (reg:SI 113)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:11 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 113)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 width+0 S4 A32]))) /home/kai/git_repos/obme/lowpass.cpp:11 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 118)
            (pc))) /home/kai/git_repos/obme/lowpass.cpp:11 -1
     (nil)
 -> 118)
;;  succ:       19
;;              7 (FALLTHRU)

;; basic block 7, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sum+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/lowpass.cpp:12 -1
     (nil))
(insn 36 35 40 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 total+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/lowpass.cpp:13 -1
     (nil))
(insn 40 36 41 7 (set (reg:SI 117)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:16 -1
     (nil))
(insn 41 40 42 7 (parallel [
            (set (reg:SI 116)
                (minus:SI (reg:SI 117)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 left+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:16 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 left+0 S4 A32]))
        (nil)))
(insn 42 41 97 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
        (reg:SI 116)) /home/kai/git_repos/obme/lowpass.cpp:16 -1
     (nil))
;;  succ:       8 (FALLTHRU)

;; basic block 8, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
;;              17 (DFS_BACK)
(code_label 97 42 43 8 8 "" [1 uses])
(note 43 97 44 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 8 (set (reg:SI 118)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:16 -1
     (nil))
(insn 45 44 46 8 (set (reg:SI 119)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 right+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:16 -1
     (nil))
(insn 46 45 47 8 (parallel [
            (set (reg:SI 88 [ D.2421 ])
                (plus:SI (reg:SI 118)
                    (reg:SI 119)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:16 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 right+0 S4 A32]))
        (nil)))
(insn 47 46 48 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88 [ D.2421 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32]))) /home/kai/git_repos/obme/lowpass.cpp:16 -1
     (nil))
(jump_insn 48 47 49 8 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 100)
            (pc))) /home/kai/git_repos/obme/lowpass.cpp:16 -1
     (nil)
 -> 100)
;;  succ:       18
;;              9 (FALLTHRU)

;; basic block 9, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 49 48 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 53 49 54 9 (set (reg:SI 123)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:17 -1
     (nil))
(insn 54 53 55 9 (parallel [
            (set (reg:SI 122)
                (minus:SI (reg:SI 123)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 left+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:17 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 left+0 S4 A32]))
        (nil)))
(insn 55 54 91 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (reg:SI 122)) /home/kai/git_repos/obme/lowpass.cpp:17 -1
     (nil))
;;  succ:       10 (FALLTHRU)

;; basic block 10, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
;;              16 (DFS_BACK)
(code_label 91 55 56 10 7 "" [1 uses])
(note 56 91 57 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 10 (set (reg:SI 124)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:17 -1
     (nil))
(insn 58 57 59 10 (set (reg:SI 125)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 right+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:17 -1
     (nil))
(insn 59 58 60 10 (parallel [
            (set (reg:SI 89 [ D.2421 ])
                (plus:SI (reg:SI 124)
                    (reg:SI 125)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:17 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 right+0 S4 A32]))
        (nil)))
(insn 60 59 61 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 89 [ D.2421 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32]))) /home/kai/git_repos/obme/lowpass.cpp:17 -1
     (nil))
(jump_insn 61 60 62 10 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) /home/kai/git_repos/obme/lowpass.cpp:17 -1
     (nil)
 -> 94)
;;  succ:       17
;;              11 (FALLTHRU)

;; basic block 11, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 (FALLTHRU)
(note 62 61 63 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 11 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 0 [0]))) /home/kai/git_repos/obme/lowpass.cpp:18 -1
     (nil))
(jump_insn 64 63 65 11 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) /home/kai/git_repos/obme/lowpass.cpp:18 -1
     (nil)
 -> 88)
;;  succ:       12 (FALLTHRU)
;;              16

;; basic block 12, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
(note 65 64 66 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 12 (set (reg:SI 126)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:18 -1
     (nil))
(insn 67 66 68 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 126)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 width+0 S4 A32]))) /home/kai/git_repos/obme/lowpass.cpp:18 -1
     (nil))
(jump_insn 68 67 69 12 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) /home/kai/git_repos/obme/lowpass.cpp:18 -1
     (nil)
 -> 88)
;;  succ:       13 (FALLTHRU)
;;              16

;; basic block 13, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 (FALLTHRU)
(note 69 68 70 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 13 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
            (const_int 0 [0]))) /home/kai/git_repos/obme/lowpass.cpp:18 -1
     (nil))
(jump_insn 71 70 72 13 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) /home/kai/git_repos/obme/lowpass.cpp:18 -1
     (nil)
 -> 88)
;;  succ:       14 (FALLTHRU)
;;              16

;; basic block 14, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       13 (FALLTHRU)
(note 72 71 73 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 14 (set (reg:SI 127)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:19 -1
     (nil))
(insn 74 73 75 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 127)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -60 [0xffffffffffffffc4])) [0 height+0 S4 A32]))) /home/kai/git_repos/obme/lowpass.cpp:19 -1
     (nil))
(jump_insn 75 74 76 14 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) /home/kai/git_repos/obme/lowpass.cpp:19 -1
     (nil)
 -> 88)
;;  succ:       15 (FALLTHRU)
;;              16

;; basic block 15, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 (FALLTHRU)
(note 76 75 77 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 15 (set (reg:SI 128)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:20 -1
     (nil))
(insn 78 77 79 15 (parallel [
            (set (reg:SI 90 [ D.2421 ])
                (mult:SI (reg:SI 128)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -56 [0xffffffffffffffc8])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:20 -1
     (nil))
(insn 79 78 80 15 (set (reg:SI 129)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:20 -1
     (nil))
(insn 80 79 81 15 (parallel [
            (set (reg:SI 91 [ D.2421 ])
                (plus:SI (reg:SI 90 [ D.2421 ])
                    (reg:SI 129)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:20 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 90 [ D.2421 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32]))
        (nil)))
(insn 81 80 82 15 (set (reg:DI 92 [ D.2422 ])
        (sign_extend:DI (reg:SI 91 [ D.2421 ]))) /home/kai/git_repos/obme/lowpass.cpp:20 -1
     (nil))
(insn 82 81 83 15 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 src+0 S8 A64])) /home/kai/git_repos/obme/lowpass.cpp:20 -1
     (nil))
(insn 83 82 84 15 (parallel [
            (set (reg/f:DI 93 [ D.2423 ])
                (plus:DI (reg:DI 92 [ D.2422 ])
                    (reg/f:DI 130)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:20 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 src+0 S8 A64])
            (reg:DI 92 [ D.2422 ]))
        (nil)))
(insn 84 83 85 15 (set (reg:QI 94 [ D.2424 ])
        (mem:QI (reg/f:DI 93 [ D.2423 ]) [0 *_32+0 S1 A8])) /home/kai/git_repos/obme/lowpass.cpp:20 -1
     (nil))
(insn 85 84 86 15 (set (reg:SI 95 [ D.2421 ])
        (sign_extend:SI (reg:QI 94 [ D.2424 ]))) /home/kai/git_repos/obme/lowpass.cpp:20 -1
     (nil))
(insn 86 85 87 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -24 [0xffffffffffffffe8])) [0 sum+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [0 sum+0 S4 A32])
                    (reg:SI 95 [ D.2421 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:20 -1
     (nil))
(insn 87 86 88 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 total+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 total+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:21 -1
     (nil))
;;  succ:       16 (FALLTHRU)

;; basic block 16, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
;;              12
;;              13
;;              14
;;              15 (FALLTHRU)
(code_label 88 87 89 16 6 "" [4 uses])
(note 89 88 90 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 92 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:17 -1
     (nil))
(jump_insn 92 90 93 16 (set (pc)
        (label_ref 91)) /home/kai/git_repos/obme/lowpass.cpp:17 -1
     (nil)
 -> 91)
;;  succ:       10 (DFS_BACK)

(barrier 93 92 94)
;; basic block 17, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       10
(code_label 94 93 95 17 5 "" [1 uses])
(note 95 94 96 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 98 17 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:16 -1
     (nil))
(jump_insn 98 96 99 17 (set (pc)
        (label_ref 97)) /home/kai/git_repos/obme/lowpass.cpp:16 -1
     (nil)
 -> 97)
;;  succ:       8 (DFS_BACK)

(barrier 99 98 100)
;; basic block 18, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
(code_label 100 99 101 18 4 "" [1 uses])
(note 101 100 102 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 18 (set (reg:SI 131)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:24 -1
     (nil))
(insn 103 102 104 18 (parallel [
            (set (reg:SI 96 [ D.2421 ])
                (mult:SI (reg:SI 131)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -56 [0xffffffffffffffc8])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:24 -1
     (nil))
(insn 104 103 105 18 (set (reg:SI 132)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:24 -1
     (nil))
(insn 105 104 106 18 (parallel [
            (set (reg:SI 97 [ D.2421 ])
                (plus:SI (reg:SI 96 [ D.2421 ])
                    (reg:SI 132)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:24 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 96 [ D.2421 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32]))
        (nil)))
(insn 106 105 107 18 (set (reg:DI 98 [ D.2422 ])
        (sign_extend:DI (reg:SI 97 [ D.2421 ]))) /home/kai/git_repos/obme/lowpass.cpp:24 -1
     (nil))
(insn 107 106 108 18 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 dst+0 S8 A64])) /home/kai/git_repos/obme/lowpass.cpp:24 -1
     (nil))
(insn 108 107 109 18 (parallel [
            (set (reg/f:DI 99 [ D.2423 ])
                (plus:DI (reg:DI 98 [ D.2422 ])
                    (reg/f:DI 133)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:24 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [0 dst+0 S8 A64])
            (reg:DI 98 [ D.2422 ]))
        (nil)))
(insn 109 108 110 18 (set (reg:SI 136)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 sum+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:24 -1
     (nil))
(insn 110 109 111 18 (parallel [
            (set (reg:SI 134)
                (div:SI (reg:SI 136)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 total+0 S4 A32])))
            (set (reg:SI 135)
                (mod:SI (reg:SI 136)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 total+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:24 -1
     (nil))
(insn 111 110 112 18 (set (reg:SI 100 [ D.2421 ])
        (reg:SI 134)) /home/kai/git_repos/obme/lowpass.cpp:24 -1
     (nil))
(insn 112 111 113 18 (set (reg:QI 101 [ D.2424 ])
        (subreg:QI (reg:SI 100 [ D.2421 ]) 0)) /home/kai/git_repos/obme/lowpass.cpp:24 -1
     (nil))
(insn 113 112 114 18 (set (mem:QI (reg/f:DI 99 [ D.2423 ]) [0 *_43+0 S1 A8])
        (reg:QI 101 [ D.2424 ])) /home/kai/git_repos/obme/lowpass.cpp:24 -1
     (nil))
(insn 114 113 116 18 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:11 -1
     (nil))
(jump_insn 116 114 117 18 (set (pc)
        (label_ref 115)) /home/kai/git_repos/obme/lowpass.cpp:11 -1
     (nil)
 -> 115)
;;  succ:       6 (DFS_BACK)

(barrier 117 116 118)
;; basic block 19, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 18, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
(code_label 118 117 119 19 3 "" [1 uses])
(note 119 118 120 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 122 19 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:10 -1
     (nil))
(jump_insn 122 120 123 19 (set (pc)
        (label_ref 121)) /home/kai/git_repos/obme/lowpass.cpp:10 -1
     (nil)
 -> 121)
;;  succ:       4 (DFS_BACK)

(barrier 123 122 126)
;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 126 123 127 21 1 "" [1 uses])
(note 127 126 0 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)

