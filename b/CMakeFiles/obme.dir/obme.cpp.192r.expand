
;; Function int calcSAD(imgpel*, imgpel*, int, int) (_Z7calcSADPcS_ii, funcdef_no=1384, decl_uid=33301, cgraph_uid=400, symbol_order=402)

int calcSAD(imgpel*, imgpel*, int, int) (imgpel * blk1, imgpel * blk2, int width, int blocksize)
{
  imgpel pel2;
  imgpel pel1;
  int x;
  int y;
  int sad;
  int D.34957;
  int D.34956;
  int D.34955;
  int D.34954;
  int D.34953;
  imgpel * D.34952;
  sizetype D.34951;
  sizetype D.34950;
  int D.34949;
  sizetype D.34948;
  imgpel * D.34947;
  sizetype D.34946;
  sizetype D.34945;
  int D.34944;
  sizetype D.34943;
  sizetype _9;
  int _11;
  sizetype _12;
  sizetype _13;
  imgpel * _15;
  sizetype _18;
  int _19;
  sizetype _20;
  sizetype _21;
  imgpel * _23;
  int _25;
  int _26;
  int _27;
  int _28;
  int _32;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  sad_5 = 0;
  y_6 = 0;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                7
  # sad_1 = PHI <sad_5(2), sad_2(7)>
  # y_3 = PHI <y_6(2), y_31(7)>
  if (y_3 >= blocksize_7(D))
    goto <bb 8>;
  else
    goto <bb 4>;
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  x_8 = 0;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                6
  # sad_2 = PHI <sad_1(4), sad_29(6)>
  # x_4 = PHI <x_8(4), x_30(6)>
  if (x_4 >= blocksize_7(D))
    goto <bb 7>;
  else
    goto <bb 6>;
;;    succ:       7
;;                6

;;   basic block 6, loop depth 2
;;    pred:       5
  _9 = (sizetype) x_4;
  _11 = y_3 * width_10(D);
  _12 = (sizetype) _11;
  _13 = _9 + _12;
  _15 = blk1_14(D) + _13;
  pel1_17 = *_15;
  _18 = (sizetype) x_4;
  _19 = y_3 * width_10(D);
  _20 = (sizetype) _19;
  _21 = _18 + _20;
  _23 = blk2_22(D) + _21;
  pel2_24 = *_23;
  _25 = (int) pel1_17;
  _26 = (int) pel2_24;
  _27 = _25 - _26;
  _28 = ABS_EXPR <_27>;
  sad_29 = _28 + sad_2;
  x_30 = x_4 + 1;
  goto <bb 5>;
;;    succ:       5

;;   basic block 7, loop depth 1
;;    pred:       5
  y_31 = y_3 + 1;
  goto <bb 3>;
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       3
  _32 = sad_1;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       8
<L6>:
  return _32;
;;    succ:       EXIT

}



Partition map 

Partition 1 (sad_1 - 1 )
Partition 2 (sad_2 - 2 )
Partition 3 (y_3 - 3 )
Partition 4 (x_4 - 4 )
Partition 5 (sad_5 - 5 )
Partition 6 (y_6 - 6 )
Partition 7 (blocksize_7(D) - 7 )
Partition 8 (x_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (width_10(D) - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (blk1_14(D) - 14 )
Partition 15 (_15 - 15 )
Partition 17 (pel1_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (blk2_22(D) - 22 )
Partition 23 (_23 - 23 )
Partition 24 (pel2_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (sad_29 - 29 )
Partition 30 (x_30 - 30 )
Partition 31 (y_31 - 31 )
Partition 32 (_32 - 32 )


Partition map 

Partition 0 (sad_1 - 1 )
Partition 1 (sad_2 - 2 )
Partition 2 (y_3 - 3 )
Partition 3 (x_4 - 4 )
Partition 4 (sad_5 - 5 )
Partition 5 (y_6 - 6 )
Partition 6 (blocksize_7(D) - 7 )
Partition 7 (x_8 - 8 )
Partition 8 (width_10(D) - 10 )
Partition 9 (blk1_14(D) - 14 )
Partition 10 (blk2_22(D) - 22 )
Partition 11 (sad_29 - 29 )
Partition 12 (x_30 - 30 )
Partition 13 (y_31 - 31 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) sad_1 <-> sad_2
(2147483646) sad_1 <-> sad_5
(2147483646) sad_1 <-> sad_29
(2147483646) y_3 <-> y_6
(2147483646) y_3 <-> y_31
(2147483646) x_4 <-> x_8
(2147483646) x_4 <-> x_30

Partition map 

Partition 0 (sad_1 - 1 )
Partition 1 (sad_2 - 2 )
Partition 2 (y_3 - 3 )
Partition 3 (x_4 - 4 )
Partition 4 (sad_5 - 5 )
Partition 5 (y_6 - 6 )
Partition 6 (blocksize_7(D) - 7 )
Partition 7 (x_8 - 8 )
Partition 8 (width_10(D) - 10 )
Partition 9 (blk1_14(D) - 14 )
Partition 10 (blk2_22(D) - 22 )
Partition 11 (sad_29 - 29 )
Partition 12 (x_30 - 30 )
Partition 13 (y_31 - 31 )

Coalesce list: (1)sad_1 & (2)sad_2 [map: 0, 1] : Success -> 0
Coalesce list: (1)sad_1 & (5)sad_5 [map: 0, 4] : Success -> 0
Coalesce list: (1)sad_1 & (29)sad_29 [map: 0, 11] : Success -> 0
Coalesce list: (3)y_3 & (6)y_6 [map: 2, 5] : Success -> 2
Coalesce list: (3)y_3 & (31)y_31 [map: 2, 13] : Success -> 2
Coalesce list: (4)x_4 & (8)x_8 [map: 3, 7] : Success -> 3
Coalesce list: (4)x_4 & (30)x_30 [map: 3, 12] : Success -> 3
Coalesce list: (4)x_4 & (30)x_4: Already Coalesced.
Coalesce list: (4)x_4 & (8)x_4: Already Coalesced.
Coalesce list: (2)sad_1 & (29)sad_1: Already Coalesced.
Coalesce list: (3)y_3 & (31)y_3: Already Coalesced.
Coalesce list: (3)y_3 & (6)y_3: Already Coalesced.
Coalesce list: (1)sad_1 & (5)sad_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (sad_1 - 1 2 5 29 )
Partition 1 (y_3 - 3 6 31 )
Partition 2 (x_4 - 4 8 30 )
Partition 3 (blocksize_7(D) - 7 )
Partition 4 (_9 - 9 )
Partition 5 (width_10(D) - 10 )
Partition 6 (_11 - 11 )
Partition 7 (_12 - 12 )
Partition 8 (_13 - 13 )
Partition 9 (blk1_14(D) - 14 )
Partition 10 (_15 - 15 )
Partition 11 (pel1_17 - 17 )
Partition 12 (_18 - 18 )
Partition 13 (_19 - 19 )
Partition 14 (_20 - 20 )
Partition 15 (_21 - 21 )
Partition 16 (blk2_22(D) - 22 )
Partition 17 (_23 - 23 )
Partition 18 (pel2_24 - 24 )
Partition 19 (_25 - 25 )
Partition 20 (_26 - 26 )
Partition 21 (_27 - 27 )
Partition 22 (_28 - 28 )
Partition 23 (_32 - 32 )

int calcSAD(imgpel*, imgpel*, int, int) (imgpel * blk1, imgpel * blk2, int width, int blocksize)
{
  imgpel pel2;
  imgpel pel1;
  int x;
  int y;
  int sad;
  int D.34957;
  int D.34956;
  int D.34955;
  int D.34954;
  int D.34953;
  imgpel * D.34952;
  sizetype D.34951;
  sizetype D.34950;
  int D.34949;
  sizetype D.34948;
  imgpel * D.34947;
  sizetype D.34946;
  sizetype D.34945;
  int D.34944;
  sizetype D.34943;
  sizetype _9;
  int _11;
  sizetype _12;
  sizetype _13;
  imgpel * _15;
  sizetype _18;
  int _19;
  sizetype _20;
  sizetype _21;
  imgpel * _23;
  int _25;
  int _26;
  int _27;
  int _28;
  int _32;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  sad_5 = 0;
  y_6 = 0;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                7
  # sad_1 = PHI <sad_5(2), sad_2(7)>
  # y_3 = PHI <y_6(2), y_31(7)>
  if (y_3 >= blocksize_7(D))
    goto <bb 8>;
  else
    goto <bb 4>;
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  x_8 = 0;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                6
  # sad_2 = PHI <sad_1(4), sad_29(6)>
  # x_4 = PHI <x_8(4), x_30(6)>
  if (x_4 >= blocksize_7(D))
    goto <bb 7>;
  else
    goto <bb 6>;
;;    succ:       7
;;                6

;;   basic block 6, loop depth 2
;;    pred:       5
  _9 = (sizetype) x_4;
  _11 = y_3 * width_10(D);
  _12 = (sizetype) _11;
  _13 = _9 + _12;
  _15 = blk1_14(D) + _13;
  pel1_17 = *_15;
  _18 = (sizetype) x_4;
  _19 = y_3 * width_10(D);
  _20 = (sizetype) _19;
  _21 = _18 + _20;
  _23 = blk2_22(D) + _21;
  pel2_24 = *_23;
  _25 = (int) pel1_17;
  _26 = (int) pel2_24;
  _27 = _25 - _26;
  _28 = ABS_EXPR <_27>;
  sad_29 = _28 + sad_2;
  x_30 = x_4 + 1;
  goto <bb 5>;
;;    succ:       5

;;   basic block 7, loop depth 1
;;    pred:       5
  y_31 = y_3 + 1;
  goto <bb 3>;
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       3
  _32 = sad_1;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       8
<L6>:
  return _32;
;;    succ:       EXIT

}


Partition 2: size 4 align 4
	x_4
Partition 1: size 4 align 4
	y_3
Partition 0: size 4 align 4
	sad_1
Partition 4: size 1 align 1
	pel2_24
Partition 3: size 1 align 1
	pel1_17

;; Generating RTL for gimple basic block 2

;; sad_5 = 0;

(insn 9 8 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 sad+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:10 -1
     (nil))

;; y_6 = 0;

(insn 10 9 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 y+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:11 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; if (y_3 >= blocksize_7(D))

(insn 12 11 13 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:11 -1
     (nil))

(insn 13 12 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 103)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 blocksize+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:11 -1
     (nil))

(jump_insn 14 13 0 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) /home/kai/git_repos/obme/obme.cpp:11 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; x_8 = 0;

(insn 16 15 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:12 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; if (x_4 >= blocksize_7(D))

(insn 18 17 19 (set (reg:SI 104)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:12 -1
     (nil))

(insn 19 18 20 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 104)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 blocksize+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:12 -1
     (nil))

(jump_insn 20 19 0 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) /home/kai/git_repos/obme/obme.cpp:12 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; _9 = (sizetype) x_4;

(insn 22 21 23 (set (reg:SI 105)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:14 -1
     (nil))

(insn 23 22 0 (set (reg:DI 87 [ D.35021 ])
        (sign_extend:DI (reg:SI 105))) /home/kai/git_repos/obme/obme.cpp:14 -1
     (nil))

;; _11 = y_3 * width_10(D);

(insn 24 23 25 (set (reg:SI 106)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:14 -1
     (nil))

(insn 25 24 0 (parallel [
            (set (reg:SI 88 [ D.35022 ])
                (mult:SI (reg:SI 106)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -36 [0xffffffffffffffdc])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:14 -1
     (nil))

;; _12 = (sizetype) _11;

(insn 26 25 0 (set (reg:DI 89 [ D.35021 ])
        (sign_extend:DI (reg:SI 88 [ D.35022 ]))) /home/kai/git_repos/obme/obme.cpp:14 -1
     (nil))

;; _13 = _9 + _12;

(insn 27 26 0 (parallel [
            (set (reg:DI 90 [ D.35021 ])
                (plus:DI (reg:DI 87 [ D.35021 ])
                    (reg:DI 89 [ D.35021 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:14 -1
     (nil))

;; _15 = blk1_14(D) + _13;

(insn 28 27 29 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 blk1+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:14 -1
     (nil))

(insn 29 28 0 (parallel [
            (set (reg/f:DI 91 [ D.35023 ])
                (plus:DI (reg:DI 90 [ D.35021 ])
                    (reg/f:DI 107)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:14 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 blk1+0 S8 A64])
            (reg:DI 90 [ D.35021 ]))
        (nil)))

;; pel1_17 = *_15;

(insn 30 29 31 (set (reg:QI 108)
        (mem:QI (reg/f:DI 91 [ D.35023 ]) [0 *_15+0 S1 A8])) /home/kai/git_repos/obme/obme.cpp:14 -1
     (nil))

(insn 31 30 0 (set (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -14 [0xfffffffffffffff2])) [0 pel1+0 S1 A8])
        (reg:QI 108)) /home/kai/git_repos/obme/obme.cpp:14 -1
     (nil))

;; _18 = (sizetype) x_4;

(insn 32 31 33 (set (reg:SI 109)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:15 -1
     (nil))

(insn 33 32 0 (set (reg:DI 92 [ D.35021 ])
        (sign_extend:DI (reg:SI 109))) /home/kai/git_repos/obme/obme.cpp:15 -1
     (nil))

;; _19 = y_3 * width_10(D);

(insn 34 33 35 (set (reg:SI 110)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:15 -1
     (nil))

(insn 35 34 0 (parallel [
            (set (reg:SI 93 [ D.35022 ])
                (mult:SI (reg:SI 110)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -36 [0xffffffffffffffdc])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:15 -1
     (nil))

;; _20 = (sizetype) _19;

(insn 36 35 0 (set (reg:DI 94 [ D.35021 ])
        (sign_extend:DI (reg:SI 93 [ D.35022 ]))) /home/kai/git_repos/obme/obme.cpp:15 -1
     (nil))

;; _21 = _18 + _20;

(insn 37 36 0 (parallel [
            (set (reg:DI 95 [ D.35021 ])
                (plus:DI (reg:DI 92 [ D.35021 ])
                    (reg:DI 94 [ D.35021 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:15 -1
     (nil))

;; _23 = blk2_22(D) + _21;

(insn 38 37 39 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 blk2+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:15 -1
     (nil))

(insn 39 38 0 (parallel [
            (set (reg/f:DI 96 [ D.35023 ])
                (plus:DI (reg:DI 95 [ D.35021 ])
                    (reg/f:DI 111)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:15 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 blk2+0 S8 A64])
            (reg:DI 95 [ D.35021 ]))
        (nil)))

;; pel2_24 = *_23;

(insn 40 39 41 (set (reg:QI 112)
        (mem:QI (reg/f:DI 96 [ D.35023 ]) [0 *_23+0 S1 A8])) /home/kai/git_repos/obme/obme.cpp:15 -1
     (nil))

(insn 41 40 0 (set (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -13 [0xfffffffffffffff3])) [0 pel2+0 S1 A8])
        (reg:QI 112)) /home/kai/git_repos/obme/obme.cpp:15 -1
     (nil))

;; _25 = (int) pel1_17;

(insn 42 41 0 (set (reg:SI 97 [ D.35022 ])
        (sign_extend:SI (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -14 [0xfffffffffffffff2])) [0 pel1+0 S1 A8]))) /home/kai/git_repos/obme/obme.cpp:16 -1
     (nil))

;; _26 = (int) pel2_24;

(insn 43 42 0 (set (reg:SI 98 [ D.35022 ])
        (sign_extend:SI (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -13 [0xfffffffffffffff3])) [0 pel2+0 S1 A8]))) /home/kai/git_repos/obme/obme.cpp:16 -1
     (nil))

;; _27 = _25 - _26;

(insn 44 43 0 (parallel [
            (set (reg:SI 99 [ D.35022 ])
                (minus:SI (reg:SI 97 [ D.35022 ])
                    (reg:SI 98 [ D.35022 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:16 -1
     (nil))

;; _28 = ABS_EXPR <_27>;

(insn 45 44 46 (parallel [
            (set (reg:SI 113)
                (ashiftrt:SI (reg:SI 99 [ D.35022 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:16 -1
     (nil))

(insn 46 45 47 (parallel [
            (set (reg:SI 100 [ D.35022 ])
                (xor:SI (reg:SI 113)
                    (reg:SI 99 [ D.35022 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:16 -1
     (nil))

(insn 47 46 0 (parallel [
            (set (reg:SI 100 [ D.35022 ])
                (minus:SI (reg:SI 100 [ D.35022 ])
                    (reg:SI 113)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:16 -1
     (nil))

;; sad_29 = _28 + sad_2;

(insn 48 47 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [0 sad+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [0 sad+0 S4 A32])
                    (reg:SI 100 [ D.35022 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:16 -1
     (nil))

;; x_30 = x_4 + 1;

(insn 49 48 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:12 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 53 52 54 3 "" [0 uses])

(note 54 53 0 NOTE_INSN_BASIC_BLOCK)

;; y_31 = y_3 + 1;

(insn 55 54 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 y+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 y+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:11 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 59 58 60 2 "" [0 uses])

(note 60 59 0 NOTE_INSN_BASIC_BLOCK)

;; _32 = sad_1;

(insn 61 60 0 (set (reg:SI 101 [ D.35022 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 sad+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:18 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; <L6>:

(code_label 62 61 63 6 "" [0 uses])

(note 63 62 0 NOTE_INSN_BASIC_BLOCK)

;; return _32;

(insn 64 63 65 (set (reg:SI 102 [ <retval> ])
        (reg:SI 101 [ D.35022 ])) /home/kai/git_repos/obme/obme.cpp:18 -1
     (nil))

(jump_insn 65 64 66 (set (pc)
        (label_ref 0)) /home/kai/git_repos/obme/obme.cpp:18 -1
     (nil))

(barrier 66 65 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.
Removing jump 65.
Merging block 11 into block 9...
Merged blocks 9 and 11.
Merged 9 and 11 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 blk1+0 S8 A64])
        (reg:DI 5 di [ blk1 ])) /home/kai/git_repos/obme/obme.cpp:9 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 blk2+0 S8 A64])
        (reg:DI 4 si [ blk2 ])) /home/kai/git_repos/obme/obme.cpp:9 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 width+0 S4 A32])
        (reg:SI 1 dx [ width ])) /home/kai/git_repos/obme/obme.cpp:9 -1
     (nil))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 blocksize+0 S4 A32])
        (reg:SI 2 cx [ blocksize ])) /home/kai/git_repos/obme/obme.cpp:9 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 sad+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:10 -1
     (nil))
(insn 10 9 56 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 y+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:11 -1
     (nil))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
;;              8 (DFS_BACK)
(code_label 56 10 11 4 5 "" [1 uses])
(note 11 56 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:11 -1
     (nil))
(insn 13 12 14 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 103)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 blocksize+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:11 -1
     (nil))
(jump_insn 14 13 15 4 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) /home/kai/git_repos/obme/obme.cpp:11 -1
     (nil)
 -> 59)
;;  succ:       9
;;              5 (FALLTHRU)

;; basic block 5, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 15 14 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 50 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:12 -1
     (nil))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
;;              7 (DFS_BACK)
(code_label 50 16 17 6 4 "" [1 uses])
(note 17 50 18 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 6 (set (reg:SI 104)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:12 -1
     (nil))
(insn 19 18 20 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 104)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [0 blocksize+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:12 -1
     (nil))
(jump_insn 20 19 21 6 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) /home/kai/git_repos/obme/obme.cpp:12 -1
     (nil)
 -> 53)
;;  succ:       8
;;              7 (FALLTHRU)

;; basic block 7, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 21 20 22 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 7 (set (reg:SI 105)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:14 -1
     (nil))
(insn 23 22 24 7 (set (reg:DI 87 [ D.35021 ])
        (sign_extend:DI (reg:SI 105))) /home/kai/git_repos/obme/obme.cpp:14 -1
     (nil))
(insn 24 23 25 7 (set (reg:SI 106)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:14 -1
     (nil))
(insn 25 24 26 7 (parallel [
            (set (reg:SI 88 [ D.35022 ])
                (mult:SI (reg:SI 106)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -36 [0xffffffffffffffdc])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:14 -1
     (nil))
(insn 26 25 27 7 (set (reg:DI 89 [ D.35021 ])
        (sign_extend:DI (reg:SI 88 [ D.35022 ]))) /home/kai/git_repos/obme/obme.cpp:14 -1
     (nil))
(insn 27 26 28 7 (parallel [
            (set (reg:DI 90 [ D.35021 ])
                (plus:DI (reg:DI 87 [ D.35021 ])
                    (reg:DI 89 [ D.35021 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:14 -1
     (nil))
(insn 28 27 29 7 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 blk1+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:14 -1
     (nil))
(insn 29 28 30 7 (parallel [
            (set (reg/f:DI 91 [ D.35023 ])
                (plus:DI (reg:DI 90 [ D.35021 ])
                    (reg/f:DI 107)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:14 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 blk1+0 S8 A64])
            (reg:DI 90 [ D.35021 ]))
        (nil)))
(insn 30 29 31 7 (set (reg:QI 108)
        (mem:QI (reg/f:DI 91 [ D.35023 ]) [0 *_15+0 S1 A8])) /home/kai/git_repos/obme/obme.cpp:14 -1
     (nil))
(insn 31 30 32 7 (set (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -14 [0xfffffffffffffff2])) [0 pel1+0 S1 A8])
        (reg:QI 108)) /home/kai/git_repos/obme/obme.cpp:14 -1
     (nil))
(insn 32 31 33 7 (set (reg:SI 109)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:15 -1
     (nil))
(insn 33 32 34 7 (set (reg:DI 92 [ D.35021 ])
        (sign_extend:DI (reg:SI 109))) /home/kai/git_repos/obme/obme.cpp:15 -1
     (nil))
(insn 34 33 35 7 (set (reg:SI 110)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:15 -1
     (nil))
(insn 35 34 36 7 (parallel [
            (set (reg:SI 93 [ D.35022 ])
                (mult:SI (reg:SI 110)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -36 [0xffffffffffffffdc])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:15 -1
     (nil))
(insn 36 35 37 7 (set (reg:DI 94 [ D.35021 ])
        (sign_extend:DI (reg:SI 93 [ D.35022 ]))) /home/kai/git_repos/obme/obme.cpp:15 -1
     (nil))
(insn 37 36 38 7 (parallel [
            (set (reg:DI 95 [ D.35021 ])
                (plus:DI (reg:DI 92 [ D.35021 ])
                    (reg:DI 94 [ D.35021 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:15 -1
     (nil))
(insn 38 37 39 7 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 blk2+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:15 -1
     (nil))
(insn 39 38 40 7 (parallel [
            (set (reg/f:DI 96 [ D.35023 ])
                (plus:DI (reg:DI 95 [ D.35021 ])
                    (reg/f:DI 111)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:15 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 blk2+0 S8 A64])
            (reg:DI 95 [ D.35021 ]))
        (nil)))
(insn 40 39 41 7 (set (reg:QI 112)
        (mem:QI (reg/f:DI 96 [ D.35023 ]) [0 *_23+0 S1 A8])) /home/kai/git_repos/obme/obme.cpp:15 -1
     (nil))
(insn 41 40 42 7 (set (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -13 [0xfffffffffffffff3])) [0 pel2+0 S1 A8])
        (reg:QI 112)) /home/kai/git_repos/obme/obme.cpp:15 -1
     (nil))
(insn 42 41 43 7 (set (reg:SI 97 [ D.35022 ])
        (sign_extend:SI (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -14 [0xfffffffffffffff2])) [0 pel1+0 S1 A8]))) /home/kai/git_repos/obme/obme.cpp:16 -1
     (nil))
(insn 43 42 44 7 (set (reg:SI 98 [ D.35022 ])
        (sign_extend:SI (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -13 [0xfffffffffffffff3])) [0 pel2+0 S1 A8]))) /home/kai/git_repos/obme/obme.cpp:16 -1
     (nil))
(insn 44 43 45 7 (parallel [
            (set (reg:SI 99 [ D.35022 ])
                (minus:SI (reg:SI 97 [ D.35022 ])
                    (reg:SI 98 [ D.35022 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:16 -1
     (nil))
(insn 45 44 46 7 (parallel [
            (set (reg:SI 113)
                (ashiftrt:SI (reg:SI 99 [ D.35022 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:16 -1
     (nil))
(insn 46 45 47 7 (parallel [
            (set (reg:SI 100 [ D.35022 ])
                (xor:SI (reg:SI 113)
                    (reg:SI 99 [ D.35022 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:16 -1
     (nil))
(insn 47 46 48 7 (parallel [
            (set (reg:SI 100 [ D.35022 ])
                (minus:SI (reg:SI 100 [ D.35022 ])
                    (reg:SI 113)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:16 -1
     (nil))
(insn 48 47 49 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [0 sad+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [0 sad+0 S4 A32])
                    (reg:SI 100 [ D.35022 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:16 -1
     (nil))
(insn 49 48 51 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:12 -1
     (nil))
(jump_insn 51 49 52 7 (set (pc)
        (label_ref 50)) /home/kai/git_repos/obme/obme.cpp:12 -1
     (nil)
 -> 50)
;;  succ:       6 (DFS_BACK)

(barrier 52 51 53)
;; basic block 8, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
(code_label 53 52 54 8 3 "" [1 uses])
(note 54 53 55 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 57 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 y+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 y+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:11 -1
     (nil))
(jump_insn 57 55 58 8 (set (pc)
        (label_ref 56)) /home/kai/git_repos/obme/obme.cpp:11 -1
     (nil)
 -> 56)
;;  succ:       4 (DFS_BACK)

(barrier 58 57 59)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 59 58 60 9 2 "" [1 uses])
(note 60 59 61 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 64 9 (set (reg:SI 101 [ D.35022 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 sad+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:18 -1
     (nil))
(insn 64 61 68 9 (set (reg:SI 102 [ <retval> ])
        (reg:SI 101 [ D.35022 ])) /home/kai/git_repos/obme/obme.cpp:18 -1
     (nil))
(insn 68 64 69 9 (set (reg/i:SI 0 ax)
        (reg:SI 102 [ <retval> ])) /home/kai/git_repos/obme/obme.cpp:19 -1
     (nil))
(insn 69 68 0 9 (use (reg/i:SI 0 ax)) /home/kai/git_repos/obme/obme.cpp:19 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void ES(imgpel*, imgpel*, mvinfo&, int, int, int, int, int) (_Z2ESPcS_R6mvinfoiiiii, funcdef_no=1385, decl_uid=33320, cgraph_uid=401, symbol_order=403)

void ES(imgpel*, imgpel*, mvinfo&, int, int, int, int, int) (imgpel * trg, imgpel * ref, struct mvinfo & mv, int p, int center, int width, int height, int blocksize)
{
  int j;
  int i;
  unsigned int mincost;
  unsigned int cost;
  int loc;
  int y;
  int x;
  int cy;
  int cx;
  int D.34984;
  int D.34983;
  int D.34981;
  int D.34978;
  imgpel * D.34977;
  sizetype D.34976;
  imgpel * D.34975;
  sizetype D.34974;
  int D.34973;
  int D.34972;
  int D.34969;
  int D.34966;
  int _25;
  int _27;
  int _28;
  int _29;
  sizetype _30;
  imgpel * _32;
  sizetype _33;
  imgpel * _35;
  int _37;
  int _39;
  int _49;
  int _51;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  mincost_12 = 4294967295;
  cy_15 = center_13(D) / width_14(D);
  cx_16 = center_13(D) % width_14(D);
  i_18 = -p_17(D);
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                16
  # loc_1 = PHI <loc_19(D)(2), loc_2(16)>
  # mincost_4 = PHI <mincost_12(2), mincost_5(16)>
  # i_7 = PHI <i_18(2), i_43(16)>
  if (i_7 >= p_17(D))
    goto <bb 17>;
  else
    goto <bb 4>;
;;    succ:       17
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  j_21 = -p_17(D);
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                15
  # loc_2 = PHI <loc_1(4), loc_3(15)>
  # mincost_5 = PHI <mincost_4(4), mincost_6(15)>
  # j_8 = PHI <j_21(4), j_42(15)>
  if (j_8 >= p_17(D))
    goto <bb 16>;
  else
    goto <bb 6>;
;;    succ:       16
;;                6

;;   basic block 6, loop depth 2
;;    pred:       5
  y_22 = cy_15 + i_7;
  x_23 = cx_16 + j_8;
  if (x_23 < 0)
    goto <bb 12>;
  else
    goto <bb 7>;
;;    succ:       12
;;                7

;;   basic block 7, loop depth 2
;;    pred:       6
  _25 = width_14(D) - blocksize_24(D);
  if (_25 <= x_23)
    goto <bb 12>;
  else
    goto <bb 8>;
;;    succ:       12
;;                8

;;   basic block 8, loop depth 2
;;    pred:       7
  if (y_22 < 0)
    goto <bb 12>;
  else
    goto <bb 9>;
;;    succ:       12
;;                9

;;   basic block 9, loop depth 2
;;    pred:       8
  _27 = height_26(D) - blocksize_24(D);
  if (_27 <= y_22)
    goto <bb 12>;
  else
    goto <bb 10>;
;;    succ:       12
;;                10

;;   basic block 10, loop depth 2
;;    pred:       9
  if (i_7 == 1)
    goto <bb 11>;
  else
    goto <bb 13>;
;;    succ:       11
;;                13

;;   basic block 11, loop depth 2
;;    pred:       10
  if (j_8 == 1)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12
;;                13

;;   basic block 12, loop depth 2
;;    pred:       6
;;                7
;;                8
;;                9
;;                11
  goto <bb 15>;
;;    succ:       15

;;   basic block 13, loop depth 2
;;    pred:       10
;;                11
  _28 = y_22 * width_14(D);
  _29 = _28 + x_23;
  _30 = (sizetype) _29;
  _32 = ref_31(D) + _30;
  _33 = (sizetype) center_13(D);
  _35 = trg_34(D) + _33;
  _37 = calcSAD (_35, _32, width_14(D), blocksize_24(D));
  cost_38 = (unsigned int) _37;
  if (cost_38 < mincost_5)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14
;;                15

;;   basic block 14, loop depth 2
;;    pred:       13
  _39 = y_22 * width_14(D);
  loc_40 = _39 + x_23;
  mincost_41 = cost_38;
;;    succ:       15

;;   basic block 15, loop depth 2
;;    pred:       12
;;                13
;;                14
  # loc_3 = PHI <loc_2(12), loc_2(13), loc_40(14)>
  # mincost_6 = PHI <mincost_5(12), mincost_5(13), mincost_41(14)>
  j_42 = j_8 + 1;
  goto <bb 5>;
;;    succ:       5

;;   basic block 16, loop depth 1
;;    pred:       5
  i_43 = i_7 + 1;
  goto <bb 3>;
;;    succ:       3

;;   basic block 17, loop depth 0
;;    pred:       3
  x_44 = loc_1 % width_14(D);
  y_45 = loc_1 / width_14(D);
  mv_46(D)->iCx = cx_16;
  mv_46(D)->iCy = cy_15;
  _49 = x_44 - cx_16;
  mv_46(D)->iMvx = _49;
  _51 = y_45 - cy_15;
  mv_46(D)->iMvy = _51;
  mv_46(D)->SAD = mincost_4;
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (loc_1 - 1 )
Partition 2 (loc_2 - 2 )
Partition 3 (loc_3 - 3 )
Partition 4 (mincost_4 - 4 )
Partition 5 (mincost_5 - 5 )
Partition 6 (mincost_6 - 6 )
Partition 7 (i_7 - 7 )
Partition 8 (j_8 - 8 )
Partition 12 (mincost_12 - 12 )
Partition 13 (center_13(D) - 13 )
Partition 14 (width_14(D) - 14 )
Partition 15 (cy_15 - 15 )
Partition 16 (cx_16 - 16 )
Partition 17 (p_17(D) - 17 )
Partition 18 (i_18 - 18 )
Partition 19 (loc_19(D) - 19 )
Partition 21 (j_21 - 21 )
Partition 22 (y_22 - 22 )
Partition 23 (x_23 - 23 )
Partition 24 (blocksize_24(D) - 24 )
Partition 25 (_25 - 25 )
Partition 26 (height_26(D) - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (ref_31(D) - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (trg_34(D) - 34 )
Partition 35 (_35 - 35 )
Partition 37 (_37 - 37 )
Partition 38 (cost_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (loc_40 - 40 )
Partition 41 (mincost_41 - 41 )
Partition 42 (j_42 - 42 )
Partition 43 (i_43 - 43 )
Partition 44 (x_44 - 44 )
Partition 45 (y_45 - 45 )
Partition 46 (mv_46(D) - 46 )
Partition 49 (_49 - 49 )
Partition 51 (_51 - 51 )


Partition map 

Partition 0 (loc_1 - 1 )
Partition 1 (loc_2 - 2 )
Partition 2 (loc_3 - 3 )
Partition 3 (mincost_4 - 4 )
Partition 4 (mincost_5 - 5 )
Partition 5 (mincost_6 - 6 )
Partition 6 (i_7 - 7 )
Partition 7 (j_8 - 8 )
Partition 8 (mincost_12 - 12 )
Partition 9 (center_13(D) - 13 )
Partition 10 (width_14(D) - 14 )
Partition 11 (p_17(D) - 17 )
Partition 12 (i_18 - 18 )
Partition 13 (loc_19(D) - 19 )
Partition 14 (j_21 - 21 )
Partition 15 (y_22 - 22 )
Partition 16 (x_23 - 23 )
Partition 17 (blocksize_24(D) - 24 )
Partition 18 (height_26(D) - 26 )
Partition 19 (ref_31(D) - 31 )
Partition 20 (trg_34(D) - 34 )
Partition 21 (loc_40 - 40 )
Partition 22 (mincost_41 - 41 )
Partition 23 (j_42 - 42 )
Partition 24 (i_43 - 43 )
Partition 25 (x_44 - 44 )
Partition 26 (y_45 - 45 )
Partition 27 (mv_46(D) - 46 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) loc_1 <-> loc_2
(2147483646) loc_1 <-> loc_3
(2147483646) loc_1 <-> loc_19(D)
(2147483646) loc_1 <-> loc_40
(2147483646) mincost_4 <-> mincost_5
(2147483646) mincost_4 <-> mincost_6
(2147483646) mincost_4 <-> mincost_12
(2147483646) mincost_4 <-> mincost_41
(2147483646) i_7 <-> i_18
(2147483646) i_7 <-> i_43
(2147483646) j_8 <-> j_21
(2147483646) j_8 <-> j_42
(2147483646) y_22 <-> y_45
(2147483646) x_23 <-> x_44
(3) loc_2 <-> loc_3
(3) mincost_5 <-> mincost_6

Partition map 

Partition 0 (loc_1 - 1 )
Partition 1 (loc_2 - 2 )
Partition 2 (loc_3 - 3 )
Partition 3 (mincost_4 - 4 )
Partition 4 (mincost_5 - 5 )
Partition 5 (mincost_6 - 6 )
Partition 6 (i_7 - 7 )
Partition 7 (j_8 - 8 )
Partition 8 (mincost_12 - 12 )
Partition 9 (center_13(D) - 13 )
Partition 10 (width_14(D) - 14 )
Partition 11 (p_17(D) - 17 )
Partition 12 (i_18 - 18 )
Partition 13 (loc_19(D) - 19 )
Partition 14 (j_21 - 21 )
Partition 15 (y_22 - 22 )
Partition 16 (x_23 - 23 )
Partition 17 (blocksize_24(D) - 24 )
Partition 18 (height_26(D) - 26 )
Partition 19 (ref_31(D) - 31 )
Partition 20 (trg_34(D) - 34 )
Partition 21 (loc_40 - 40 )
Partition 22 (mincost_41 - 41 )
Partition 23 (j_42 - 42 )
Partition 24 (i_43 - 43 )
Partition 25 (x_44 - 44 )
Partition 26 (y_45 - 45 )
Partition 27 (mv_46(D) - 46 )

Coalesce list: (1)loc_1 & (2)loc_2 [map: 0, 1] : Success -> 0
Coalesce list: (1)loc_1 & (3)loc_3 [map: 0, 2] : Success -> 0
Coalesce list: (1)loc_1 & (19)loc_19(D) [map: 0, 13] : Success -> 0
Coalesce list: (1)loc_1 & (40)loc_40 [map: 0, 21] : Success -> 0
Coalesce list: (4)mincost_4 & (5)mincost_5 [map: 3, 4] : Success -> 3
Coalesce list: (4)mincost_4 & (6)mincost_6 [map: 3, 5] : Success -> 3
Coalesce list: (4)mincost_4 & (12)mincost_12 [map: 3, 8] : Success -> 3
Coalesce list: (4)mincost_4 & (41)mincost_41 [map: 3, 22] : Success -> 3
Coalesce list: (7)i_7 & (18)i_18 [map: 6, 12] : Success -> 6
Coalesce list: (7)i_7 & (43)i_43 [map: 6, 24] : Success -> 6
Coalesce list: (8)j_8 & (21)j_21 [map: 7, 14] : Success -> 7
Coalesce list: (8)j_8 & (42)j_42 [map: 7, 23] : Success -> 7
Coalesce list: (22)y_22 & (45)y_45 [map: 15, 26] : Success -> 15
Coalesce list: (23)x_23 & (44)x_44 [map: 16, 25] : Success -> 16
Coalesce list: (2)loc_1 & (3)loc_1: Already Coalesced.
Coalesce list: (5)mincost_4 & (6)mincost_4: Already Coalesced.
Coalesce list: (6)mincost_4 & (41)mincost_4: Already Coalesced.
Coalesce list: (3)loc_1 & (40)loc_1: Already Coalesced.
Coalesce list: (8)j_8 & (42)j_8: Already Coalesced.
Coalesce list: (8)j_8 & (21)j_8: Already Coalesced.
Coalesce list: (5)mincost_4 & (6)mincost_4: Already Coalesced.
Coalesce list: (2)loc_1 & (3)loc_1: Already Coalesced.
Coalesce list: (7)i_7 & (43)i_7: Already Coalesced.
Coalesce list: (7)i_7 & (18)i_7: Already Coalesced.
Coalesce list: (4)mincost_4 & (12)mincost_4: Already Coalesced.
Coalesce list: (1)loc_1 & (19)loc_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (loc_1 - 1 2 3 19 40 )
Partition 1 (mincost_4 - 4 5 6 12 41 )
Partition 2 (i_7 - 7 18 43 )
Partition 3 (j_8 - 8 21 42 )
Partition 4 (center_13(D) - 13 )
Partition 5 (width_14(D) - 14 )
Partition 6 (cy_15 - 15 )
Partition 7 (cx_16 - 16 )
Partition 8 (p_17(D) - 17 )
Partition 9 (y_22 - 22 45 )
Partition 10 (x_23 - 23 44 )
Partition 11 (blocksize_24(D) - 24 )
Partition 12 (_25 - 25 )
Partition 13 (height_26(D) - 26 )
Partition 14 (_27 - 27 )
Partition 15 (_28 - 28 )
Partition 16 (_29 - 29 )
Partition 17 (_30 - 30 )
Partition 18 (ref_31(D) - 31 )
Partition 19 (_32 - 32 )
Partition 20 (_33 - 33 )
Partition 21 (trg_34(D) - 34 )
Partition 22 (_35 - 35 )
Partition 23 (_37 - 37 )
Partition 24 (cost_38 - 38 )
Partition 25 (_39 - 39 )
Partition 26 (mv_46(D) - 46 )
Partition 27 (_49 - 49 )
Partition 28 (_51 - 51 )

void ES(imgpel*, imgpel*, mvinfo&, int, int, int, int, int) (imgpel * trg, imgpel * ref, struct mvinfo & mv, int p, int center, int width, int height, int blocksize)
{
  int j;
  int i;
  unsigned int mincost;
  unsigned int cost;
  int loc;
  int y;
  int x;
  int cy;
  int cx;
  int D.34984;
  int D.34983;
  int D.34981;
  int D.34978;
  imgpel * D.34977;
  sizetype D.34976;
  imgpel * D.34975;
  sizetype D.34974;
  int D.34973;
  int D.34972;
  int D.34969;
  int D.34966;
  int _25;
  int _27;
  int _28;
  int _29;
  sizetype _30;
  imgpel * _32;
  sizetype _33;
  imgpel * _35;
  int _37;
  int _39;
  int _49;
  int _51;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  mincost_12 = 4294967295;
  cy_15 = center_13(D) / width_14(D);
  cx_16 = center_13(D) % width_14(D);
  i_18 = -p_17(D);
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                16
  # loc_1 = PHI <loc_19(D)(2), loc_2(16)>
  # mincost_4 = PHI <mincost_12(2), mincost_5(16)>
  # i_7 = PHI <i_18(2), i_43(16)>
  if (i_7 >= p_17(D))
    goto <bb 17>;
  else
    goto <bb 4>;
;;    succ:       17
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  j_21 = -p_17(D);
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                15
  # loc_2 = PHI <loc_1(4), loc_3(15)>
  # mincost_5 = PHI <mincost_4(4), mincost_6(15)>
  # j_8 = PHI <j_21(4), j_42(15)>
  if (j_8 >= p_17(D))
    goto <bb 16>;
  else
    goto <bb 6>;
;;    succ:       16
;;                6

;;   basic block 6, loop depth 2
;;    pred:       5
  y_22 = cy_15 + i_7;
  x_23 = cx_16 + j_8;
  if (x_23 < 0)
    goto <bb 12>;
  else
    goto <bb 7>;
;;    succ:       12
;;                7

;;   basic block 7, loop depth 2
;;    pred:       6
  _25 = width_14(D) - blocksize_24(D);
  if (_25 <= x_23)
    goto <bb 12>;
  else
    goto <bb 8>;
;;    succ:       12
;;                8

;;   basic block 8, loop depth 2
;;    pred:       7
  if (y_22 < 0)
    goto <bb 12>;
  else
    goto <bb 9>;
;;    succ:       12
;;                9

;;   basic block 9, loop depth 2
;;    pred:       8
  _27 = height_26(D) - blocksize_24(D);
  if (_27 <= y_22)
    goto <bb 12>;
  else
    goto <bb 10>;
;;    succ:       12
;;                10

;;   basic block 10, loop depth 2
;;    pred:       9
  if (i_7 == 1)
    goto <bb 11>;
  else
    goto <bb 13>;
;;    succ:       11
;;                13

;;   basic block 11, loop depth 2
;;    pred:       10
  if (j_8 == 1)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12
;;                13

;;   basic block 12, loop depth 2
;;    pred:       6
;;                7
;;                8
;;                9
;;                11
  goto <bb 15>;
;;    succ:       15

;;   basic block 13, loop depth 2
;;    pred:       10
;;                11
  _28 = y_22 * width_14(D);
  _29 = _28 + x_23;
  _30 = (sizetype) _29;
  _32 = ref_31(D) + _30;
  _33 = (sizetype) center_13(D);
  _35 = trg_34(D) + _33;
  _37 = calcSAD (_35, _32, width_14(D), blocksize_24(D));
  cost_38 = (unsigned int) _37;
  if (cost_38 < mincost_5)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14
;;                15

;;   basic block 14, loop depth 2
;;    pred:       13
  _39 = y_22 * width_14(D);
  loc_40 = _39 + x_23;
  mincost_41 = cost_38;
;;    succ:       15

;;   basic block 15, loop depth 2
;;    pred:       12
;;                13
;;                14
  # loc_3 = PHI <loc_2(12), loc_2(13), loc_40(14)>
  # mincost_6 = PHI <mincost_5(12), mincost_5(13), mincost_41(14)>
  j_42 = j_8 + 1;
  goto <bb 5>;
;;    succ:       5

;;   basic block 16, loop depth 1
;;    pred:       5
  i_43 = i_7 + 1;
  goto <bb 3>;
;;    succ:       3

;;   basic block 17, loop depth 0
;;    pred:       3
  x_44 = loc_1 % width_14(D);
  y_45 = loc_1 / width_14(D);
  mv_46(D)->iCx = cx_16;
  mv_46(D)->iCy = cy_15;
  _49 = x_44 - cx_16;
  mv_46(D)->iMvx = _49;
  _51 = y_45 - cy_15;
  mv_46(D)->iMvy = _51;
  mv_46(D)->SAD = mincost_4;
  return;
;;    succ:       EXIT

}


Partition 8: size 4 align 4
	cost_38
Partition 7: size 4 align 4
	x_23
Partition 6: size 4 align 4
	y_22
Partition 5: size 4 align 4
	cx_16
Partition 4: size 4 align 4
	cy_15
Partition 3: size 4 align 4
	j_8
Partition 2: size 4 align 4
	i_7
Partition 1: size 4 align 4
	mincost_4
Partition 0: size 4 align 4
	loc_1

;; Generating RTL for gimple basic block 2

;; mincost_12 = 4294967295;

(insn 11 10 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 mincost+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) /home/kai/git_repos/obme/obme.cpp:27 -1
     (nil))

;; cy_15 = center_13(D) / width_14(D);

(insn 12 11 13 (set (reg:SI 102)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [0 center+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:28 -1
     (nil))

(insn 13 12 14 (parallel [
            (set (reg:SI 100)
                (div:SI (reg:SI 102)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (set (reg:SI 101)
                (mod:SI (reg:SI 102)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:28 -1
     (nil))

(insn 14 13 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 cy+0 S4 A32])
        (reg:SI 100)) /home/kai/git_repos/obme/obme.cpp:28 -1
     (nil))

;; cx_16 = center_13(D) % width_14(D);

(insn 15 14 16 (set (reg:SI 104)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [0 center+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:29 -1
     (nil))

(insn 16 15 17 (parallel [
            (set (reg:SI 106)
                (div:SI (reg:SI 104)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (set (reg:SI 105)
                (mod:SI (reg:SI 104)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:29 -1
     (nil))

(insn 17 16 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 cx+0 S4 A32])
        (reg:SI 105)) /home/kai/git_repos/obme/obme.cpp:29 -1
     (nil))

;; i_18 = -p_17(D);

(insn 21 17 22 (set (reg:SI 110)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -76 [0xffffffffffffffb4])) [0 p+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:30 -1
     (nil))

(insn 22 21 23 (parallel [
            (set (reg:SI 109)
                (neg:SI (reg:SI 110)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:30 -1
     (expr_list:REG_EQUAL (neg:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -76 [0xffffffffffffffb4])) [0 p+0 S4 A32]))
        (nil)))

(insn 23 22 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])
        (reg:SI 109)) /home/kai/git_repos/obme/obme.cpp:30 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; if (i_7 >= p_17(D))

(insn 25 24 26 (set (reg:SI 111)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:30 -1
     (nil))

(insn 26 25 27 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 111)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -76 [0xffffffffffffffb4])) [0 p+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:30 -1
     (nil))

(jump_insn 27 26 0 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) /home/kai/git_repos/obme/obme.cpp:30 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; j_21 = -p_17(D);

(insn 32 28 33 (set (reg:SI 115)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -76 [0xffffffffffffffb4])) [0 p+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:32 -1
     (nil))

(insn 33 32 34 (parallel [
            (set (reg:SI 114)
                (neg:SI (reg:SI 115)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:32 -1
     (expr_list:REG_EQUAL (neg:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -76 [0xffffffffffffffb4])) [0 p+0 S4 A32]))
        (nil)))

(insn 34 33 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])
        (reg:SI 114)) /home/kai/git_repos/obme/obme.cpp:32 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; if (j_8 >= p_17(D))

(insn 36 35 37 (set (reg:SI 116)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:32 -1
     (nil))

(insn 37 36 38 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 116)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -76 [0xffffffffffffffb4])) [0 p+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:32 -1
     (nil))

(jump_insn 38 37 0 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) /home/kai/git_repos/obme/obme.cpp:32 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; y_22 = cy_15 + i_7;

(insn 44 39 45 (set (reg:SI 121)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 cy+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:34 -1
     (nil))

(insn 45 44 46 (set (reg:SI 122)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:34 -1
     (nil))

(insn 46 45 47 (parallel [
            (set (reg:SI 120)
                (plus:SI (reg:SI 121)
                    (reg:SI 122)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:34 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 cy+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32]))
        (nil)))

(insn 47 46 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])
        (reg:SI 120)) /home/kai/git_repos/obme/obme.cpp:34 -1
     (nil))

;; x_23 = cx_16 + j_8;

(insn 52 47 53 (set (reg:SI 127)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 cx+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:35 -1
     (nil))

(insn 53 52 54 (set (reg:SI 128)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:35 -1
     (nil))

(insn 54 53 55 (parallel [
            (set (reg:SI 126)
                (plus:SI (reg:SI 127)
                    (reg:SI 128)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:35 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 cx+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32]))
        (nil)))

(insn 55 54 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32])
        (reg:SI 126)) /home/kai/git_repos/obme/obme.cpp:35 -1
     (nil))

;; if (x_23 < 0)

(insn 56 55 57 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32])
            (const_int 0 [0]))) /home/kai/git_repos/obme/obme.cpp:38 -1
     (nil))

(jump_insn 57 56 0 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) /home/kai/git_repos/obme/obme.cpp:38 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; _25 = width_14(D) - blocksize_24(D);

(insn 59 58 60 (set (reg:SI 129)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:38 -1
     (nil))

(insn 60 59 0 (parallel [
            (set (reg:SI 87 [ D.35024 ])
                (minus:SI (reg:SI 129)
                    (mem/c:SI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                            (const_int 8 [0x8])) [0 blocksize+0 S4 A64])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:38 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 blocksize+0 S4 A64]))
        (nil)))

;; if (_25 <= x_23)

(insn 61 60 62 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 87 [ D.35024 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:38 -1
     (nil))

(jump_insn 62 61 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) /home/kai/git_repos/obme/obme.cpp:38 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; if (y_22 < 0)

(insn 64 63 65 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])
            (const_int 0 [0]))) /home/kai/git_repos/obme/obme.cpp:38 -1
     (nil))

(jump_insn 65 64 0 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) /home/kai/git_repos/obme/obme.cpp:38 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; _27 = height_26(D) - blocksize_24(D);

(insn 67 66 68 (set (reg:SI 130)
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [0 height+0 S4 A64])) /home/kai/git_repos/obme/obme.cpp:39 -1
     (nil))

(insn 68 67 0 (parallel [
            (set (reg:SI 88 [ D.35024 ])
                (minus:SI (reg:SI 130)
                    (mem/c:SI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                            (const_int 8 [0x8])) [0 blocksize+0 S4 A64])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:39 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [0 height+0 S4 A64])
            (mem/c:SI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 blocksize+0 S4 A64]))
        (nil)))

;; if (_27 <= y_22)

(insn 69 68 70 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88 [ D.35024 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:39 -1
     (nil))

(jump_insn 70 69 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) /home/kai/git_repos/obme/obme.cpp:39 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; if (i_7 == 1)

(insn 72 71 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) /home/kai/git_repos/obme/obme.cpp:39 -1
     (nil))

(jump_insn 73 72 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) /home/kai/git_repos/obme/obme.cpp:39 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; if (j_8 == 1)

(insn 75 74 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])
            (const_int 1 [0x1]))) /home/kai/git_repos/obme/obme.cpp:40 -1
     (nil))

(jump_insn 76 75 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) /home/kai/git_repos/obme/obme.cpp:40 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; 

(code_label 77 76 78 10 "" [0 uses])

(note 78 77 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 13

;; 

(code_label 81 80 82 11 "" [0 uses])

(note 82 81 0 NOTE_INSN_BASIC_BLOCK)

;; _28 = y_22 * width_14(D);

(insn 83 82 84 (set (reg:SI 131)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:45 -1
     (nil))

(insn 84 83 0 (parallel [
            (set (reg:SI 89 [ D.35024 ])
                (mult:SI (reg:SI 131)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:45 -1
     (nil))

;; _29 = _28 + x_23;

(insn 85 84 86 (set (reg:SI 132)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:45 -1
     (nil))

(insn 86 85 0 (parallel [
            (set (reg:SI 90 [ D.35024 ])
                (plus:SI (reg:SI 89 [ D.35024 ])
                    (reg:SI 132)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:45 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 89 [ D.35024 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32]))
        (nil)))

;; _30 = (sizetype) _29;

(insn 87 86 0 (set (reg:DI 91 [ D.35025 ])
        (sign_extend:DI (reg:SI 90 [ D.35024 ]))) /home/kai/git_repos/obme/obme.cpp:44 -1
     (nil))

;; _32 = ref_31(D) + _30;

(insn 88 87 89 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 ref+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:44 -1
     (nil))

(insn 89 88 0 (parallel [
            (set (reg/f:DI 92 [ D.35026 ])
                (plus:DI (reg:DI 91 [ D.35025 ])
                    (reg/f:DI 133)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:44 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])) [0 ref+0 S8 A64])
            (reg:DI 91 [ D.35025 ]))
        (nil)))

;; _33 = (sizetype) center_13(D);

(insn 90 89 91 (set (reg:SI 134)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [0 center+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:44 -1
     (nil))

(insn 91 90 0 (set (reg:DI 93 [ D.35025 ])
        (sign_extend:DI (reg:SI 134))) /home/kai/git_repos/obme/obme.cpp:44 -1
     (nil))

;; _35 = trg_34(D) + _33;

(insn 92 91 93 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 trg+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:44 -1
     (nil))

(insn 93 92 0 (parallel [
            (set (reg/f:DI 94 [ D.35026 ])
                (plus:DI (reg:DI 93 [ D.35025 ])
                    (reg/f:DI 135)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:44 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 trg+0 S8 A64])
            (reg:DI 93 [ D.35025 ]))
        (nil)))

;; _37 = calcSAD (_35, _32, width_14(D), blocksize_24(D));

(insn 94 93 95 (set (reg:SI 136)
        (mem/c:SI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 blocksize+0 S4 A64])) /home/kai/git_repos/obme/obme.cpp:44 -1
     (nil))

(insn 95 94 96 (set (reg:SI 137)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:44 -1
     (nil))

(insn 96 95 97 (set (reg:SI 2 cx)
        (reg:SI 136)) /home/kai/git_repos/obme/obme.cpp:44 -1
     (nil))

(insn 97 96 98 (set (reg:SI 1 dx)
        (reg:SI 137)) /home/kai/git_repos/obme/obme.cpp:44 -1
     (nil))

(insn 98 97 99 (set (reg:DI 4 si)
        (reg/f:DI 92 [ D.35026 ])) /home/kai/git_repos/obme/obme.cpp:44 -1
     (nil))

(insn 99 98 100 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.35026 ])) /home/kai/git_repos/obme/obme.cpp:44 -1
     (nil))

(call_insn 100 99 101 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z7calcSADPcS_ii") [flags 0x3]  <function_decl 0x7f86e163cca8 calcSAD>) [0 calcSAD S1 A8])
            (const_int 0 [0]))) /home/kai/git_repos/obme/obme.cpp:44 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))

(insn 101 100 0 (set (reg:SI 95 [ D.35024 ])
        (reg:SI 0 ax)) /home/kai/git_repos/obme/obme.cpp:44 -1
     (nil))

;; cost_38 = (unsigned int) _37;

(insn 102 101 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 cost+0 S4 A32])
        (reg:SI 95 [ D.35024 ])) /home/kai/git_repos/obme/obme.cpp:47 -1
     (nil))

;; if (cost_38 < mincost_5)

(insn 103 102 104 (set (reg:SI 138)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 cost+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:48 -1
     (nil))

(insn 104 103 105 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 138)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 mincost+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:48 -1
     (nil))

(jump_insn 105 104 0 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) /home/kai/git_repos/obme/obme.cpp:48 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; _39 = y_22 * width_14(D);

(insn 107 106 108 (set (reg:SI 139)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:49 -1
     (nil))

(insn 108 107 0 (parallel [
            (set (reg:SI 96 [ D.35024 ])
                (mult:SI (reg:SI 139)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:49 -1
     (nil))

;; loc_40 = _39 + x_23;

(insn 112 108 113 (set (reg:SI 143)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:49 -1
     (nil))

(insn 113 112 114 (parallel [
            (set (reg:SI 142)
                (plus:SI (reg:SI 96 [ D.35024 ])
                    (reg:SI 143)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:49 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 96 [ D.35024 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32]))
        (nil)))

(insn 114 113 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 loc+0 S4 A32])
        (reg:SI 142)) /home/kai/git_repos/obme/obme.cpp:49 -1
     (nil))

;; mincost_41 = cost_38;

(insn 115 114 116 (set (reg:SI 144)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 cost+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:50 -1
     (nil))

(insn 116 115 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 mincost+0 S4 A32])
        (reg:SI 144)) /home/kai/git_repos/obme/obme.cpp:50 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; 

(code_label 117 116 118 12 "" [0 uses])

(note 118 117 0 NOTE_INSN_BASIC_BLOCK)

;; j_42 = j_8 + 1;

(insn 119 118 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:32 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; 

(code_label 123 122 124 9 "" [0 uses])

(note 124 123 0 NOTE_INSN_BASIC_BLOCK)

;; i_43 = i_7 + 1;

(insn 125 124 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:30 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; 

(code_label 129 128 130 8 "" [0 uses])

(note 130 129 0 NOTE_INSN_BASIC_BLOCK)

;; x_44 = loc_1 % width_14(D);

(insn 131 130 132 (set (reg:SI 146)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 loc+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:56 -1
     (nil))

(insn 132 131 133 (parallel [
            (set (reg:SI 148)
                (div:SI (reg:SI 146)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (set (reg:SI 147)
                (mod:SI (reg:SI 146)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:56 -1
     (nil))

(insn 133 132 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32])
        (reg:SI 147)) /home/kai/git_repos/obme/obme.cpp:56 -1
     (nil))

;; y_45 = loc_1 / width_14(D);

(insn 134 133 135 (set (reg:SI 152)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 loc+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:57 -1
     (nil))

(insn 135 134 136 (parallel [
            (set (reg:SI 150)
                (div:SI (reg:SI 152)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (set (reg:SI 151)
                (mod:SI (reg:SI 152)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:57 -1
     (nil))

(insn 136 135 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])
        (reg:SI 150)) /home/kai/git_repos/obme/obme.cpp:57 -1
     (nil))

;; mv_46(D)->iCx = cx_16;

(insn 137 136 138 (set (reg/f:DI 153)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 mv+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:58 -1
     (nil))

(insn 138 137 139 (set (reg:SI 154)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 cx+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:58 -1
     (nil))

(insn 139 138 0 (set (mem/j:SI (reg/f:DI 153) [0 mv_46(D)->iCx+0 S4 A32])
        (reg:SI 154)) /home/kai/git_repos/obme/obme.cpp:58 -1
     (nil))

;; mv_46(D)->iCy = cy_15;

(insn 140 139 141 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 mv+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:59 -1
     (nil))

(insn 141 140 142 (set (reg:SI 156)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 cy+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:59 -1
     (nil))

(insn 142 141 0 (set (mem/j:SI (plus:DI (reg/f:DI 155)
                (const_int 4 [0x4])) [0 mv_46(D)->iCy+0 S4 A32])
        (reg:SI 156)) /home/kai/git_repos/obme/obme.cpp:59 -1
     (nil))

;; _49 = x_44 - cx_16;

(insn 143 142 144 (set (reg:SI 157)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:61 -1
     (nil))

(insn 144 143 0 (parallel [
            (set (reg:SI 97 [ D.35024 ])
                (minus:SI (reg:SI 157)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 cx+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:61 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 cx+0 S4 A32]))
        (nil)))

;; mv_46(D)->iMvx = _49;

(insn 145 144 146 (set (reg/f:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 mv+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:61 -1
     (nil))

(insn 146 145 0 (set (mem/j:SI (plus:DI (reg/f:DI 158)
                (const_int 8 [0x8])) [0 mv_46(D)->iMvx+0 S4 A32])
        (reg:SI 97 [ D.35024 ])) /home/kai/git_repos/obme/obme.cpp:61 -1
     (nil))

;; _51 = y_45 - cy_15;

(insn 147 146 148 (set (reg:SI 159)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:62 -1
     (nil))

(insn 148 147 0 (parallel [
            (set (reg:SI 98 [ D.35024 ])
                (minus:SI (reg:SI 159)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 cy+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:62 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 cy+0 S4 A32]))
        (nil)))

;; mv_46(D)->iMvy = _51;

(insn 149 148 150 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 mv+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:62 -1
     (nil))

(insn 150 149 0 (set (mem/j:SI (plus:DI (reg/f:DI 160)
                (const_int 12 [0xc])) [0 mv_46(D)->iMvy+0 S4 A32])
        (reg:SI 98 [ D.35024 ])) /home/kai/git_repos/obme/obme.cpp:62 -1
     (nil))

;; mv_46(D)->SAD = mincost_4;

(insn 151 150 152 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 mv+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:63 -1
     (nil))

(insn 152 151 153 (set (reg:SI 162)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 mincost+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:63 -1
     (nil))

(insn 153 152 0 (set (mem/j:SI (plus:DI (reg/f:DI 161)
                (const_int 16 [0x10])) [0 mv_46(D)->SAD+0 S4 A32])
        (reg:SI 162)) /home/kai/git_repos/obme/obme.cpp:63 -1
     (nil))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 7->13 redirected to 16
Edge 8->13 redirected to 16
Edge 9->13 redirected to 16
Edge 10->13 redirected to 16
Forwarding edge 12->13 to 16 failed.
Deleted label in block 13.
Merging block 19 into block 18...
Merged blocks 18 and 19.
Merged 18 and 19 without moving.


try_optimize_cfg iteration 2

Forwarding edge 12->13 to 16 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 trg+0 S8 A64])
        (reg:DI 5 di [ trg ])) /home/kai/git_repos/obme/obme.cpp:23 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 ref+0 S8 A64])
        (reg:DI 4 si [ ref ])) /home/kai/git_repos/obme/obme.cpp:23 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 mv+0 S8 A64])
        (reg:DI 1 dx [ mv ])) /home/kai/git_repos/obme/obme.cpp:23 -1
     (nil))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -76 [0xffffffffffffffb4])) [0 p+0 S4 A32])
        (reg:SI 2 cx [ p ])) /home/kai/git_repos/obme/obme.cpp:23 -1
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [0 center+0 S4 A32])
        (reg:SI 37 r8 [ center ])) /home/kai/git_repos/obme/obme.cpp:23 -1
     (nil))
(insn 7 6 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])
        (reg:SI 38 r9 [ width ])) /home/kai/git_repos/obme/obme.cpp:23 -1
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 mincost+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) /home/kai/git_repos/obme/obme.cpp:27 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 102)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [0 center+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:28 -1
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:SI 100)
                (div:SI (reg:SI 102)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (set (reg:SI 101)
                (mod:SI (reg:SI 102)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:28 -1
     (nil))
(insn 14 13 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 cy+0 S4 A32])
        (reg:SI 100)) /home/kai/git_repos/obme/obme.cpp:28 -1
     (nil))
(insn 15 14 16 2 (set (reg:SI 104)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [0 center+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:29 -1
     (nil))
(insn 16 15 17 2 (parallel [
            (set (reg:SI 106)
                (div:SI (reg:SI 104)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (set (reg:SI 105)
                (mod:SI (reg:SI 104)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:29 -1
     (nil))
(insn 17 16 21 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 cx+0 S4 A32])
        (reg:SI 105)) /home/kai/git_repos/obme/obme.cpp:29 -1
     (nil))
(insn 21 17 22 2 (set (reg:SI 110)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -76 [0xffffffffffffffb4])) [0 p+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:30 -1
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg:SI 109)
                (neg:SI (reg:SI 110)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:30 -1
     (expr_list:REG_EQUAL (neg:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -76 [0xffffffffffffffb4])) [0 p+0 S4 A32]))
        (nil)))
(insn 23 22 126 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])
        (reg:SI 109)) /home/kai/git_repos/obme/obme.cpp:30 -1
     (nil))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
;;              17 (DFS_BACK)
(code_label 126 23 24 4 14 "" [1 uses])
(note 24 126 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (reg:SI 111)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:30 -1
     (nil))
(insn 26 25 27 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 111)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -76 [0xffffffffffffffb4])) [0 p+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:30 -1
     (nil))
(jump_insn 27 26 28 4 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 129)
            (pc))) /home/kai/git_repos/obme/obme.cpp:30 -1
     (nil)
 -> 129)
;;  succ:       18
;;              5 (FALLTHRU)

;; basic block 5, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 28 27 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 28 33 5 (set (reg:SI 115)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -76 [0xffffffffffffffb4])) [0 p+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:32 -1
     (nil))
(insn 33 32 34 5 (parallel [
            (set (reg:SI 114)
                (neg:SI (reg:SI 115)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:32 -1
     (expr_list:REG_EQUAL (neg:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -76 [0xffffffffffffffb4])) [0 p+0 S4 A32]))
        (nil)))
(insn 34 33 120 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])
        (reg:SI 114)) /home/kai/git_repos/obme/obme.cpp:32 -1
     (nil))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
;;              16 (DFS_BACK)
(code_label 120 34 35 6 13 "" [1 uses])
(note 35 120 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 6 (set (reg:SI 116)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:32 -1
     (nil))
(insn 37 36 38 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 116)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -76 [0xffffffffffffffb4])) [0 p+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:32 -1
     (nil))
(jump_insn 38 37 39 6 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 123)
            (pc))) /home/kai/git_repos/obme/obme.cpp:32 -1
     (nil)
 -> 123)
;;  succ:       17
;;              7 (FALLTHRU)

;; basic block 7, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
(note 39 38 44 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 44 39 45 7 (set (reg:SI 121)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 cy+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:34 -1
     (nil))
(insn 45 44 46 7 (set (reg:SI 122)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:34 -1
     (nil))
(insn 46 45 47 7 (parallel [
            (set (reg:SI 120)
                (plus:SI (reg:SI 121)
                    (reg:SI 122)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:34 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 cy+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32]))
        (nil)))
(insn 47 46 52 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])
        (reg:SI 120)) /home/kai/git_repos/obme/obme.cpp:34 -1
     (nil))
(insn 52 47 53 7 (set (reg:SI 127)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 cx+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:35 -1
     (nil))
(insn 53 52 54 7 (set (reg:SI 128)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:35 -1
     (nil))
(insn 54 53 55 7 (parallel [
            (set (reg:SI 126)
                (plus:SI (reg:SI 127)
                    (reg:SI 128)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:35 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 cx+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32]))
        (nil)))
(insn 55 54 56 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32])
        (reg:SI 126)) /home/kai/git_repos/obme/obme.cpp:35 -1
     (nil))
(insn 56 55 57 7 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32])
            (const_int 0 [0]))) /home/kai/git_repos/obme/obme.cpp:38 -1
     (nil))
(jump_insn 57 56 58 7 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 117)
            (pc))) /home/kai/git_repos/obme/obme.cpp:38 612 {*jcc_1}
     (nil)
 -> 117)
;;  succ:       16
;;              8 (FALLTHRU)

;; basic block 8, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
(note 58 57 59 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 8 (set (reg:SI 129)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:38 -1
     (nil))
(insn 60 59 61 8 (parallel [
            (set (reg:SI 87 [ D.35024 ])
                (minus:SI (reg:SI 129)
                    (mem/c:SI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                            (const_int 8 [0x8])) [0 blocksize+0 S4 A64])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:38 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 blocksize+0 S4 A64]))
        (nil)))
(insn 61 60 62 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 87 [ D.35024 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:38 -1
     (nil))
(jump_insn 62 61 63 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 117)
            (pc))) /home/kai/git_repos/obme/obme.cpp:38 612 {*jcc_1}
     (nil)
 -> 117)
;;  succ:       16
;;              9 (FALLTHRU)

;; basic block 9, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
(note 63 62 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 9 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])
            (const_int 0 [0]))) /home/kai/git_repos/obme/obme.cpp:38 -1
     (nil))
(jump_insn 65 64 66 9 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 117)
            (pc))) /home/kai/git_repos/obme/obme.cpp:38 612 {*jcc_1}
     (nil)
 -> 117)
;;  succ:       16
;;              10 (FALLTHRU)

;; basic block 10, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
(note 66 65 67 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 10 (set (reg:SI 130)
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [0 height+0 S4 A64])) /home/kai/git_repos/obme/obme.cpp:39 -1
     (nil))
(insn 68 67 69 10 (parallel [
            (set (reg:SI 88 [ D.35024 ])
                (minus:SI (reg:SI 130)
                    (mem/c:SI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                            (const_int 8 [0x8])) [0 blocksize+0 S4 A64])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:39 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [0 height+0 S4 A64])
            (mem/c:SI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 blocksize+0 S4 A64]))
        (nil)))
(insn 69 68 70 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88 [ D.35024 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:39 -1
     (nil))
(jump_insn 70 69 71 10 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 117)
            (pc))) /home/kai/git_repos/obme/obme.cpp:39 612 {*jcc_1}
     (nil)
 -> 117)
;;  succ:       16
;;              11 (FALLTHRU)

;; basic block 11, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 (FALLTHRU)
(note 71 70 72 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) /home/kai/git_repos/obme/obme.cpp:39 -1
     (nil))
(jump_insn 73 72 74 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) /home/kai/git_repos/obme/obme.cpp:39 -1
     (nil)
 -> 81)
;;  succ:       12 (FALLTHRU)
;;              14

;; basic block 12, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
(note 74 73 75 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])
            (const_int 1 [0x1]))) /home/kai/git_repos/obme/obme.cpp:40 -1
     (nil))
(jump_insn 76 75 78 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) /home/kai/git_repos/obme/obme.cpp:40 -1
     (nil)
 -> 81)
;;  succ:       13 (FALLTHRU)
;;              14

;; basic block 13, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 (FALLTHRU)
(note 78 76 79 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(jump_insn 79 78 80 13 (set (pc)
        (label_ref 117)) /home/kai/git_repos/obme/obme.cpp:42 -1
     (nil)
 -> 117)
;;  succ:       16

(barrier 80 79 81)
;; basic block 14, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
;;              12
(code_label 81 80 82 14 11 "" [2 uses])
(note 82 81 83 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 14 (set (reg:SI 131)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:45 -1
     (nil))
(insn 84 83 85 14 (parallel [
            (set (reg:SI 89 [ D.35024 ])
                (mult:SI (reg:SI 131)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:45 -1
     (nil))
(insn 85 84 86 14 (set (reg:SI 132)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:45 -1
     (nil))
(insn 86 85 87 14 (parallel [
            (set (reg:SI 90 [ D.35024 ])
                (plus:SI (reg:SI 89 [ D.35024 ])
                    (reg:SI 132)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:45 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 89 [ D.35024 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32]))
        (nil)))
(insn 87 86 88 14 (set (reg:DI 91 [ D.35025 ])
        (sign_extend:DI (reg:SI 90 [ D.35024 ]))) /home/kai/git_repos/obme/obme.cpp:44 -1
     (nil))
(insn 88 87 89 14 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [0 ref+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:44 -1
     (nil))
(insn 89 88 90 14 (parallel [
            (set (reg/f:DI 92 [ D.35026 ])
                (plus:DI (reg:DI 91 [ D.35025 ])
                    (reg/f:DI 133)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:44 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])) [0 ref+0 S8 A64])
            (reg:DI 91 [ D.35025 ]))
        (nil)))
(insn 90 89 91 14 (set (reg:SI 134)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [0 center+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:44 -1
     (nil))
(insn 91 90 92 14 (set (reg:DI 93 [ D.35025 ])
        (sign_extend:DI (reg:SI 134))) /home/kai/git_repos/obme/obme.cpp:44 -1
     (nil))
(insn 92 91 93 14 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 trg+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:44 -1
     (nil))
(insn 93 92 94 14 (parallel [
            (set (reg/f:DI 94 [ D.35026 ])
                (plus:DI (reg:DI 93 [ D.35025 ])
                    (reg/f:DI 135)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:44 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])) [0 trg+0 S8 A64])
            (reg:DI 93 [ D.35025 ]))
        (nil)))
(insn 94 93 95 14 (set (reg:SI 136)
        (mem/c:SI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 blocksize+0 S4 A64])) /home/kai/git_repos/obme/obme.cpp:44 -1
     (nil))
(insn 95 94 96 14 (set (reg:SI 137)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:44 -1
     (nil))
(insn 96 95 97 14 (set (reg:SI 2 cx)
        (reg:SI 136)) /home/kai/git_repos/obme/obme.cpp:44 -1
     (nil))
(insn 97 96 98 14 (set (reg:SI 1 dx)
        (reg:SI 137)) /home/kai/git_repos/obme/obme.cpp:44 -1
     (nil))
(insn 98 97 99 14 (set (reg:DI 4 si)
        (reg/f:DI 92 [ D.35026 ])) /home/kai/git_repos/obme/obme.cpp:44 -1
     (nil))
(insn 99 98 100 14 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.35026 ])) /home/kai/git_repos/obme/obme.cpp:44 -1
     (nil))
(call_insn 100 99 101 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z7calcSADPcS_ii") [flags 0x3]  <function_decl 0x7f86e163cca8 calcSAD>) [0 calcSAD S1 A8])
            (const_int 0 [0]))) /home/kai/git_repos/obme/obme.cpp:44 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 101 100 102 14 (set (reg:SI 95 [ D.35024 ])
        (reg:SI 0 ax)) /home/kai/git_repos/obme/obme.cpp:44 -1
     (nil))
(insn 102 101 103 14 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 cost+0 S4 A32])
        (reg:SI 95 [ D.35024 ])) /home/kai/git_repos/obme/obme.cpp:47 -1
     (nil))
(insn 103 102 104 14 (set (reg:SI 138)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 cost+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:48 -1
     (nil))
(insn 104 103 105 14 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 138)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [0 mincost+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:48 -1
     (nil))
(jump_insn 105 104 106 14 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 117)
            (pc))) /home/kai/git_repos/obme/obme.cpp:48 -1
     (nil)
 -> 117)
;;  succ:       15 (FALLTHRU)
;;              16

;; basic block 15, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 (FALLTHRU)
(note 106 105 107 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 15 (set (reg:SI 139)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:49 -1
     (nil))
(insn 108 107 112 15 (parallel [
            (set (reg:SI 96 [ D.35024 ])
                (mult:SI (reg:SI 139)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:49 -1
     (nil))
(insn 112 108 113 15 (set (reg:SI 143)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:49 -1
     (nil))
(insn 113 112 114 15 (parallel [
            (set (reg:SI 142)
                (plus:SI (reg:SI 96 [ D.35024 ])
                    (reg:SI 143)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:49 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 96 [ D.35024 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32]))
        (nil)))
(insn 114 113 115 15 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 loc+0 S4 A32])
        (reg:SI 142)) /home/kai/git_repos/obme/obme.cpp:49 -1
     (nil))
(insn 115 114 116 15 (set (reg:SI 144)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 cost+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:50 -1
     (nil))
(insn 116 115 117 15 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 mincost+0 S4 A32])
        (reg:SI 144)) /home/kai/git_repos/obme/obme.cpp:50 -1
     (nil))
;;  succ:       16 (FALLTHRU)

;; basic block 16, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       13
;;              14
;;              15 (FALLTHRU)
;;              7
;;              8
;;              9
;;              10
(code_label 117 116 118 16 12 "" [6 uses])
(note 118 117 119 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 121 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:32 -1
     (nil))
(jump_insn 121 119 122 16 (set (pc)
        (label_ref 120)) /home/kai/git_repos/obme/obme.cpp:32 -1
     (nil)
 -> 120)
;;  succ:       6 (DFS_BACK)

(barrier 122 121 123)
;; basic block 17, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
(code_label 123 122 124 17 9 "" [1 uses])
(note 124 123 125 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 127 17 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:30 -1
     (nil))
(jump_insn 127 125 128 17 (set (pc)
        (label_ref 126)) /home/kai/git_repos/obme/obme.cpp:30 -1
     (nil)
 -> 126)
;;  succ:       4 (DFS_BACK)

(barrier 128 127 129)
;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 129 128 130 18 8 "" [1 uses])
(note 130 129 131 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 18 (set (reg:SI 146)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 loc+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:56 -1
     (nil))
(insn 132 131 133 18 (parallel [
            (set (reg:SI 148)
                (div:SI (reg:SI 146)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (set (reg:SI 147)
                (mod:SI (reg:SI 146)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:56 -1
     (nil))
(insn 133 132 134 18 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32])
        (reg:SI 147)) /home/kai/git_repos/obme/obme.cpp:56 -1
     (nil))
(insn 134 133 135 18 (set (reg:SI 152)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 loc+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:57 -1
     (nil))
(insn 135 134 136 18 (parallel [
            (set (reg:SI 150)
                (div:SI (reg:SI 152)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (set (reg:SI 151)
                (mod:SI (reg:SI 152)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:57 -1
     (nil))
(insn 136 135 137 18 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])
        (reg:SI 150)) /home/kai/git_repos/obme/obme.cpp:57 -1
     (nil))
(insn 137 136 138 18 (set (reg/f:DI 153)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 mv+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:58 -1
     (nil))
(insn 138 137 139 18 (set (reg:SI 154)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 cx+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:58 -1
     (nil))
(insn 139 138 140 18 (set (mem/j:SI (reg/f:DI 153) [0 mv_46(D)->iCx+0 S4 A32])
        (reg:SI 154)) /home/kai/git_repos/obme/obme.cpp:58 -1
     (nil))
(insn 140 139 141 18 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 mv+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:59 -1
     (nil))
(insn 141 140 142 18 (set (reg:SI 156)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 cy+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:59 -1
     (nil))
(insn 142 141 143 18 (set (mem/j:SI (plus:DI (reg/f:DI 155)
                (const_int 4 [0x4])) [0 mv_46(D)->iCy+0 S4 A32])
        (reg:SI 156)) /home/kai/git_repos/obme/obme.cpp:59 -1
     (nil))
(insn 143 142 144 18 (set (reg:SI 157)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:61 -1
     (nil))
(insn 144 143 145 18 (parallel [
            (set (reg:SI 97 [ D.35024 ])
                (minus:SI (reg:SI 157)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [0 cx+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:61 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 cx+0 S4 A32]))
        (nil)))
(insn 145 144 146 18 (set (reg/f:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 mv+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:61 -1
     (nil))
(insn 146 145 147 18 (set (mem/j:SI (plus:DI (reg/f:DI 158)
                (const_int 8 [0x8])) [0 mv_46(D)->iMvx+0 S4 A32])
        (reg:SI 97 [ D.35024 ])) /home/kai/git_repos/obme/obme.cpp:61 -1
     (nil))
(insn 147 146 148 18 (set (reg:SI 159)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:62 -1
     (nil))
(insn 148 147 149 18 (parallel [
            (set (reg:SI 98 [ D.35024 ])
                (minus:SI (reg:SI 159)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 cy+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:62 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 cy+0 S4 A32]))
        (nil)))
(insn 149 148 150 18 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 mv+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:62 -1
     (nil))
(insn 150 149 151 18 (set (mem/j:SI (plus:DI (reg/f:DI 160)
                (const_int 12 [0xc])) [0 mv_46(D)->iMvy+0 S4 A32])
        (reg:SI 98 [ D.35024 ])) /home/kai/git_repos/obme/obme.cpp:62 -1
     (nil))
(insn 151 150 152 18 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 mv+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:63 -1
     (nil))
(insn 152 151 153 18 (set (reg:SI 162)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 mincost+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:63 -1
     (nil))
(insn 153 152 156 18 (set (mem/j:SI (plus:DI (reg/f:DI 161)
                (const_int 16 [0x10])) [0 mv_46(D)->SAD+0 S4 A32])
        (reg:SI 162)) /home/kai/git_repos/obme/obme.cpp:63 -1
     (nil))
(insn 156 153 0 18 (const_int 0 [0]) /home/kai/git_repos/obme/obme.cpp:64 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void obme(imgpel**, imgpel*, mvinfo*, int, int, int, int, int) (_Z4obmePPcS_P6mvinfoiiiii, funcdef_no=1386, decl_uid=33288, cgraph_uid=402, symbol_order=404)

void obme(imgpel**, imgpel*, mvinfo*, int, int, int, int, int) (imgpel * * refFrame, imgpel * currFrame, struct mvinfo * mvs, int nRefs, int width, int height, int blocksize, int overlap)
{
  int i;
  int y;
  int x;
  int p;
  int cnt;
  struct mvinfo mv;
  unsigned int sad;
  int idx;
  struct mvinfo * D.35008;
  long unsigned int D.35007;
  long unsigned int D.35006;
  struct mvinfo * D.35005;
  long unsigned int D.35004;
  long unsigned int D.35003;
  unsigned int D.35000;
  imgpel * D.34999;
  imgpel * * D.34998;
  long unsigned int D.34997;
  long unsigned int D.34996;
  int D.34995;
  int D.34991;
  int D.34990;
  int D.34987;
  int D.34986;
  int _18;
  int _19;
  int _22;
  int _23;
  int _27;
  long unsigned int _29;
  long unsigned int _30;
  imgpel * * _32;
  imgpel * _33;
  unsigned int _36;
  long unsigned int _37;
  long unsigned int _38;
  struct mvinfo * _40;
  long unsigned int _42;
  long unsigned int _43;
  struct mvinfo * _44;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  cnt_12 = 0;
  p_13 = 7;
  x_14 = 0;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                12
  # cnt_3 = PHI <cnt_12(2), cnt_4(12)>
  # x_5 = PHI <x_14(2), x_51(12)>
  _18 = width_16(D) - blocksize_17(D);
  _19 = _18 + 1;
  if (_19 <= x_5)
    goto <bb 13>;
  else
    goto <bb 4>;
;;    succ:       13
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  y_20 = 0;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                11
  # cnt_4 = PHI <cnt_3(4), cnt_48(11)>
  # y_6 = PHI <y_20(4), y_50(11)>
  _22 = height_21(D) - blocksize_17(D);
  _23 = _22 + 1;
  if (_23 <= y_6)
    goto <bb 12>;
  else
    goto <bb 6>;
;;    succ:       12
;;                6

;;   basic block 6, loop depth 2
;;    pred:       5
  sad_24 = 4294967295;
  i_25 = 0;
;;    succ:       7

;;   basic block 7, loop depth 3
;;    pred:       6
;;                10
  # sad_1 = PHI <sad_24(6), sad_2(10)>
  # i_7 = PHI <i_25(6), i_47(10)>
  if (i_7 >= nRefs_26(D))
    goto <bb 11>;
  else
    goto <bb 8>;
;;    succ:       11
;;                8

;;   basic block 8, loop depth 3
;;    pred:       7
  _27 = y_6 * width_16(D);
  idx_28 = _27 + x_5;
  _29 = (long unsigned int) i_7;
  _30 = _29 * 8;
  _32 = refFrame_31(D) + _30;
  _33 = *_32;
  ES (currFrame_34(D), _33, &mv, p_13, idx_28, width_16(D), height_21(D), blocksize_17(D));
  _36 = mv.SAD;
  if (_36 < sad_1)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9
;;                10

;;   basic block 9, loop depth 3
;;    pred:       8
  _37 = (long unsigned int) cnt_4;
  _38 = _37 * 24;
  _40 = mvs_39(D) + _38;
  *_40 = mv;
  _42 = (long unsigned int) cnt_4;
  _43 = _42 * 24;
  _44 = mvs_39(D) + _43;
  _44->frame = i_7;
  sad_46 = mv.SAD;
;;    succ:       10

;;   basic block 10, loop depth 3
;;    pred:       8
;;                9
  # sad_2 = PHI <sad_1(8), sad_46(9)>
  i_47 = i_7 + 1;
  goto <bb 7>;
;;    succ:       7

;;   basic block 11, loop depth 2
;;    pred:       7
  cnt_48 = cnt_4 + 1;
  y_50 = y_6 + overlap_49(D);
  goto <bb 5>;
;;    succ:       5

;;   basic block 12, loop depth 1
;;    pred:       5
  x_51 = x_5 + overlap_49(D);
  goto <bb 3>;
;;    succ:       3

;;   basic block 13, loop depth 0
;;    pred:       3
  mv ={v} {CLOBBER};
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (sad_1 - 1 )
Partition 2 (sad_2 - 2 )
Partition 3 (cnt_3 - 3 )
Partition 4 (cnt_4 - 4 )
Partition 5 (x_5 - 5 )
Partition 6 (y_6 - 6 )
Partition 7 (i_7 - 7 )
Partition 12 (cnt_12 - 12 )
Partition 13 (p_13 - 13 )
Partition 14 (x_14 - 14 )
Partition 16 (width_16(D) - 16 )
Partition 17 (blocksize_17(D) - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (y_20 - 20 )
Partition 21 (height_21(D) - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (sad_24 - 24 )
Partition 25 (i_25 - 25 )
Partition 26 (nRefs_26(D) - 26 )
Partition 27 (_27 - 27 )
Partition 28 (idx_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (refFrame_31(D) - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (currFrame_34(D) - 34 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (mvs_39(D) - 39 )
Partition 40 (_40 - 40 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 46 (sad_46 - 46 )
Partition 47 (i_47 - 47 )
Partition 48 (cnt_48 - 48 )
Partition 49 (overlap_49(D) - 49 )
Partition 50 (y_50 - 50 )
Partition 51 (x_51 - 51 )


Partition map 

Partition 0 (sad_1 - 1 )
Partition 1 (sad_2 - 2 )
Partition 2 (cnt_3 - 3 )
Partition 3 (cnt_4 - 4 )
Partition 4 (x_5 - 5 )
Partition 5 (y_6 - 6 )
Partition 6 (i_7 - 7 )
Partition 7 (cnt_12 - 12 )
Partition 8 (x_14 - 14 )
Partition 9 (width_16(D) - 16 )
Partition 10 (blocksize_17(D) - 17 )
Partition 11 (y_20 - 20 )
Partition 12 (height_21(D) - 21 )
Partition 13 (sad_24 - 24 )
Partition 14 (i_25 - 25 )
Partition 15 (nRefs_26(D) - 26 )
Partition 16 (refFrame_31(D) - 31 )
Partition 17 (currFrame_34(D) - 34 )
Partition 18 (mvs_39(D) - 39 )
Partition 19 (sad_46 - 46 )
Partition 20 (i_47 - 47 )
Partition 21 (cnt_48 - 48 )
Partition 22 (overlap_49(D) - 49 )
Partition 23 (y_50 - 50 )
Partition 24 (x_51 - 51 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) sad_1 <-> sad_2
(2147483646) sad_1 <-> sad_24
(2147483646) sad_1 <-> sad_46
(2147483646) cnt_3 <-> cnt_4
(2147483646) cnt_3 <-> cnt_12
(2147483646) cnt_3 <-> cnt_48
(2147483646) x_5 <-> x_14
(2147483646) x_5 <-> x_51
(2147483646) y_6 <-> y_20
(2147483646) y_6 <-> y_50
(2147483646) i_7 <-> i_25
(2147483646) i_7 <-> i_47

Partition map 

Partition 0 (sad_1 - 1 )
Partition 1 (sad_2 - 2 )
Partition 2 (cnt_3 - 3 )
Partition 3 (cnt_4 - 4 )
Partition 4 (x_5 - 5 )
Partition 5 (y_6 - 6 )
Partition 6 (i_7 - 7 )
Partition 7 (cnt_12 - 12 )
Partition 8 (x_14 - 14 )
Partition 9 (width_16(D) - 16 )
Partition 10 (blocksize_17(D) - 17 )
Partition 11 (y_20 - 20 )
Partition 12 (height_21(D) - 21 )
Partition 13 (sad_24 - 24 )
Partition 14 (i_25 - 25 )
Partition 15 (nRefs_26(D) - 26 )
Partition 16 (refFrame_31(D) - 31 )
Partition 17 (currFrame_34(D) - 34 )
Partition 18 (mvs_39(D) - 39 )
Partition 19 (sad_46 - 46 )
Partition 20 (i_47 - 47 )
Partition 21 (cnt_48 - 48 )
Partition 22 (overlap_49(D) - 49 )
Partition 23 (y_50 - 50 )
Partition 24 (x_51 - 51 )

Coalesce list: (1)sad_1 & (2)sad_2 [map: 0, 1] : Success -> 0
Coalesce list: (1)sad_1 & (24)sad_24 [map: 0, 13] : Success -> 0
Coalesce list: (1)sad_1 & (46)sad_46 [map: 0, 19] : Success -> 0
Coalesce list: (3)cnt_3 & (4)cnt_4 [map: 2, 3] : Success -> 2
Coalesce list: (3)cnt_3 & (12)cnt_12 [map: 2, 7] : Success -> 2
Coalesce list: (3)cnt_3 & (48)cnt_48 [map: 2, 21] : Success -> 2
Coalesce list: (5)x_5 & (14)x_14 [map: 4, 8] : Success -> 4
Coalesce list: (5)x_5 & (51)x_51 [map: 4, 24] : Success -> 4
Coalesce list: (6)y_6 & (20)y_20 [map: 5, 11] : Success -> 5
Coalesce list: (6)y_6 & (50)y_50 [map: 5, 23] : Success -> 5
Coalesce list: (7)i_7 & (25)i_25 [map: 6, 14] : Success -> 6
Coalesce list: (7)i_7 & (47)i_47 [map: 6, 20] : Success -> 6
Coalesce list: (2)sad_1 & (46)sad_1: Already Coalesced.
Coalesce list: (7)i_7 & (47)i_7: Already Coalesced.
Coalesce list: (7)i_7 & (25)i_7: Already Coalesced.
Coalesce list: (1)sad_1 & (2)sad_1: Already Coalesced.
Coalesce list: (1)sad_1 & (24)sad_1: Already Coalesced.
Coalesce list: (6)y_6 & (50)y_6: Already Coalesced.
Coalesce list: (6)y_6 & (20)y_6: Already Coalesced.
Coalesce list: (4)cnt_3 & (48)cnt_3: Already Coalesced.
Coalesce list: (4)cnt_3 & (3)cnt_3: Already Coalesced.
Coalesce list: (5)x_5 & (51)x_5: Already Coalesced.
Coalesce list: (5)x_5 & (14)x_5: Already Coalesced.
Coalesce list: (3)cnt_3 & (12)cnt_3: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (sad_1 - 1 2 24 46 )
Partition 1 (cnt_3 - 3 4 12 48 )
Partition 2 (x_5 - 5 14 51 )
Partition 3 (y_6 - 6 20 50 )
Partition 4 (i_7 - 7 25 47 )
Partition 5 (p_13 - 13 )
Partition 6 (width_16(D) - 16 )
Partition 7 (blocksize_17(D) - 17 )
Partition 8 (_18 - 18 )
Partition 9 (_19 - 19 )
Partition 10 (height_21(D) - 21 )
Partition 11 (_22 - 22 )
Partition 12 (_23 - 23 )
Partition 13 (nRefs_26(D) - 26 )
Partition 14 (_27 - 27 )
Partition 15 (idx_28 - 28 )
Partition 16 (_29 - 29 )
Partition 17 (_30 - 30 )
Partition 18 (refFrame_31(D) - 31 )
Partition 19 (_32 - 32 )
Partition 20 (_33 - 33 )
Partition 21 (currFrame_34(D) - 34 )
Partition 22 (_36 - 36 )
Partition 23 (_37 - 37 )
Partition 24 (_38 - 38 )
Partition 25 (mvs_39(D) - 39 )
Partition 26 (_40 - 40 )
Partition 27 (_42 - 42 )
Partition 28 (_43 - 43 )
Partition 29 (_44 - 44 )
Partition 30 (overlap_49(D) - 49 )

void obme(imgpel**, imgpel*, mvinfo*, int, int, int, int, int) (imgpel * * refFrame, imgpel * currFrame, struct mvinfo * mvs, int nRefs, int width, int height, int blocksize, int overlap)
{
  int i;
  int y;
  int x;
  int p;
  int cnt;
  struct mvinfo mv;
  unsigned int sad;
  int idx;
  struct mvinfo * D.35008;
  long unsigned int D.35007;
  long unsigned int D.35006;
  struct mvinfo * D.35005;
  long unsigned int D.35004;
  long unsigned int D.35003;
  unsigned int D.35000;
  imgpel * D.34999;
  imgpel * * D.34998;
  long unsigned int D.34997;
  long unsigned int D.34996;
  int D.34995;
  int D.34991;
  int D.34990;
  int D.34987;
  int D.34986;
  int _18;
  int _19;
  int _22;
  int _23;
  int _27;
  long unsigned int _29;
  long unsigned int _30;
  imgpel * * _32;
  imgpel * _33;
  unsigned int _36;
  long unsigned int _37;
  long unsigned int _38;
  struct mvinfo * _40;
  long unsigned int _42;
  long unsigned int _43;
  struct mvinfo * _44;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  cnt_12 = 0;
  p_13 = 7;
  x_14 = 0;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                12
  # cnt_3 = PHI <cnt_12(2), cnt_4(12)>
  # x_5 = PHI <x_14(2), x_51(12)>
  _18 = width_16(D) - blocksize_17(D);
  _19 = _18 + 1;
  if (_19 <= x_5)
    goto <bb 13>;
  else
    goto <bb 4>;
;;    succ:       13
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  y_20 = 0;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                11
  # cnt_4 = PHI <cnt_3(4), cnt_48(11)>
  # y_6 = PHI <y_20(4), y_50(11)>
  _22 = height_21(D) - blocksize_17(D);
  _23 = _22 + 1;
  if (_23 <= y_6)
    goto <bb 12>;
  else
    goto <bb 6>;
;;    succ:       12
;;                6

;;   basic block 6, loop depth 2
;;    pred:       5
  sad_24 = 4294967295;
  i_25 = 0;
;;    succ:       7

;;   basic block 7, loop depth 3
;;    pred:       6
;;                10
  # sad_1 = PHI <sad_24(6), sad_2(10)>
  # i_7 = PHI <i_25(6), i_47(10)>
  if (i_7 >= nRefs_26(D))
    goto <bb 11>;
  else
    goto <bb 8>;
;;    succ:       11
;;                8

;;   basic block 8, loop depth 3
;;    pred:       7
  _27 = y_6 * width_16(D);
  idx_28 = _27 + x_5;
  _29 = (long unsigned int) i_7;
  _30 = _29 * 8;
  _32 = refFrame_31(D) + _30;
  _33 = *_32;
  ES (currFrame_34(D), _33, &mv, p_13, idx_28, width_16(D), height_21(D), blocksize_17(D));
  _36 = mv.SAD;
  if (_36 < sad_1)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9
;;                10

;;   basic block 9, loop depth 3
;;    pred:       8
  _37 = (long unsigned int) cnt_4;
  _38 = _37 * 24;
  _40 = mvs_39(D) + _38;
  *_40 = mv;
  _42 = (long unsigned int) cnt_4;
  _43 = _42 * 24;
  _44 = mvs_39(D) + _43;
  _44->frame = i_7;
  sad_46 = mv.SAD;
;;    succ:       10

;;   basic block 10, loop depth 3
;;    pred:       8
;;                9
  # sad_2 = PHI <sad_1(8), sad_46(9)>
  i_47 = i_7 + 1;
  goto <bb 7>;
;;    succ:       7

;;   basic block 11, loop depth 2
;;    pred:       7
  cnt_48 = cnt_4 + 1;
  y_50 = y_6 + overlap_49(D);
  goto <bb 5>;
;;    succ:       5

;;   basic block 12, loop depth 1
;;    pred:       5
  x_51 = x_5 + overlap_49(D);
  goto <bb 3>;
;;    succ:       3

;;   basic block 13, loop depth 0
;;    pred:       3
  mv ={v} {CLOBBER};
  return;
;;    succ:       EXIT

}


Partition 7: size 24 align 16
	mv
Partition 6: size 4 align 4
	idx_28
Partition 5: size 4 align 4
	p_13
Partition 4: size 4 align 4
	i_7
Partition 3: size 4 align 4
	y_6
Partition 2: size 4 align 4
	x_5
Partition 1: size 4 align 4
	cnt_3
Partition 0: size 4 align 4
	sad_1

;; Generating RTL for gimple basic block 2

;; cnt_12 = 0;

(insn 12 11 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 cnt+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:72 -1
     (nil))

;; p_13 = 7;

(insn 13 12 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S4 A32])
        (const_int 7 [0x7])) /home/kai/git_repos/obme/obme.cpp:73 -1
     (nil))

;; x_14 = 0;

(insn 14 13 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [0 x+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:76 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _18 = width_16(D) - blocksize_17(D);

(insn 16 15 17 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 width+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:76 -1
     (nil))

(insn 17 16 0 (parallel [
            (set (reg:SI 87 [ D.35027 ])
                (minus:SI (reg:SI 103)
                    (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [0 blocksize+0 S4 A64])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:76 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -96 [0xffffffffffffffa0])) [0 width+0 S4 A32])
            (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [0 blocksize+0 S4 A64]))
        (nil)))

;; _19 = _18 + 1;

(insn 18 17 0 (parallel [
            (set (reg:SI 88 [ D.35027 ])
                (plus:SI (reg:SI 87 [ D.35027 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:76 -1
     (nil))

;; if (_19 <= x_5)

(insn 19 18 20 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88 [ D.35027 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -52 [0xffffffffffffffcc])) [0 x+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:76 -1
     (nil))

(jump_insn 20 19 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) /home/kai/git_repos/obme/obme.cpp:76 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; y_20 = 0;

(insn 22 21 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 y+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:77 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _22 = height_21(D) - blocksize_17(D);

(insn 24 23 25 (set (reg:SI 104)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -100 [0xffffffffffffff9c])) [0 height+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:77 -1
     (nil))

(insn 25 24 0 (parallel [
            (set (reg:SI 89 [ D.35027 ])
                (minus:SI (reg:SI 104)
                    (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [0 blocksize+0 S4 A64])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:77 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -100 [0xffffffffffffff9c])) [0 height+0 S4 A32])
            (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [0 blocksize+0 S4 A64]))
        (nil)))

;; _23 = _22 + 1;

(insn 26 25 0 (parallel [
            (set (reg:SI 90 [ D.35027 ])
                (plus:SI (reg:SI 89 [ D.35027 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:77 -1
     (nil))

;; if (_23 <= y_6)

(insn 27 26 28 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 90 [ D.35027 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [0 y+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:77 -1
     (nil))

(jump_insn 28 27 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) /home/kai/git_repos/obme/obme.cpp:77 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; sad_24 = 4294967295;

(insn 30 29 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -60 [0xffffffffffffffc4])) [0 sad+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) /home/kai/git_repos/obme/obme.cpp:78 -1
     (nil))

;; i_25 = 0;

(insn 31 30 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 i+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:79 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; if (i_7 >= nRefs_26(D))

(insn 33 32 34 (set (reg:SI 105)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:79 -1
     (nil))

(insn 34 33 35 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 105)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -92 [0xffffffffffffffa4])) [0 nRefs+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:79 -1
     (nil))

(jump_insn 35 34 0 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) /home/kai/git_repos/obme/obme.cpp:79 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; _27 = y_6 * width_16(D);

(insn 37 36 38 (set (reg:SI 106)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:80 -1
     (nil))

(insn 38 37 0 (parallel [
            (set (reg:SI 91 [ D.35027 ])
                (mult:SI (reg:SI 106)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -96 [0xffffffffffffffa0])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:80 -1
     (nil))

;; idx_28 = _27 + x_5;

(insn 42 38 43 (set (reg:SI 110)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:80 -1
     (nil))

(insn 43 42 44 (parallel [
            (set (reg:SI 109)
                (plus:SI (reg:SI 91 [ D.35027 ])
                    (reg:SI 110)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:80 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 91 [ D.35027 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -52 [0xffffffffffffffcc])) [0 x+0 S4 A32]))
        (nil)))

(insn 44 43 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 idx+0 S4 A32])
        (reg:SI 109)) /home/kai/git_repos/obme/obme.cpp:80 -1
     (nil))

;; _29 = (long unsigned int) i_7;

(insn 45 44 46 (set (reg:SI 111)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))

(insn 46 45 0 (set (reg:DI 92 [ D.35028 ])
        (sign_extend:DI (reg:SI 111))) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))

;; _30 = _29 * 8;

(insn 47 46 0 (parallel [
            (set (reg:DI 93 [ D.35028 ])
                (ashift:DI (reg:DI 92 [ D.35028 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))

;; _32 = refFrame_31(D) + _30;

(insn 48 47 49 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 refFrame+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))

(insn 49 48 0 (parallel [
            (set (reg/f:DI 94 [ D.35029 ])
                (plus:DI (reg:DI 93 [ D.35028 ])
                    (reg/f:DI 112)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:81 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -72 [0xffffffffffffffb8])) [0 refFrame+0 S8 A64])
            (reg:DI 93 [ D.35028 ]))
        (nil)))

;; _33 = *_32;

(insn 50 49 0 (set (reg/f:DI 95 [ D.35030 ])
        (mem/f:DI (reg/f:DI 94 [ D.35029 ]) [0 *_32+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))

;; ES (currFrame_34(D), _33, &mv, p_13, idx_28, width_16(D), height_21(D), blocksize_17(D));

(insn 51 50 52 (set (reg:SI 113)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 width+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))

(insn 52 51 53 (set (reg:SI 114)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 idx+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))

(insn 53 52 54 (set (reg:SI 115)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))

(insn 54 53 55 (parallel [
            (set (reg:DI 116)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))

(insn 55 54 56 (set (reg:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [0 currFrame+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))

(insn 56 55 57 (set (reg:SI 118)
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [0 blocksize+0 S4 A64])) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))

(insn 57 56 58 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 118)) /home/kai/git_repos/obme/obme.cpp:81 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))

(insn 58 57 59 (set (reg:SI 119)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -100 [0xffffffffffffff9c])) [0 height+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))

(insn 59 58 60 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 119)) /home/kai/git_repos/obme/obme.cpp:81 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(insn 60 59 61 (set (reg:SI 38 r9)
        (reg:SI 113)) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))

(insn 61 60 62 (set (reg:SI 37 r8)
        (reg:SI 114)) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))

(insn 62 61 63 (set (reg:SI 2 cx)
        (reg:SI 115)) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))

(insn 63 62 64 (set (reg:DI 1 dx)
        (reg:DI 116)) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))

(insn 64 63 65 (set (reg:DI 4 si)
        (reg/f:DI 95 [ D.35030 ])) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))

(insn 65 64 66 (set (reg:DI 5 di)
        (reg:DI 117)) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))

(call_insn 66 65 67 (call (mem:QI (symbol_ref:DI ("_Z2ESPcS_R6mvinfoiiiii") [flags 0x3]  <function_decl 0x7f86e163ce58 ES>) [0 ES S1 A8])
        (const_int 16 [0x10])) /home/kai/git_repos/obme/obme.cpp:81 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))

(insn 67 66 0 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:81 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; _36 = mv.SAD;

(insn 68 67 0 (set (reg:SI 96 [ D.35031 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 mv.SAD+0 S4 A64])) /home/kai/git_repos/obme/obme.cpp:82 -1
     (nil))

;; if (_36 < sad_1)

(insn 69 68 70 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 96 [ D.35031 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -60 [0xffffffffffffffc4])) [0 sad+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:82 -1
     (nil))

(jump_insn 70 69 0 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) /home/kai/git_repos/obme/obme.cpp:82 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; _37 = (long unsigned int) cnt_4;

(insn 72 71 73 (set (reg:SI 120)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 cnt+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:84 -1
     (nil))

(insn 73 72 0 (set (reg:DI 97 [ D.35028 ])
        (sign_extend:DI (reg:SI 120))) /home/kai/git_repos/obme/obme.cpp:84 -1
     (nil))

;; _38 = _37 * 24;

(insn 74 73 75 (set (reg:DI 121)
        (reg:DI 97 [ D.35028 ])) /home/kai/git_repos/obme/obme.cpp:84 -1
     (nil))

(insn 75 74 76 (parallel [
            (set (reg:DI 121)
                (ashift:DI (reg:DI 121)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:84 -1
     (nil))

(insn 76 75 77 (parallel [
            (set (reg:DI 121)
                (plus:DI (reg:DI 121)
                    (reg:DI 97 [ D.35028 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:84 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 97 [ D.35028 ])
            (const_int 3 [0x3]))
        (nil)))

(insn 77 76 78 (parallel [
            (set (reg:DI 122)
                (ashift:DI (reg:DI 121)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:84 -1
     (nil))

(insn 78 77 79 (set (reg:DI 121)
        (reg:DI 122)) /home/kai/git_repos/obme/obme.cpp:84 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 97 [ D.35028 ])
            (const_int 24 [0x18]))
        (nil)))

(insn 79 78 0 (set (reg:DI 98 [ D.35028 ])
        (reg:DI 121)) /home/kai/git_repos/obme/obme.cpp:84 -1
     (nil))

;; _40 = mvs_39(D) + _38;

(insn 80 79 81 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 mvs+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:84 -1
     (nil))

(insn 81 80 0 (parallel [
            (set (reg/f:DI 99 [ D.35032 ])
                (plus:DI (reg:DI 98 [ D.35028 ])
                    (reg/f:DI 123)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:84 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -88 [0xffffffffffffffa8])) [0 mvs+0 S8 A64])
            (reg:DI 98 [ D.35028 ]))
        (nil)))

;; *_40 = mv;

(insn 82 81 83 (set (reg:DI 124)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 mv+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:84 -1
     (nil))

(insn 83 82 84 (set (mem:DI (reg/f:DI 99 [ D.35032 ]) [0 *_40+0 S8 A32])
        (reg:DI 124)) /home/kai/git_repos/obme/obme.cpp:84 -1
     (nil))

(insn 84 83 85 (set (reg:DI 125)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 mv+8 S8 A64])) /home/kai/git_repos/obme/obme.cpp:84 -1
     (nil))

(insn 85 84 86 (set (mem:DI (plus:DI (reg/f:DI 99 [ D.35032 ])
                (const_int 8 [0x8])) [0 *_40+8 S8 A32])
        (reg:DI 125)) /home/kai/git_repos/obme/obme.cpp:84 -1
     (nil))

(insn 86 85 87 (set (reg:DI 126)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 mv+16 S8 A64])) /home/kai/git_repos/obme/obme.cpp:84 -1
     (nil))

(insn 87 86 0 (set (mem:DI (plus:DI (reg/f:DI 99 [ D.35032 ])
                (const_int 16 [0x10])) [0 *_40+16 S8 A32])
        (reg:DI 126)) /home/kai/git_repos/obme/obme.cpp:84 -1
     (nil))

;; _42 = (long unsigned int) cnt_4;

(insn 88 87 89 (set (reg:SI 127)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 cnt+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:85 -1
     (nil))

(insn 89 88 0 (set (reg:DI 100 [ D.35028 ])
        (sign_extend:DI (reg:SI 127))) /home/kai/git_repos/obme/obme.cpp:85 -1
     (nil))

;; _43 = _42 * 24;

(insn 90 89 91 (set (reg:DI 128)
        (reg:DI 100 [ D.35028 ])) /home/kai/git_repos/obme/obme.cpp:85 -1
     (nil))

(insn 91 90 92 (parallel [
            (set (reg:DI 128)
                (ashift:DI (reg:DI 128)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:85 -1
     (nil))

(insn 92 91 93 (parallel [
            (set (reg:DI 128)
                (plus:DI (reg:DI 128)
                    (reg:DI 100 [ D.35028 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:85 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 100 [ D.35028 ])
            (const_int 3 [0x3]))
        (nil)))

(insn 93 92 94 (parallel [
            (set (reg:DI 129)
                (ashift:DI (reg:DI 128)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:85 -1
     (nil))

(insn 94 93 95 (set (reg:DI 128)
        (reg:DI 129)) /home/kai/git_repos/obme/obme.cpp:85 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 100 [ D.35028 ])
            (const_int 24 [0x18]))
        (nil)))

(insn 95 94 0 (set (reg:DI 101 [ D.35028 ])
        (reg:DI 128)) /home/kai/git_repos/obme/obme.cpp:85 -1
     (nil))

;; _44 = mvs_39(D) + _43;

(insn 96 95 97 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 mvs+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:85 -1
     (nil))

(insn 97 96 0 (parallel [
            (set (reg/f:DI 102 [ D.35032 ])
                (plus:DI (reg:DI 101 [ D.35028 ])
                    (reg/f:DI 130)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:85 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -88 [0xffffffffffffffa8])) [0 mvs+0 S8 A64])
            (reg:DI 101 [ D.35028 ]))
        (nil)))

;; _44->frame = i_7;

(insn 98 97 99 (set (reg:SI 131)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:85 -1
     (nil))

(insn 99 98 0 (set (mem/j:SI (plus:DI (reg/f:DI 102 [ D.35032 ])
                (const_int 20 [0x14])) [0 _44->frame+0 S4 A32])
        (reg:SI 131)) /home/kai/git_repos/obme/obme.cpp:85 -1
     (nil))

;; sad_46 = mv.SAD;

(insn 100 99 101 (set (reg:SI 132)
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 mv.SAD+0 S4 A64])) /home/kai/git_repos/obme/obme.cpp:86 -1
     (nil))

(insn 101 100 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -60 [0xffffffffffffffc4])) [0 sad+0 S4 A32])
        (reg:SI 132)) /home/kai/git_repos/obme/obme.cpp:86 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 102 101 103 20 "" [0 uses])

(note 103 102 0 NOTE_INSN_BASIC_BLOCK)

;; i_47 = i_7 + 1;

(insn 104 103 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -44 [0xffffffffffffffd4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -44 [0xffffffffffffffd4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:79 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; 

(code_label 108 107 109 19 "" [0 uses])

(note 109 108 0 NOTE_INSN_BASIC_BLOCK)

;; cnt_48 = cnt_4 + 1;

(insn 110 109 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -56 [0xffffffffffffffc8])) [0 cnt+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -56 [0xffffffffffffffc8])) [0 cnt+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:89 -1
     (nil))

;; y_50 = y_6 + overlap_49(D);

(insn 111 110 112 (set (reg:SI 133)
        (mem/c:SI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 overlap+0 S4 A64])) /home/kai/git_repos/obme/obme.cpp:77 -1
     (nil))

(insn 112 111 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -48 [0xffffffffffffffd0])) [0 y+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -48 [0xffffffffffffffd0])) [0 y+0 S4 A32])
                    (reg:SI 133)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:77 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; 

(code_label 116 115 117 18 "" [0 uses])

(note 117 116 0 NOTE_INSN_BASIC_BLOCK)

;; x_51 = x_5 + overlap_49(D);

(insn 118 117 119 (set (reg:SI 134)
        (mem/c:SI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 overlap+0 S4 A64])) /home/kai/git_repos/obme/obme.cpp:76 -1
     (nil))

(insn 119 118 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -52 [0xffffffffffffffcc])) [0 x+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -52 [0xffffffffffffffcc])) [0 x+0 S4 A32])
                    (reg:SI 134)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:76 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; 

(code_label 123 122 124 17 "" [0 uses])

(note 124 123 0 NOTE_INSN_BASIC_BLOCK)

;; mv ={v} {CLOBBER};

(nil)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 4->14 redirected to 15
deleting block 14


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 refFrame+0 S8 A64])
        (reg:DI 5 di [ refFrame ])) /home/kai/git_repos/obme/obme.cpp:68 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [0 currFrame+0 S8 A64])
        (reg:DI 4 si [ currFrame ])) /home/kai/git_repos/obme/obme.cpp:68 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 mvs+0 S8 A64])
        (reg:DI 1 dx [ mvs ])) /home/kai/git_repos/obme/obme.cpp:68 -1
     (nil))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [0 nRefs+0 S4 A32])
        (reg:SI 2 cx [ nRefs ])) /home/kai/git_repos/obme/obme.cpp:68 -1
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 width+0 S4 A32])
        (reg:SI 37 r8 [ width ])) /home/kai/git_repos/obme/obme.cpp:68 -1
     (nil))
(insn 7 6 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -100 [0xffffffffffffff9c])) [0 height+0 S4 A32])
        (reg:SI 38 r9 [ height ])) /home/kai/git_repos/obme/obme.cpp:68 -1
     (nil))
(note 8 7 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 8 12 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.35033+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:68 -1
     (nil))
(insn 12 9 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 cnt+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:72 -1
     (nil))
(insn 13 12 14 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S4 A32])
        (const_int 7 [0x7])) /home/kai/git_repos/obme/obme.cpp:73 -1
     (nil))
(insn 14 13 120 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [0 x+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:76 -1
     (nil))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              13 (DFS_BACK)
(code_label 120 14 15 4 23 "" [1 uses])
(note 15 120 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 width+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:76 -1
     (nil))
(insn 17 16 18 4 (parallel [
            (set (reg:SI 87 [ D.35027 ])
                (minus:SI (reg:SI 103)
                    (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [0 blocksize+0 S4 A64])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:76 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -96 [0xffffffffffffffa0])) [0 width+0 S4 A32])
            (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [0 blocksize+0 S4 A64]))
        (nil)))
(insn 18 17 19 4 (parallel [
            (set (reg:SI 88 [ D.35027 ])
                (plus:SI (reg:SI 87 [ D.35027 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:76 -1
     (nil))
(insn 19 18 20 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88 [ D.35027 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -52 [0xffffffffffffffcc])) [0 x+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:76 -1
     (nil))
(jump_insn 20 19 21 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 125)
            (pc))) /home/kai/git_repos/obme/obme.cpp:76 612 {*jcc_1}
     (nil)
 -> 125)
;;  succ:       15
;;              5 (FALLTHRU)

;; basic block 5, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 113 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 y+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:77 -1
     (nil))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
;;              12 (DFS_BACK)
(code_label 113 22 23 6 22 "" [1 uses])
(note 23 113 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 6 (set (reg:SI 104)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -100 [0xffffffffffffff9c])) [0 height+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:77 -1
     (nil))
(insn 25 24 26 6 (parallel [
            (set (reg:SI 89 [ D.35027 ])
                (minus:SI (reg:SI 104)
                    (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [0 blocksize+0 S4 A64])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:77 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -100 [0xffffffffffffff9c])) [0 height+0 S4 A32])
            (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [0 blocksize+0 S4 A64]))
        (nil)))
(insn 26 25 27 6 (parallel [
            (set (reg:SI 90 [ D.35027 ])
                (plus:SI (reg:SI 89 [ D.35027 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:77 -1
     (nil))
(insn 27 26 28 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 90 [ D.35027 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [0 y+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:77 -1
     (nil))
(jump_insn 28 27 29 6 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) /home/kai/git_repos/obme/obme.cpp:77 -1
     (nil)
 -> 116)
;;  succ:       13
;;              7 (FALLTHRU)

;; basic block 7, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 29 28 30 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -60 [0xffffffffffffffc4])) [0 sad+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) /home/kai/git_repos/obme/obme.cpp:78 -1
     (nil))
(insn 31 30 105 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 i+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:79 -1
     (nil))
;;  succ:       8 (FALLTHRU)

;; basic block 8, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
;;              11 (DFS_BACK)
(code_label 105 31 32 8 21 "" [1 uses])
(note 32 105 33 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 8 (set (reg:SI 105)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:79 -1
     (nil))
(insn 34 33 35 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 105)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -92 [0xffffffffffffffa4])) [0 nRefs+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:79 -1
     (nil))
(jump_insn 35 34 36 8 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 108)
            (pc))) /home/kai/git_repos/obme/obme.cpp:79 -1
     (nil)
 -> 108)
;;  succ:       12
;;              9 (FALLTHRU)

;; basic block 9, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 36 35 37 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 9 (set (reg:SI 106)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:80 -1
     (nil))
(insn 38 37 42 9 (parallel [
            (set (reg:SI 91 [ D.35027 ])
                (mult:SI (reg:SI 106)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -96 [0xffffffffffffffa0])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:80 -1
     (nil))
(insn 42 38 43 9 (set (reg:SI 110)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:80 -1
     (nil))
(insn 43 42 44 9 (parallel [
            (set (reg:SI 109)
                (plus:SI (reg:SI 91 [ D.35027 ])
                    (reg:SI 110)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:80 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 91 [ D.35027 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -52 [0xffffffffffffffcc])) [0 x+0 S4 A32]))
        (nil)))
(insn 44 43 45 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 idx+0 S4 A32])
        (reg:SI 109)) /home/kai/git_repos/obme/obme.cpp:80 -1
     (nil))
(insn 45 44 46 9 (set (reg:SI 111)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 92 [ D.35028 ])
        (sign_extend:DI (reg:SI 111))) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))
(insn 47 46 48 9 (parallel [
            (set (reg:DI 93 [ D.35028 ])
                (ashift:DI (reg:DI 92 [ D.35028 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))
(insn 48 47 49 9 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [0 refFrame+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))
(insn 49 48 50 9 (parallel [
            (set (reg/f:DI 94 [ D.35029 ])
                (plus:DI (reg:DI 93 [ D.35028 ])
                    (reg/f:DI 112)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:81 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -72 [0xffffffffffffffb8])) [0 refFrame+0 S8 A64])
            (reg:DI 93 [ D.35028 ]))
        (nil)))
(insn 50 49 51 9 (set (reg/f:DI 95 [ D.35030 ])
        (mem/f:DI (reg/f:DI 94 [ D.35029 ]) [0 *_32+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))
(insn 51 50 52 9 (set (reg:SI 113)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 width+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))
(insn 52 51 53 9 (set (reg:SI 114)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [0 idx+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))
(insn 53 52 54 9 (set (reg:SI 115)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))
(insn 54 53 55 9 (parallel [
            (set (reg:DI 116)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))
(insn 55 54 56 9 (set (reg:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [0 currFrame+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))
(insn 56 55 57 9 (set (reg:SI 118)
        (mem/c:SI (reg/f:DI 81 virtual-incoming-args) [0 blocksize+0 S4 A64])) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))
(insn 57 56 58 9 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 118)) /home/kai/git_repos/obme/obme.cpp:81 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 58 57 59 9 (set (reg:SI 119)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -100 [0xffffffffffffff9c])) [0 height+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))
(insn 59 58 60 9 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 119)) /home/kai/git_repos/obme/obme.cpp:81 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 60 59 61 9 (set (reg:SI 38 r9)
        (reg:SI 113)) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))
(insn 61 60 62 9 (set (reg:SI 37 r8)
        (reg:SI 114)) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))
(insn 62 61 63 9 (set (reg:SI 2 cx)
        (reg:SI 115)) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))
(insn 63 62 64 9 (set (reg:DI 1 dx)
        (reg:DI 116)) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))
(insn 64 63 65 9 (set (reg:DI 4 si)
        (reg/f:DI 95 [ D.35030 ])) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))
(insn 65 64 66 9 (set (reg:DI 5 di)
        (reg:DI 117)) /home/kai/git_repos/obme/obme.cpp:81 -1
     (nil))
(call_insn 66 65 67 9 (call (mem:QI (symbol_ref:DI ("_Z2ESPcS_R6mvinfoiiiii") [flags 0x3]  <function_decl 0x7f86e163ce58 ES>) [0 ES S1 A8])
        (const_int 16 [0x10])) /home/kai/git_repos/obme/obme.cpp:81 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 67 66 68 9 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:81 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 68 67 69 9 (set (reg:SI 96 [ D.35031 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 mv.SAD+0 S4 A64])) /home/kai/git_repos/obme/obme.cpp:82 -1
     (nil))
(insn 69 68 70 9 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 96 [ D.35031 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -60 [0xffffffffffffffc4])) [0 sad+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:82 -1
     (nil))
(jump_insn 70 69 71 9 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) /home/kai/git_repos/obme/obme.cpp:82 -1
     (nil)
 -> 102)
;;  succ:       10 (FALLTHRU)
;;              11

;; basic block 10, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 71 70 72 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 10 (set (reg:SI 120)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 cnt+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:84 -1
     (nil))
(insn 73 72 74 10 (set (reg:DI 97 [ D.35028 ])
        (sign_extend:DI (reg:SI 120))) /home/kai/git_repos/obme/obme.cpp:84 -1
     (nil))
(insn 74 73 75 10 (set (reg:DI 121)
        (reg:DI 97 [ D.35028 ])) /home/kai/git_repos/obme/obme.cpp:84 -1
     (nil))
(insn 75 74 76 10 (parallel [
            (set (reg:DI 121)
                (ashift:DI (reg:DI 121)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:84 -1
     (nil))
(insn 76 75 77 10 (parallel [
            (set (reg:DI 121)
                (plus:DI (reg:DI 121)
                    (reg:DI 97 [ D.35028 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:84 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 97 [ D.35028 ])
            (const_int 3 [0x3]))
        (nil)))
(insn 77 76 78 10 (parallel [
            (set (reg:DI 122)
                (ashift:DI (reg:DI 121)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:84 -1
     (nil))
(insn 78 77 79 10 (set (reg:DI 121)
        (reg:DI 122)) /home/kai/git_repos/obme/obme.cpp:84 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 97 [ D.35028 ])
            (const_int 24 [0x18]))
        (nil)))
(insn 79 78 80 10 (set (reg:DI 98 [ D.35028 ])
        (reg:DI 121)) /home/kai/git_repos/obme/obme.cpp:84 -1
     (nil))
(insn 80 79 81 10 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 mvs+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:84 -1
     (nil))
(insn 81 80 82 10 (parallel [
            (set (reg/f:DI 99 [ D.35032 ])
                (plus:DI (reg:DI 98 [ D.35028 ])
                    (reg/f:DI 123)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:84 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -88 [0xffffffffffffffa8])) [0 mvs+0 S8 A64])
            (reg:DI 98 [ D.35028 ]))
        (nil)))
(insn 82 81 83 10 (set (reg:DI 124)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 mv+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:84 -1
     (nil))
(insn 83 82 84 10 (set (mem:DI (reg/f:DI 99 [ D.35032 ]) [0 *_40+0 S8 A32])
        (reg:DI 124)) /home/kai/git_repos/obme/obme.cpp:84 -1
     (nil))
(insn 84 83 85 10 (set (reg:DI 125)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 mv+8 S8 A64])) /home/kai/git_repos/obme/obme.cpp:84 -1
     (nil))
(insn 85 84 86 10 (set (mem:DI (plus:DI (reg/f:DI 99 [ D.35032 ])
                (const_int 8 [0x8])) [0 *_40+8 S8 A32])
        (reg:DI 125)) /home/kai/git_repos/obme/obme.cpp:84 -1
     (nil))
(insn 86 85 87 10 (set (reg:DI 126)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 mv+16 S8 A64])) /home/kai/git_repos/obme/obme.cpp:84 -1
     (nil))
(insn 87 86 88 10 (set (mem:DI (plus:DI (reg/f:DI 99 [ D.35032 ])
                (const_int 16 [0x10])) [0 *_40+16 S8 A32])
        (reg:DI 126)) /home/kai/git_repos/obme/obme.cpp:84 -1
     (nil))
(insn 88 87 89 10 (set (reg:SI 127)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 cnt+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:85 -1
     (nil))
(insn 89 88 90 10 (set (reg:DI 100 [ D.35028 ])
        (sign_extend:DI (reg:SI 127))) /home/kai/git_repos/obme/obme.cpp:85 -1
     (nil))
(insn 90 89 91 10 (set (reg:DI 128)
        (reg:DI 100 [ D.35028 ])) /home/kai/git_repos/obme/obme.cpp:85 -1
     (nil))
(insn 91 90 92 10 (parallel [
            (set (reg:DI 128)
                (ashift:DI (reg:DI 128)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:85 -1
     (nil))
(insn 92 91 93 10 (parallel [
            (set (reg:DI 128)
                (plus:DI (reg:DI 128)
                    (reg:DI 100 [ D.35028 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:85 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 100 [ D.35028 ])
            (const_int 3 [0x3]))
        (nil)))
(insn 93 92 94 10 (parallel [
            (set (reg:DI 129)
                (ashift:DI (reg:DI 128)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:85 -1
     (nil))
(insn 94 93 95 10 (set (reg:DI 128)
        (reg:DI 129)) /home/kai/git_repos/obme/obme.cpp:85 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 100 [ D.35028 ])
            (const_int 24 [0x18]))
        (nil)))
(insn 95 94 96 10 (set (reg:DI 101 [ D.35028 ])
        (reg:DI 128)) /home/kai/git_repos/obme/obme.cpp:85 -1
     (nil))
(insn 96 95 97 10 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [0 mvs+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:85 -1
     (nil))
(insn 97 96 98 10 (parallel [
            (set (reg/f:DI 102 [ D.35032 ])
                (plus:DI (reg:DI 101 [ D.35028 ])
                    (reg/f:DI 130)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:85 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -88 [0xffffffffffffffa8])) [0 mvs+0 S8 A64])
            (reg:DI 101 [ D.35028 ]))
        (nil)))
(insn 98 97 99 10 (set (reg:SI 131)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:85 -1
     (nil))
(insn 99 98 100 10 (set (mem/j:SI (plus:DI (reg/f:DI 102 [ D.35032 ])
                (const_int 20 [0x14])) [0 _44->frame+0 S4 A32])
        (reg:SI 131)) /home/kai/git_repos/obme/obme.cpp:85 -1
     (nil))
(insn 100 99 101 10 (set (reg:SI 132)
        (mem/j/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 mv.SAD+0 S4 A64])) /home/kai/git_repos/obme/obme.cpp:86 -1
     (nil))
(insn 101 100 102 10 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -60 [0xffffffffffffffc4])) [0 sad+0 S4 A32])
        (reg:SI 132)) /home/kai/git_repos/obme/obme.cpp:86 -1
     (nil))
;;  succ:       11 (FALLTHRU)

;; basic block 11, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
;;              10 (FALLTHRU)
(code_label 102 101 103 11 20 "" [1 uses])
(note 103 102 104 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 106 11 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -44 [0xffffffffffffffd4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -44 [0xffffffffffffffd4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:79 -1
     (nil))
(jump_insn 106 104 107 11 (set (pc)
        (label_ref 105)) /home/kai/git_repos/obme/obme.cpp:79 -1
     (nil)
 -> 105)
;;  succ:       8 (DFS_BACK)

(barrier 107 106 108)
;; basic block 12, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
(code_label 108 107 109 12 19 "" [1 uses])
(note 109 108 110 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -56 [0xffffffffffffffc8])) [0 cnt+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -56 [0xffffffffffffffc8])) [0 cnt+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:89 -1
     (nil))
(insn 111 110 112 12 (set (reg:SI 133)
        (mem/c:SI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 overlap+0 S4 A64])) /home/kai/git_repos/obme/obme.cpp:77 -1
     (nil))
(insn 112 111 114 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -48 [0xffffffffffffffd0])) [0 y+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -48 [0xffffffffffffffd0])) [0 y+0 S4 A32])
                    (reg:SI 133)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:77 -1
     (nil))
(jump_insn 114 112 115 12 (set (pc)
        (label_ref 113)) /home/kai/git_repos/obme/obme.cpp:77 -1
     (nil)
 -> 113)
;;  succ:       6 (DFS_BACK)

(barrier 115 114 116)
;; basic block 13, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 12, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
(code_label 116 115 117 13 18 "" [1 uses])
(note 117 116 118 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 13 (set (reg:SI 134)
        (mem/c:SI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 overlap+0 S4 A64])) /home/kai/git_repos/obme/obme.cpp:76 -1
     (nil))
(insn 119 118 121 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -52 [0xffffffffffffffcc])) [0 x+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -52 [0xffffffffffffffcc])) [0 x+0 S4 A32])
                    (reg:SI 134)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:76 -1
     (nil))
(jump_insn 121 119 122 13 (set (pc)
        (label_ref 120)) /home/kai/git_repos/obme/obme.cpp:76 -1
     (nil)
 -> 120)
;;  succ:       4 (DFS_BACK)

(barrier 122 121 125)
;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
(code_label 125 122 131 15 16 "" [1 uses])
(note 131 125 126 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 126 131 127 15 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.35033+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) /home/kai/git_repos/obme/obme.cpp:92 -1
     (nil))
(jump_insn 127 126 132 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 130)
            (pc))) /home/kai/git_repos/obme/obme.cpp:92 -1
     (nil)
 -> 130)
;;  succ:       17
;;              16 (FALLTHRU)

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
(note 132 127 128 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(call_insn 128 132 129 16 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f86e1400af8 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:92 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      

(barrier 129 128 130)
;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       15
(code_label 130 129 133 17 24 "" [1 uses])
(note 133 130 0 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void __static_initialization_and_destruction_0(int, int) (_Z41__static_initialization_and_destruction_0ii, funcdef_no=1567, decl_uid=34841, cgraph_uid=583, symbol_order=609)

void __static_initialization_and_destruction_0(int, int) (int __initialize_p, int __priority)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (__initialize_p_2(D) == 1)
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3
;;                5

;;   basic block 3, loop depth 0
;;    pred:       2
  if (__priority_4(D) == 65535)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  std::ios_base::Init::Init (&__ioinit);
  __cxa_atexit (__comp_dtor , &__ioinit, &__dso_handle);
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       2
;;                4
;;                3
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (__initialize_p_2(D) - 2 )
Partition 4 (__priority_4(D) - 4 )


Partition map 

Partition 0 (__initialize_p_2(D) - 2 )
Partition 1 (__priority_4(D) - 4 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (__initialize_p_2(D) - 2 )
Partition 1 (__priority_4(D) - 4 )

After Coalescing:

Partition map 

Partition 0 (__initialize_p_2(D) - 2 )
Partition 1 (__priority_4(D) - 4 )

void __static_initialization_and_destruction_0(int, int) (int __initialize_p, int __priority)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (__initialize_p_2(D) == 1)
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3
;;                5

;;   basic block 3, loop depth 0
;;    pred:       2
  if (__priority_4(D) == 65535)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  std::ios_base::Init::Init (&__ioinit);
  __cxa_atexit (__comp_dtor , &__ioinit, &__dso_handle);
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       2
;;                4
;;                3
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; if (__initialize_p_2(D) == 1)

(insn 7 6 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 __initialize_p+0 S4 A32])
            (const_int 1 [0x1]))) /home/kai/git_repos/obme/obme.cpp:92 -1
     (nil))

(jump_insn 8 7 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) /home/kai/git_repos/obme/obme.cpp:92 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; if (__priority_4(D) == 65535)

(insn 10 9 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 __priority+0 S4 A32])
            (const_int 65535 [0xffff]))) /home/kai/git_repos/obme/obme.cpp:92 -1
     (nil))

(jump_insn 11 10 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) /home/kai/git_repos/obme/obme.cpp:92 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; std::ios_base::Init::Init (&__ioinit);

(insn 13 12 14 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f86e161e480 __ioinit>)) /usr/include/c++/5/iostream:74 -1
     (nil))

(call_insn 14 13 0 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x7f86e1948e58 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/iostream:74 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; __cxa_atexit (__comp_dtor , &__ioinit, &__dso_handle);

(insn 15 14 16 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7f86e13c4cf0 __dso_handle>)) /usr/include/c++/5/iostream:74 -1
     (nil))

(insn 16 15 17 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f86e161e480 __ioinit>)) /usr/include/c++/5/iostream:74 -1
     (nil))

(insn 17 16 18 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7f86e195c0d8 __comp_dtor >)) /usr/include/c++/5/iostream:74 -1
     (nil))

(call_insn 18 17 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7f86e13ce000 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/iostream:74 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; Generating RTL for gimple basic block 5

;; 

(code_label 19 18 20 27 "" [0 uses])

(note 20 19 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->6 redirected to 7
Edge 4->6 redirected to 7
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 __initialize_p+0 S4 A32])
        (reg:SI 5 di [ __initialize_p ])) /home/kai/git_repos/obme/obme.cpp:92 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 __priority+0 S4 A32])
        (reg:SI 4 si [ __priority ])) /home/kai/git_repos/obme/obme.cpp:92 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 __initialize_p+0 S4 A32])
            (const_int 1 [0x1]))) /home/kai/git_repos/obme/obme.cpp:92 -1
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 21)
            (pc))) /home/kai/git_repos/obme/obme.cpp:92 612 {*jcc_1}
     (nil)
 -> 21)
;;  succ:       4 (FALLTHRU)
;;              7

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
(note 9 8 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 __priority+0 S4 A32])
            (const_int 65535 [0xffff]))) /home/kai/git_repos/obme/obme.cpp:92 -1
     (nil))
(jump_insn 11 10 12 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 21)
            (pc))) /home/kai/git_repos/obme/obme.cpp:92 612 {*jcc_1}
     (nil)
 -> 21)
;;  succ:       5 (FALLTHRU)
;;              7

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 12 11 13 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 5 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f86e161e480 __ioinit>)) /usr/include/c++/5/iostream:74 -1
     (nil))
(call_insn 14 13 15 5 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x7f86e1948e58 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/iostream:74 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 5 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7f86e13c4cf0 __dso_handle>)) /usr/include/c++/5/iostream:74 -1
     (nil))
(insn 16 15 17 5 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f86e161e480 __ioinit>)) /usr/include/c++/5/iostream:74 -1
     (nil))
(insn 17 16 18 5 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7f86e195c0d8 __comp_dtor >)) /usr/include/c++/5/iostream:74 -1
     (nil))
(call_insn 18 17 21 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7f86e13ce000 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/iostream:74 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       7 (FALLTHRU)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
;;              2
;;              4
(code_label 21 18 22 7 26 "" [2 uses])
(note 22 21 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function (static initializers for /home/kai/git_repos/obme/obme.cpp) (_GLOBAL__sub_I__Z7calcSADPcS_ii, funcdef_no=1568, decl_uid=34847, cgraph_uid=584, symbol_order=731)

(static initializers for /home/kai/git_repos/obme/obme.cpp) ()
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  __static_initialization_and_destruction_0 (1, 65535);
  return;
;;    succ:       EXIT

}



Partition map 


After Coalescing:

Partition map 


(static initializers for /home/kai/git_repos/obme/obme.cpp) ()
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  __static_initialization_and_destruction_0 (1, 65535);
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; __static_initialization_and_destruction_0 (1, 65535);

(insn 5 4 6 (set (reg:SI 4 si)
        (const_int 65535 [0xffff])) /home/kai/git_repos/obme/obme.cpp:92 -1
     (nil))

(insn 6 5 7 (set (reg:SI 5 di)
        (const_int 1 [0x1])) /home/kai/git_repos/obme/obme.cpp:92 -1
     (nil))

(call_insn 7 6 0 (call (mem:QI (symbol_ref:DI ("_Z41__static_initialization_and_destruction_0ii") [flags 0x3]  <function_decl 0x7f86e13c9d80 __static_initialization_and_destruction_0>) [0 __static_initialization_and_destruction_0 S1 A8])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:92 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 4 si)
        (const_int 65535 [0xffff])) /home/kai/git_repos/obme/obme.cpp:92 -1
     (nil))
(insn 6 5 7 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) /home/kai/git_repos/obme/obme.cpp:92 -1
     (nil))
(call_insn 7 6 0 2 (call (mem:QI (symbol_ref:DI ("_Z41__static_initialization_and_destruction_0ii") [flags 0x3]  <function_decl 0x7f86e13c9d80 __static_initialization_and_destruction_0>) [0 __static_initialization_and_destruction_0 S1 A8])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:92 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)

