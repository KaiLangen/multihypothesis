
;; Function void bilinear(imgpel*, imgpel*, int, int, int, int) (_Z8bilinearPcS_iiii, funcdef_no=0, decl_uid=2346, cgraph_uid=0, symbol_order=0)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 28 n_edges 37 count 28 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r227: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r227,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r226: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r226,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r225: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r225,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r224,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r223,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r219,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r218,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r217,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r216,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r202,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a115 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a120 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a124 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a129 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a132 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a131 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a119 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a1(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a2(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a3(r227,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a4(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:53 NO_REX_SSE_REGS:53 SSE_REGS:53 MMX_REGS:73 INT_SSE_REGS:57 ALL_REGS:1140 MEM:19
  a5(r226,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a6(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a7(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a8(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a9(r223,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a10(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a11(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a12(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a13(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a14(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a15(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a16(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a17(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a18(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a19(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a20(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a21(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a22(r218,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a23(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a24(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a25(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a26(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a27(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a28(r141,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:31 NO_REX_SSE_REGS:31 SSE_REGS:31 MMX_REGS:41 INT_SSE_REGS:33 ALL_REGS:626 MEM:11
  a29(r215,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a30(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a31(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a32(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a33(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a34(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a35(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a36(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a37(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a38(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a39(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a40(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a41(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a42(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a43(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a44(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a45(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a46(r131,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:31 NO_REX_SSE_REGS:31 SSE_REGS:31 MMX_REGS:41 INT_SSE_REGS:33 ALL_REGS:626 MEM:11
  a47(r207,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a48(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a49(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a50(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a51(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a52(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a53(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a54(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a55(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a56(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a57(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a58(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a59(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a60(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a61(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a62(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a63(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a64(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a65(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a66(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a67(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a68(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a69(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a70(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a71(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a72(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a73(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a74(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a75(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a76(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a77(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a78(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a79(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a80(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a81(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a82(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a83(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a84(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a85(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a86(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a87(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a88(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a89(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a90(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a91(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a92(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a93(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a94(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a95(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a96(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a97(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a98(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a99(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a100(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a101(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a102(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a103(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a104(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a105(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a106(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a107(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a108(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a109(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a110(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a111(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a112(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a113(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a114(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a115(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a116(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a117(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a118(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a119(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a120(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a121(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a122(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a123(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a124(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a125(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a126(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a127(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a128(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a129(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a130(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a131(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a132(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a133(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a134(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 261(l0): point = 1
   Insn 15(l0): point = 4
   Insn 14(l0): point = 6
   Insn 13(l0): point = 8
   Insn 257(l0): point = 11
   Insn 241(l0): point = 13
   Insn 21(l0): point = 16
   Insn 20(l0): point = 18
   Insn 19(l0): point = 20
   Insn 17(l0): point = 23
   Insn 255(l0): point = 26
   Insn 235(l0): point = 28
   Insn 234(l0): point = 30
   Insn 233(l0): point = 32
   Insn 232(l0): point = 34
   Insn 231(l0): point = 36
   Insn 230(l0): point = 38
   Insn 229(l0): point = 40
   Insn 228(l0): point = 42
   Insn 227(l0): point = 44
   Insn 226(l0): point = 46
   Insn 225(l0): point = 48
   Insn 224(l0): point = 50
   Insn 223(l0): point = 52
   Insn 222(l0): point = 54
   Insn 221(l0): point = 56
   Insn 220(l0): point = 58
   Insn 219(l0): point = 60
   Insn 218(l0): point = 62
   Insn 217(l0): point = 64
   Insn 216(l0): point = 66
   Insn 215(l0): point = 68
   Insn 214(l0): point = 70
   Insn 213(l0): point = 72
   Insn 212(l0): point = 74
   Insn 211(l0): point = 76
   Insn 210(l0): point = 78
   Insn 209(l0): point = 80
   Insn 208(l0): point = 82
   Insn 207(l0): point = 84
   Insn 206(l0): point = 86
   Insn 205(l0): point = 88
   Insn 204(l0): point = 90
   Insn 203(l0): point = 92
   Insn 202(l0): point = 94
   Insn 201(l0): point = 96
   Insn 200(l0): point = 98
   Insn 199(l0): point = 100
   Insn 198(l0): point = 102
   Insn 197(l0): point = 104
   Insn 196(l0): point = 106
   Insn 195(l0): point = 108
   Insn 194(l0): point = 110
   Insn 193(l0): point = 112
   Insn 192(l0): point = 114
   Insn 191(l0): point = 116
   Insn 190(l0): point = 118
   Insn 189(l0): point = 120
   Insn 188(l0): point = 122
   Insn 187(l0): point = 124
   Insn 186(l0): point = 126
   Insn 185(l0): point = 128
   Insn 184(l0): point = 130
   Insn 183(l0): point = 132
   Insn 182(l0): point = 134
   Insn 181(l0): point = 136
   Insn 180(l0): point = 138
   Insn 179(l0): point = 140
   Insn 178(l0): point = 142
   Insn 177(l0): point = 144
   Insn 176(l0): point = 146
   Insn 175(l0): point = 148
   Insn 174(l0): point = 150
   Insn 173(l0): point = 152
   Insn 172(l0): point = 154
   Insn 171(l0): point = 156
   Insn 170(l0): point = 158
   Insn 169(l0): point = 160
   Insn 168(l0): point = 162
   Insn 167(l0): point = 164
   Insn 166(l0): point = 166
   Insn 165(l0): point = 168
   Insn 164(l0): point = 170
   Insn 163(l0): point = 172
   Insn 162(l0): point = 174
   Insn 161(l0): point = 176
   Insn 160(l0): point = 178
   Insn 159(l0): point = 180
   Insn 156(l0): point = 183
   Insn 155(l0): point = 185
   Insn 253(l0): point = 188
   Insn 150(l0): point = 190
   Insn 149(l0): point = 192
   Insn 148(l0): point = 194
   Insn 147(l0): point = 196
   Insn 146(l0): point = 198
   Insn 145(l0): point = 200
   Insn 144(l0): point = 202
   Insn 143(l0): point = 204
   Insn 142(l0): point = 206
   Insn 141(l0): point = 208
   Insn 140(l0): point = 210
   Insn 139(l0): point = 212
   Insn 137(l0): point = 215
   Insn 136(l0): point = 217
   Insn 135(l0): point = 219
   Insn 134(l0): point = 221
   Insn 132(l0): point = 224
   Insn 131(l0): point = 226
   Insn 130(l0): point = 228
   Insn 129(l0): point = 230
   Insn 126(l0): point = 233
   Insn 125(l0): point = 235
   Insn 251(l0): point = 238
   Insn 120(l0): point = 240
   Insn 119(l0): point = 242
   Insn 118(l0): point = 244
   Insn 117(l0): point = 246
   Insn 116(l0): point = 248
   Insn 115(l0): point = 250
   Insn 114(l0): point = 252
   Insn 113(l0): point = 254
   Insn 112(l0): point = 256
   Insn 111(l0): point = 258
   Insn 110(l0): point = 260
   Insn 108(l0): point = 263
   Insn 107(l0): point = 265
   Insn 106(l0): point = 267
   Insn 105(l0): point = 269
   Insn 102(l0): point = 272
   Insn 101(l0): point = 274
   Insn 249(l0): point = 277
   Insn 96(l0): point = 279
   Insn 95(l0): point = 281
   Insn 94(l0): point = 283
   Insn 93(l0): point = 285
   Insn 92(l0): point = 287
   Insn 91(l0): point = 289
   Insn 90(l0): point = 291
   Insn 89(l0): point = 293
   Insn 88(l0): point = 295
   Insn 87(l0): point = 297
   Insn 86(l0): point = 299
   Insn 84(l0): point = 302
   Insn 83(l0): point = 304
   Insn 82(l0): point = 306
   Insn 81(l0): point = 308
   Insn 80(l0): point = 310
   Insn 79(l0): point = 312
   Insn 78(l0): point = 314
   Insn 77(l0): point = 316
   Insn 76(l0): point = 318
   Insn 75(l0): point = 320
   Insn 74(l0): point = 322
   Insn 73(l0): point = 324
   Insn 72(l0): point = 326
   Insn 71(l0): point = 328
   Insn 66(l0): point = 331
   Insn 65(l0): point = 333
   Insn 55(l0): point = 336
   Insn 54(l0): point = 338
   Insn 53(l0): point = 340
   Insn 52(l0): point = 342
   Insn 47(l0): point = 345
   Insn 46(l0): point = 347
   Insn 36(l0): point = 350
   Insn 35(l0): point = 352
   Insn 34(l0): point = 354
   Insn 33(l0): point = 356
   Insn 32(l0): point = 358
   Insn 31(l0): point = 360
   Insn 30(l0): point = 362
   Insn 29(l0): point = 364
   Insn 28(l0): point = 366
   Insn 27(l0): point = 368
   Insn 26(l0): point = 370
   Insn 43(l0): point = 373
   Insn 42(l0): point = 375
   Insn 41(l0): point = 377
   Insn 49(l0): point = 380
   Insn 62(l0): point = 383
   Insn 61(l0): point = 385
   Insn 60(l0): point = 387
   Insn 68(l0): point = 390
   Insn 11(l0): point = 393
   Insn 7(l0): point = 395
   Insn 6(l0): point = 397
   Insn 5(l0): point = 399
   Insn 4(l0): point = 401
   Insn 3(l0): point = 403
   Insn 2(l0): point = 405
 a0(r151): [31..60]
 a1(r156): [31..32]
 a2(r155): [33..34]
 a3(r227): [35..36]
 a4(r225): [37..44]
 a5(r226): [39..42]
 a6(r154): [45..46]
 a7(r224): [47..48]
 a8(r153): [47..50]
 a9(r223): [51..52]
 a10(r152): [51..54]
 a11(r222): [55..56]
 a12(r221): [55..58]
 a13(r220): [61..62]
 a14(r150): [61..64]
 a15(r149): [65..66]
 a16(r148): [67..68]
 a17(r145): [67..76]
 a18(r147): [69..70]
 a19(r146): [71..72]
 a20(r219): [73..74]
 a21(r144): [77..78]
 a22(r218): [79..80]
 a23(r140): [83..100]
 a24(r143): [83..84]
 a25(r142): [85..86]
 a26(r217): [87..88]
 a27(r216): [89..90]
 a28(r141): [91..94]
 a29(r215): [91..92]
 a30(r214): [95..96]
 a31(r213): [95..98]
 a32(r212): [101..102]
 a33(r139): [101..104]
 a34(r138): [105..106]
 a35(r137): [107..108]
 a36(r134): [107..116]
 a37(r136): [109..110]
 a38(r135): [111..112]
 a39(r211): [113..114]
 a40(r210): [117..118]
 a41(r130): [121..138]
 a42(r133): [121..122]
 a43(r132): [123..124]
 a44(r209): [125..126]
 a45(r208): [127..128]
 a46(r131): [129..132]
 a47(r207): [129..130]
 a48(r206): [133..134]
 a49(r205): [133..136]
 a50(r204): [139..140]
 a51(r129): [139..142]
 a52(r128): [143..144]
 a53(r127): [145..146]
 a54(r125): [145..152]
 a55(r126): [147..148]
 a56(r203): [149..150]
 a57(r124): [153..154]
 a58(r202): [155..156]
 a59(r122): [159..164]
 a60(r123): [159..160]
 a61(r201): [161..162]
 a62(r200): [165..166]
 a63(r121): [165..168]
 a64(r120): [169..170]
 a65(r119): [171..172]
 a66(r117): [171..178]
 a67(r118): [173..174]
 a68(r199): [175..176]
 a69(r198): [179..180]
 a70(r197): [184..185]
 a71(r196): [191..192]
 a72(r116): [193..194]
 a73(r115): [195..196]
 a74(r195): [197..198]
 a75(r114): [197..200]
 a76(r113): [201..202]
 a77(r112): [203..204]
 a78(r110): [203..210]
 a79(r111): [205..206]
 a80(r194): [207..208]
 a81(r193): [211..212]
 a82(r109): [218..219]
 a83(r192): [220..221]
 a84(r108): [227..228]
 a85(r191): [229..230]
 a86(r190): [234..235]
 a87(r189): [241..242]
 a88(r107): [243..244]
 a89(r106): [245..246]
 a90(r188): [247..248]
 a91(r105): [247..250]
 a92(r104): [251..252]
 a93(r187): [253..254]
 a94(r103): [253..256]
 a95(r102): [257..258]
 a96(r186): [259..260]
 a97(r101): [266..267]
 a98(r185): [268..269]
 a99(r184): [273..274]
 a100(r183): [280..281]
 a101(r100): [282..283]
 a102(r99): [284..285]
 a103(r182): [286..287]
 a104(r98): [286..289]
 a105(r97): [290..291]
 a106(r96): [292..293]
 a107(r95): [292..297]
 a108(r181): [294..295]
 a109(r180): [298..299]
 a110(r94): [305..306]
 a111(r179): [307..308]
 a112(r178): [311..312]
 a113(r93): [313..314]
 a114(r92): [315..316]
 a115(r177): [317..318]
 a116(r91): [317..320]
 a117(r90): [321..322]
 a118(r176): [323..324]
 a119(r89): [323..326]
 a120(r175): [327..328]
 a121(r173): [384..385]
 a122(r174): [386..387]
 a123(r88): [339..340]
 a124(r170): [341..342]
 a125(r168): [374..375]
 a126(r169): [376..377]
 a127(r87): [353..354]
 a128(r165): [355..356]
 a129(r164): [359..360]
 a130(r163): [363..364]
 a131(r161): [367..368]
 a132(r162): [369..370]
 a133(r158): [19..20]
 a134(r157): [7..8]
Compressing live ranges: from 408 to 214 - 52%
Ranges after the compression:
 a0(r151): [4..19]
 a1(r156): [4..5]
 a2(r155): [6..7]
 a3(r227): [8..9]
 a4(r225): [10..11]
 a5(r226): [10..11]
 a6(r154): [12..13]
 a7(r224): [14..15]
 a8(r153): [14..15]
 a9(r223): [16..17]
 a10(r152): [16..17]
 a11(r222): [18..19]
 a12(r221): [18..19]
 a13(r220): [20..21]
 a14(r150): [20..21]
 a15(r149): [22..23]
 a16(r148): [24..25]
 a17(r145): [24..31]
 a18(r147): [26..27]
 a19(r146): [28..29]
 a20(r219): [30..31]
 a21(r144): [32..33]
 a22(r218): [34..35]
 a23(r140): [36..47]
 a24(r143): [36..37]
 a25(r142): [38..39]
 a26(r217): [40..41]
 a27(r216): [42..43]
 a28(r141): [44..45]
 a29(r215): [44..45]
 a30(r214): [46..47]
 a31(r213): [46..47]
 a32(r212): [48..49]
 a33(r139): [48..49]
 a34(r138): [50..51]
 a35(r137): [52..53]
 a36(r134): [52..59]
 a37(r136): [54..55]
 a38(r135): [56..57]
 a39(r211): [58..59]
 a40(r210): [60..61]
 a41(r130): [62..73]
 a42(r133): [62..63]
 a43(r132): [64..65]
 a44(r209): [66..67]
 a45(r208): [68..69]
 a46(r131): [70..71]
 a47(r207): [70..71]
 a48(r206): [72..73]
 a49(r205): [72..73]
 a50(r204): [74..75]
 a51(r129): [74..75]
 a52(r128): [76..77]
 a53(r127): [78..79]
 a54(r125): [78..83]
 a55(r126): [80..81]
 a56(r203): [82..83]
 a57(r124): [84..85]
 a58(r202): [86..87]
 a59(r122): [88..91]
 a60(r123): [88..89]
 a61(r201): [90..91]
 a62(r200): [92..93]
 a63(r121): [92..93]
 a64(r120): [94..95]
 a65(r119): [96..97]
 a66(r117): [96..101]
 a67(r118): [98..99]
 a68(r199): [100..101]
 a69(r198): [102..103]
 a70(r197): [104..105]
 a71(r196): [106..107]
 a72(r116): [108..109]
 a73(r115): [110..111]
 a74(r195): [112..113]
 a75(r114): [112..113]
 a76(r113): [114..115]
 a77(r112): [116..117]
 a78(r110): [116..121]
 a79(r111): [118..119]
 a80(r194): [120..121]
 a81(r193): [122..123]
 a82(r109): [124..125]
 a83(r192): [126..127]
 a84(r108): [128..129]
 a85(r191): [130..131]
 a86(r190): [132..133]
 a87(r189): [134..135]
 a88(r107): [136..137]
 a89(r106): [138..139]
 a90(r188): [140..141]
 a91(r105): [140..141]
 a92(r104): [142..143]
 a93(r187): [144..145]
 a94(r103): [144..145]
 a95(r102): [146..147]
 a96(r186): [148..149]
 a97(r101): [150..151]
 a98(r185): [152..153]
 a99(r184): [154..155]
 a100(r183): [156..157]
 a101(r100): [158..159]
 a102(r99): [160..161]
 a103(r182): [162..163]
 a104(r98): [162..163]
 a105(r97): [164..165]
 a106(r96): [166..167]
 a107(r95): [166..169]
 a108(r181): [168..169]
 a109(r180): [170..171]
 a110(r94): [172..173]
 a111(r179): [174..175]
 a112(r178): [176..177]
 a113(r93): [178..179]
 a114(r92): [180..181]
 a115(r177): [182..183]
 a116(r91): [182..183]
 a117(r90): [184..185]
 a118(r176): [186..187]
 a119(r89): [186..187]
 a120(r175): [188..189]
 a121(r173): [210..211]
 a122(r174): [212..213]
 a123(r88): [190..191]
 a124(r170): [192..193]
 a125(r168): [206..207]
 a126(r169): [208..209]
 a127(r87): [194..195]
 a128(r165): [196..197]
 a129(r164): [198..199]
 a130(r163): [200..201]
 a131(r161): [202..203]
 a132(r162): [204..205]
 a133(r158): [2..3]
 a134(r157): [0..1]
  regions=1, blocks=28, points=214
    allocnos=135 (big 0), copies=0, conflicts=0, ranges=135
Disposition:
  127:r87  l0     0  123:r88  l0     0  119:r89  l0     1  117:r90  l0     0
  116:r91  l0     1  114:r92  l0     0  113:r93  l0     0  110:r94  l0     0
  107:r95  l0     1  106:r96  l0     0  105:r97  l0     0  104:r98  l0     1
  102:r99  l0     0  101:r100 l0     0   97:r101 l0     0   95:r102 l0     0
   94:r103 l0     1   92:r104 l0     0   91:r105 l0     1   89:r106 l0     0
   88:r107 l0     0   84:r108 l0     0   82:r109 l0     0   78:r110 l0     1
   79:r111 l0     0   77:r112 l0     0   76:r113 l0     0   75:r114 l0     1
   73:r115 l0     0   72:r116 l0     0   66:r117 l0     1   67:r118 l0     0
   65:r119 l0     0   64:r120 l0     0   63:r121 l0     1   59:r122 l0     0
   60:r123 l0     1   57:r124 l0     0   54:r125 l0     1   55:r126 l0     0
   53:r127 l0     0   52:r128 l0     0   51:r129 l0     1   41:r130 l0     1
   46:r131 l0     0   43:r132 l0     0   42:r133 l0     0   36:r134 l0     1
   38:r135 l0     0   37:r136 l0     0   35:r137 l0     0   34:r138 l0     0
   33:r139 l0     1   23:r140 l0     1   28:r141 l0     0   25:r142 l0     0
   24:r143 l0     0   21:r144 l0     0   17:r145 l0     1   19:r146 l0     0
   18:r147 l0     0   16:r148 l0     0   15:r149 l0     0   14:r150 l0     1
    0:r151 l0     1   10:r152 l0     2    8:r153 l0     2    6:r154 l0     0
    2:r155 l0     0    1:r156 l0     0  134:r157 l0     0  133:r158 l0     0
  131:r161 l0     0  132:r162 l0     0  130:r163 l0     0  129:r164 l0     0
  128:r165 l0     0  125:r168 l0     0  126:r169 l0     0  124:r170 l0     0
  121:r173 l0     0  122:r174 l0     0  120:r175 l0     0  118:r176 l0     0
  115:r177 l0     0  112:r178 l0     0  111:r179 l0     0  109:r180 l0     0
  108:r181 l0     0  103:r182 l0     0  100:r183 l0     0   99:r184 l0     0
   98:r185 l0     0   96:r186 l0     0   93:r187 l0     0   90:r188 l0     0
   87:r189 l0     0   86:r190 l0     0   85:r191 l0     0   83:r192 l0     0
   81:r193 l0     0   80:r194 l0     0   74:r195 l0     0   71:r196 l0     0
   70:r197 l0     0   69:r198 l0     0   68:r199 l0     0   62:r200 l0     0
   61:r201 l0     1   58:r202 l0     0   56:r203 l0     0   50:r204 l0     0
   49:r205 l0     2   48:r206 l0     0   47:r207 l0     2   45:r208 l0     0
   44:r209 l0     0   40:r210 l0     0   39:r211 l0     0   32:r212 l0     0
   31:r213 l0     2   30:r214 l0     0   29:r215 l0     2   27:r216 l0     0
   26:r217 l0     0   22:r218 l0     0   20:r219 l0     0   13:r220 l0     0
   12:r221 l0     2   11:r222 l0     0    9:r223 l0     0    7:r224 l0     0
    4:r225 l0     0    5:r226 l0     2    3:r227 l0     0
+++Costs: overall 8, reg 8, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void bilinear(imgpel*, imgpel*, int, int, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 6[bp] 17[flags] 37[r8] 38[r9]
;;  ref usage 	r0={1d} r1={1d,1u} r2={1d,1u} r4={1d,1u} r5={1d,1u} r6={1d,27u} r7={1d,27u} r16={1d,26u} r17={75d,11u} r20={1d,120u,39e} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d,1u} r38={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u,1e} r90={1d,1u} r91={1d,1u,1e} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u,1e} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u,1e} r104={1d,1u} r105={1d,1u,1e} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u,1e} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u,1e} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u,1e} r130={1d,1u} r131={1d,2u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u,1e} r140={1d,1u} r141={1d,2u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u,1e} r151={1d,1u} r152={1d,1u,1e} r153={1d,1u,1e} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={2d,4u} r226={1d,1u} r227={1d,1u} 
;;    total ref usage 638{230d,357u,51e} in 191{191 regular + 0 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 source+0 S8 A64])
        (reg:DI 5 di [ source ])) /home/kai/git_repos/obme/resampling.cpp:5 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ source ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 buffer+0 S8 A64])
        (reg:DI 4 si [ buffer ])) /home/kai/git_repos/obme/resampling.cpp:5 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ buffer ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [0 buffer_w+0 S4 A32])
        (reg:SI 1 dx [ buffer_w ])) /home/kai/git_repos/obme/resampling.cpp:5 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ buffer_w ])
        (nil)))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 buffer_h+0 S4 A32])
        (reg:SI 2 cx [ buffer_h ])) /home/kai/git_repos/obme/resampling.cpp:5 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ buffer_h ])
        (nil)))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 picwidth+0 S4 A32])
        (reg:SI 37 r8 [ picwidth ])) /home/kai/git_repos/obme/resampling.cpp:5 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ picwidth ])
        (nil)))
(insn 7 6 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 picheight+0 S4 A32])
        (reg:SI 38 r9 [ picheight ])) /home/kai/git_repos/obme/resampling.cpp:5 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [ picheight ])
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 242 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 j+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/resampling.cpp:6 90 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              25 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 157
(code_label 242 11 12 3 15 "" [1 uses])
(note 12 242 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg:SI 157)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 j+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:6 90 {*movsi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 157)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -72 [0xffffffffffffffb8])) [0 buffer_h+0 S4 A32]))) /home/kai/git_repos/obme/resampling.cpp:6 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 157)
        (nil)))
(jump_insn 15 14 16 3 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 260)
            (pc))) /home/kai/git_repos/obme/resampling.cpp:6 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 260)
;;  succ:       27
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 236 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 i+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/resampling.cpp:7 90 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              24 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 158
(code_label 236 17 18 5 14 "" [1 uses])
(note 18 236 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:SI 158)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:7 90 {*movsi_internal}
     (nil))
(insn 20 19 21 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 158)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -68 [0xffffffffffffffbc])) [0 buffer_w+0 S4 A32]))) /home/kai/git_repos/obme/resampling.cpp:7 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 158)
        (nil)))
(jump_insn 21 20 22 5 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 239)
            (pc))) /home/kai/git_repos/obme/resampling.cpp:7 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 239)
;;  succ:       25
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 161 162 163 164 165
(note 22 21 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 22 27 6 (set (reg:SI 162)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [0 buffer_w+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:9 90 {*movsi_internal}
     (nil))
(insn 27 26 28 6 (parallel [
            (set (reg:SI 161)
                (ashift:SI (reg:SI 162)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:9 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 162)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -68 [0xffffffffffffffbc])) [0 buffer_w+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 28 27 29 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 buffer_r+0 S4 A32])
        (reg:SI 161)) /home/kai/git_repos/obme/resampling.cpp:9 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 161)
        (nil)))
(insn 29 28 30 6 (set (reg:SI 163)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:12 90 {*movsi_internal}
     (nil))
(insn 30 29 31 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S4 A32])
        (reg:SI 163)) /home/kai/git_repos/obme/resampling.cpp:12 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 163)
        (nil)))
(insn 31 30 32 6 (set (reg:SI 164)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 j+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:13 90 {*movsi_internal}
     (nil))
(insn 32 31 33 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])
        (reg:SI 164)) /home/kai/git_repos/obme/resampling.cpp:13 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 164)
        (nil)))
(insn 33 32 34 6 (set (reg:SI 165)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 picwidth+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:14 90 {*movsi_internal}
     (nil))
(insn 34 33 35 6 (parallel [
            (set (reg:SI 87 [ D.2483 ])
                (plus:SI (reg:SI 165)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:14 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 165)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -76 [0xffffffffffffffb4])) [0 picwidth+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 35 34 36 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 87 [ D.2483 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 x+0 S4 A32]))) /home/kai/git_repos/obme/resampling.cpp:14 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 87 [ D.2483 ])
        (nil)))
(jump_insn 36 35 37 6 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) /home/kai/git_repos/obme/resampling.cpp:14 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 44)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 168 169
(note 37 36 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 37 42 7 (set (reg:SI 169)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 picwidth+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:14 90 {*movsi_internal}
     (nil))
(insn 42 41 43 7 (parallel [
            (set (reg:SI 168)
                (plus:SI (reg:SI 169)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:14 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 169)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -76 [0xffffffffffffffb4])) [0 picwidth+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 43 42 44 7 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S4 A32])
        (reg:SI 168)) /home/kai/git_repos/obme/resampling.cpp:14 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 168)
        (nil)))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;;              7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 44 43 45 8 4 "" [1 uses])
(note 45 44 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 8 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 x+0 S4 A32])
            (const_int 0 [0]))) /home/kai/git_repos/obme/resampling.cpp:15 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 47 46 48 8 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) /home/kai/git_repos/obme/resampling.cpp:15 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 50)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 48 47 49 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 9 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/resampling.cpp:15 90 {*movsi_internal}
     (nil))
;;  succ:       10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;;              9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 170
(code_label 50 49 51 10 5 "" [1 uses])
(note 51 50 52 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 10 (set (reg:SI 170)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 picheight+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:16 90 {*movsi_internal}
     (nil))
(insn 53 52 54 10 (parallel [
            (set (reg:SI 88 [ D.2483 ])
                (plus:SI (reg:SI 170)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:16 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 170)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -80 [0xffffffffffffffb0])) [0 picheight+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 54 53 55 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88 [ D.2483 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32]))) /home/kai/git_repos/obme/resampling.cpp:16 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 88 [ D.2483 ])
        (nil)))
(jump_insn 55 54 56 10 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) /home/kai/git_repos/obme/resampling.cpp:16 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 63)
;;  succ:       11 (FALLTHRU)
;;              12
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 173 174
(note 56 55 60 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 60 56 61 11 (set (reg:SI 174)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 picheight+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:16 90 {*movsi_internal}
     (nil))
(insn 61 60 62 11 (parallel [
            (set (reg:SI 173)
                (plus:SI (reg:SI 174)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:16 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 174)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -80 [0xffffffffffffffb0])) [0 picheight+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 62 61 63 11 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])
        (reg:SI 173)) /home/kai/git_repos/obme/resampling.cpp:16 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 173)
        (nil)))
;;  succ:       12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;;              11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 63 62 64 12 6 "" [1 uses])
(note 64 63 65 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 12 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])
            (const_int 0 [0]))) /home/kai/git_repos/obme/resampling.cpp:17 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 66 65 67 12 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) /home/kai/git_repos/obme/resampling.cpp:17 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 69)
;;  succ:       13 (FALLTHRU)
;;              14
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 67 66 68 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 13 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/resampling.cpp:17 90 {*movsi_internal}
     (nil))
;;  succ:       14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12
;;              13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 89 90 91 92 93 94 175 176 177 178 179
(code_label 69 68 70 14 7 "" [1 uses])
(note 70 69 71 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 14 (set (reg:SI 175)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:18 90 {*movsi_internal}
     (nil))
(insn 72 71 73 14 (parallel [
            (set (reg:SI 89 [ D.2483 ])
                (mult:SI (reg:SI 175)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -76 [0xffffffffffffffb4])) [0 picwidth+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:18 305 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 175)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 73 72 74 14 (set (reg:SI 176)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:18 90 {*movsi_internal}
     (nil))
(insn 74 73 75 14 (parallel [
            (set (reg:SI 90 [ D.2483 ])
                (plus:SI (reg:SI 89 [ D.2483 ])
                    (reg:SI 176)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:18 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 176)
        (expr_list:REG_DEAD (reg:SI 89 [ D.2483 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 89 [ D.2483 ])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S4 A32]))
                    (nil))))))
(insn 75 74 76 14 (set (reg:DI 91 [ D.2484 ])
        (sign_extend:DI (reg:SI 90 [ D.2483 ]))) /home/kai/git_repos/obme/resampling.cpp:18 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 90 [ D.2483 ])
        (nil)))
(insn 76 75 77 14 (set (reg/f:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 source+0 S8 A64])) /home/kai/git_repos/obme/resampling.cpp:18 89 {*movdi_internal}
     (nil))
(insn 77 76 78 14 (parallel [
            (set (reg/f:DI 92 [ D.2485 ])
                (plus:DI (reg:DI 91 [ D.2484 ])
                    (reg/f:DI 177)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:18 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 177)
        (expr_list:REG_DEAD (reg:DI 91 [ D.2484 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -56 [0xffffffffffffffc8])) [0 source+0 S8 A64])
                        (reg:DI 91 [ D.2484 ]))
                    (nil))))))
(insn 78 77 79 14 (set (reg:QI 93 [ D.2486 ])
        (mem:QI (reg/f:DI 92 [ D.2485 ]) [0 *_32+0 S1 A8])) /home/kai/git_repos/obme/resampling.cpp:18 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.2485 ])
        (nil)))
(insn 79 78 80 14 (set (reg:SI 178)
        (sign_extend:SI (reg:QI 93 [ D.2486 ]))) /home/kai/git_repos/obme/resampling.cpp:18 148 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 93 [ D.2486 ])
        (nil)))
(insn 80 79 81 14 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 a+0 S4 A32])
        (reg:SI 178)) /home/kai/git_repos/obme/resampling.cpp:18 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 178)
        (nil)))
(insn 81 80 82 14 (set (reg:SI 179)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:20 90 {*movsi_internal}
     (nil))
(insn 82 81 83 14 (parallel [
            (set (reg:SI 94 [ D.2483 ])
                (plus:SI (reg:SI 179)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:20 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 179)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 x+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 83 82 84 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 94 [ D.2483 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -76 [0xffffffffffffffb4])) [0 picwidth+0 S4 A32]))) /home/kai/git_repos/obme/resampling.cpp:20 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 94 [ D.2483 ])
        (nil)))
(jump_insn 84 83 85 14 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) /home/kai/git_repos/obme/resampling.cpp:20 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 99)
;;  succ:       15 (FALLTHRU)
;;              16
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 95 96 97 98 99 100 180 181 182 183
(note 85 84 86 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 15 (set (reg:SI 180)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:20 90 {*movsi_internal}
     (nil))
(insn 87 86 88 15 (parallel [
            (set (reg:SI 95 [ D.2483 ])
                (plus:SI (reg:SI 180)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:20 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 180)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 x+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 88 87 89 15 (set (reg:SI 181)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:20 90 {*movsi_internal}
     (nil))
(insn 89 88 90 15 (parallel [
            (set (reg:SI 96 [ D.2483 ])
                (mult:SI (reg:SI 181)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -76 [0xffffffffffffffb4])) [0 picwidth+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:20 305 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 181)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 90 89 91 15 (parallel [
            (set (reg:SI 97 [ D.2483 ])
                (plus:SI (reg:SI 95 [ D.2483 ])
                    (reg:SI 96 [ D.2483 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:20 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 96 [ D.2483 ])
        (expr_list:REG_DEAD (reg:SI 95 [ D.2483 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 91 90 92 15 (set (reg:DI 98 [ D.2484 ])
        (sign_extend:DI (reg:SI 97 [ D.2483 ]))) /home/kai/git_repos/obme/resampling.cpp:20 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 97 [ D.2483 ])
        (nil)))
(insn 92 91 93 15 (set (reg/f:DI 182)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 source+0 S8 A64])) /home/kai/git_repos/obme/resampling.cpp:20 89 {*movdi_internal}
     (nil))
(insn 93 92 94 15 (parallel [
            (set (reg/f:DI 99 [ D.2485 ])
                (plus:DI (reg:DI 98 [ D.2484 ])
                    (reg/f:DI 182)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:20 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 182)
        (expr_list:REG_DEAD (reg:DI 98 [ D.2484 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -56 [0xffffffffffffffc8])) [0 source+0 S8 A64])
                        (reg:DI 98 [ D.2484 ]))
                    (nil))))))
(insn 94 93 95 15 (set (reg:QI 100 [ D.2486 ])
        (mem:QI (reg/f:DI 99 [ D.2485 ]) [0 *_40+0 S1 A8])) /home/kai/git_repos/obme/resampling.cpp:20 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99 [ D.2485 ])
        (nil)))
(insn 95 94 96 15 (set (reg:SI 183)
        (sign_extend:SI (reg:QI 100 [ D.2486 ]))) /home/kai/git_repos/obme/resampling.cpp:20 148 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 100 [ D.2486 ])
        (nil)))
(insn 96 95 249 15 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 b+0 S4 A32])
        (reg:SI 183)) /home/kai/git_repos/obme/resampling.cpp:20 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 183)
        (nil)))
(jump_insn 249 96 250 15 (set (pc)
        (label_ref 103)) 654 {jump}
     (nil)
 -> 103)
;;  succ:       17 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 250 249 99)
;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 184
(code_label 99 250 100 16 8 "" [1 uses])
(note 100 99 101 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 16 (set (reg:SI 184)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 a+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:21 90 {*movsi_internal}
     (nil))
(insn 102 101 103 16 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 b+0 S4 A32])
        (reg:SI 184)) /home/kai/git_repos/obme/resampling.cpp:21 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 184)
        (nil)))
;;  succ:       17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;;              15 [100.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 101 185
(code_label 103 102 104 17 9 "" [1 uses])
(note 104 103 105 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 17 (set (reg:SI 185)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:23 90 {*movsi_internal}
     (nil))
(insn 106 105 107 17 (parallel [
            (set (reg:SI 101 [ D.2483 ])
                (plus:SI (reg:SI 185)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:23 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 185)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 107 106 108 17 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 101 [ D.2483 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])) [0 picheight+0 S4 A32]))) /home/kai/git_repos/obme/resampling.cpp:23 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 101 [ D.2483 ])
        (nil)))
(jump_insn 108 107 109 17 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 123)
            (pc))) /home/kai/git_repos/obme/resampling.cpp:23 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 123)
;;  succ:       18 (FALLTHRU)
;;              19
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 102 103 104 105 106 107 186 187 188 189
(note 109 108 110 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 18 (set (reg:SI 186)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:23 90 {*movsi_internal}
     (nil))
(insn 111 110 112 18 (parallel [
            (set (reg:SI 102 [ D.2483 ])
                (plus:SI (reg:SI 186)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:23 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 186)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 112 111 113 18 (parallel [
            (set (reg:SI 103 [ D.2483 ])
                (mult:SI (reg:SI 102 [ D.2483 ])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -76 [0xffffffffffffffb4])) [0 picwidth+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:23 305 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 102 [ D.2483 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 113 112 114 18 (set (reg:SI 187)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:23 90 {*movsi_internal}
     (nil))
(insn 114 113 115 18 (parallel [
            (set (reg:SI 104 [ D.2483 ])
                (plus:SI (reg:SI 103 [ D.2483 ])
                    (reg:SI 187)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:23 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 187)
        (expr_list:REG_DEAD (reg:SI 103 [ D.2483 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 103 [ D.2483 ])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S4 A32]))
                    (nil))))))
(insn 115 114 116 18 (set (reg:DI 105 [ D.2484 ])
        (sign_extend:DI (reg:SI 104 [ D.2483 ]))) /home/kai/git_repos/obme/resampling.cpp:23 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 104 [ D.2483 ])
        (nil)))
(insn 116 115 117 18 (set (reg/f:DI 188)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 source+0 S8 A64])) /home/kai/git_repos/obme/resampling.cpp:23 89 {*movdi_internal}
     (nil))
(insn 117 116 118 18 (parallel [
            (set (reg/f:DI 106 [ D.2485 ])
                (plus:DI (reg:DI 105 [ D.2484 ])
                    (reg/f:DI 188)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:23 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 188)
        (expr_list:REG_DEAD (reg:DI 105 [ D.2484 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -56 [0xffffffffffffffc8])) [0 source+0 S8 A64])
                        (reg:DI 105 [ D.2484 ]))
                    (nil))))))
(insn 118 117 119 18 (set (reg:QI 107 [ D.2486 ])
        (mem:QI (reg/f:DI 106 [ D.2485 ]) [0 *_49+0 S1 A8])) /home/kai/git_repos/obme/resampling.cpp:23 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106 [ D.2485 ])
        (nil)))
(insn 119 118 120 18 (set (reg:SI 189)
        (sign_extend:SI (reg:QI 107 [ D.2486 ]))) /home/kai/git_repos/obme/resampling.cpp:23 148 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 107 [ D.2486 ])
        (nil)))
(insn 120 119 251 18 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 c+0 S4 A32])
        (reg:SI 189)) /home/kai/git_repos/obme/resampling.cpp:23 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 189)
        (nil)))
(jump_insn 251 120 252 18 (set (pc)
        (label_ref 127)) 654 {jump}
     (nil)
 -> 127)
;;  succ:       20 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 252 251 123)
;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 190
(code_label 123 252 124 19 10 "" [1 uses])
(note 124 123 125 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 126 19 (set (reg:SI 190)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 a+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:24 90 {*movsi_internal}
     (nil))
(insn 126 125 127 19 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 c+0 S4 A32])
        (reg:SI 190)) /home/kai/git_repos/obme/resampling.cpp:24 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 190)
        (nil)))
;;  succ:       20 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;;              18 [100.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 108 191
(code_label 127 126 128 20 11 "" [1 uses])
(note 128 127 129 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 20 (set (reg:SI 191)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:26 90 {*movsi_internal}
     (nil))
(insn 130 129 131 20 (parallel [
            (set (reg:SI 108 [ D.2483 ])
                (plus:SI (reg:SI 191)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:26 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 191)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 x+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 131 130 132 20 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 108 [ D.2483 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -76 [0xffffffffffffffb4])) [0 picwidth+0 S4 A32]))) /home/kai/git_repos/obme/resampling.cpp:26 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 108 [ D.2483 ])
        (nil)))
(jump_insn 132 131 133 20 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 153)
            (pc))) /home/kai/git_repos/obme/resampling.cpp:26 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 153)
;;  succ:       21 (FALLTHRU)
;;              23
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 109 192
(note 133 132 134 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 135 21 (set (reg:SI 192)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:26 90 {*movsi_internal}
     (nil))
(insn 135 134 136 21 (parallel [
            (set (reg:SI 109 [ D.2483 ])
                (plus:SI (reg:SI 192)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:26 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 192)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 136 135 137 21 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 109 [ D.2483 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])) [0 picheight+0 S4 A32]))) /home/kai/git_repos/obme/resampling.cpp:26 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 109 [ D.2483 ])
        (nil)))
(jump_insn 137 136 138 21 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 153)
            (pc))) /home/kai/git_repos/obme/resampling.cpp:26 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 153)
;;  succ:       22 (FALLTHRU)
;;              23
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 110 111 112 113 114 115 116 193 194 195 196
(note 138 137 139 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 22 (set (reg:SI 193)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:26 90 {*movsi_internal}
     (nil))
(insn 140 139 141 22 (parallel [
            (set (reg:SI 110 [ D.2483 ])
                (plus:SI (reg:SI 193)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:26 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 193)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 x+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 141 140 142 22 (set (reg:SI 194)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:26 90 {*movsi_internal}
     (nil))
(insn 142 141 143 22 (parallel [
            (set (reg:SI 111 [ D.2483 ])
                (plus:SI (reg:SI 194)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:26 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 194)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 143 142 144 22 (parallel [
            (set (reg:SI 112 [ D.2483 ])
                (mult:SI (reg:SI 111 [ D.2483 ])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -76 [0xffffffffffffffb4])) [0 picwidth+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:26 305 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 111 [ D.2483 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 144 143 145 22 (parallel [
            (set (reg:SI 113 [ D.2483 ])
                (plus:SI (reg:SI 110 [ D.2483 ])
                    (reg:SI 112 [ D.2483 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:26 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 112 [ D.2483 ])
        (expr_list:REG_DEAD (reg:SI 110 [ D.2483 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 145 144 146 22 (set (reg:DI 114 [ D.2484 ])
        (sign_extend:DI (reg:SI 113 [ D.2483 ]))) /home/kai/git_repos/obme/resampling.cpp:26 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 113 [ D.2483 ])
        (nil)))
(insn 146 145 147 22 (set (reg/f:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 source+0 S8 A64])) /home/kai/git_repos/obme/resampling.cpp:26 89 {*movdi_internal}
     (nil))
(insn 147 146 148 22 (parallel [
            (set (reg/f:DI 115 [ D.2485 ])
                (plus:DI (reg:DI 114 [ D.2484 ])
                    (reg/f:DI 195)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:26 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 195)
        (expr_list:REG_DEAD (reg:DI 114 [ D.2484 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -56 [0xffffffffffffffc8])) [0 source+0 S8 A64])
                        (reg:DI 114 [ D.2484 ]))
                    (nil))))))
(insn 148 147 149 22 (set (reg:QI 116 [ D.2486 ])
        (mem:QI (reg/f:DI 115 [ D.2485 ]) [0 *_60+0 S1 A8])) /home/kai/git_repos/obme/resampling.cpp:26 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 115 [ D.2485 ])
        (nil)))
(insn 149 148 150 22 (set (reg:SI 196)
        (sign_extend:SI (reg:QI 116 [ D.2486 ]))) /home/kai/git_repos/obme/resampling.cpp:26 148 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 116 [ D.2486 ])
        (nil)))
(insn 150 149 253 22 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 d+0 S4 A32])
        (reg:SI 196)) /home/kai/git_repos/obme/resampling.cpp:26 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 196)
        (nil)))
(jump_insn 253 150 254 22 (set (pc)
        (label_ref 157)) /home/kai/git_repos/obme/resampling.cpp:26 654 {jump}
     (nil)
 -> 157)
;;  succ:       24 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 254 253 153)
;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20
;;              21
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 197
(code_label 153 254 154 23 12 "" [2 uses])
(note 154 153 155 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 156 23 (set (reg:SI 197)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 a+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:27 90 {*movsi_internal}
     (nil))
(insn 156 155 157 23 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 d+0 S4 A32])
        (reg:SI 197)) /home/kai/git_repos/obme/resampling.cpp:27 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 197)
        (nil)))
;;  succ:       24 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;;              22 [100.0%] 
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227
(code_label 157 156 158 24 13 "" [1 uses])
(note 158 157 159 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 24 (set (reg:SI 198)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:29 90 {*movsi_internal}
     (nil))
(insn 160 159 161 24 (parallel [
            (set (reg:SI 117 [ D.2483 ])
                (ashift:SI (reg:SI 198)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:29 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 198)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -32 [0xffffffffffffffe0])) [0 i+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 161 160 162 24 (set (reg:SI 199)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 j+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:29 90 {*movsi_internal}
     (nil))
(insn 162 161 163 24 (parallel [
            (set (reg:SI 118 [ D.2483 ])
                (ashift:SI (reg:SI 199)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:29 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 199)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -36 [0xffffffffffffffdc])) [0 j+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 163 162 164 24 (parallel [
            (set (reg:SI 119 [ D.2483 ])
                (mult:SI (reg:SI 118 [ D.2483 ])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 buffer_r+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:29 305 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 118 [ D.2483 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 164 163 165 24 (parallel [
            (set (reg:SI 120 [ D.2483 ])
                (plus:SI (reg:SI 117 [ D.2483 ])
                    (reg:SI 119 [ D.2483 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:29 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 119 [ D.2483 ])
        (expr_list:REG_DEAD (reg:SI 117 [ D.2483 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 165 164 166 24 (set (reg:DI 121 [ D.2484 ])
        (sign_extend:DI (reg:SI 120 [ D.2483 ]))) /home/kai/git_repos/obme/resampling.cpp:29 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 120 [ D.2483 ])
        (nil)))
(insn 166 165 167 24 (set (reg/f:DI 200)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 buffer+0 S8 A64])) /home/kai/git_repos/obme/resampling.cpp:29 89 {*movdi_internal}
     (nil))
(insn 167 166 168 24 (parallel [
            (set (reg/f:DI 122 [ D.2485 ])
                (plus:DI (reg:DI 121 [ D.2484 ])
                    (reg/f:DI 200)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:29 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 200)
        (expr_list:REG_DEAD (reg:DI 121 [ D.2484 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 buffer+0 S8 A64])
                        (reg:DI 121 [ D.2484 ]))
                    (nil))))))
(insn 168 167 169 24 (set (reg:SI 201)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 a+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:29 90 {*movsi_internal}
     (nil))
(insn 169 168 170 24 (set (reg:QI 123 [ D.2486 ])
        (subreg:QI (reg:SI 201) 0)) /home/kai/git_repos/obme/resampling.cpp:29 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 201)
        (nil)))
(insn 170 169 171 24 (set (mem:QI (reg/f:DI 122 [ D.2485 ]) [0 *_70+0 S1 A8])
        (reg:QI 123 [ D.2486 ])) /home/kai/git_repos/obme/resampling.cpp:29 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 123 [ D.2486 ])
        (expr_list:REG_DEAD (reg/f:DI 122 [ D.2485 ])
            (nil))))
(insn 171 170 172 24 (set (reg:SI 202)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:30 90 {*movsi_internal}
     (nil))
(insn 172 171 173 24 (parallel [
            (set (reg:SI 124 [ D.2483 ])
                (ashift:SI (reg:SI 202)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:30 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 202)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -32 [0xffffffffffffffe0])) [0 i+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 173 172 174 24 (parallel [
            (set (reg:SI 125 [ D.2483 ])
                (plus:SI (reg:SI 124 [ D.2483 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:30 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 124 [ D.2483 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 174 173 175 24 (set (reg:SI 203)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 j+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:30 90 {*movsi_internal}
     (nil))
(insn 175 174 176 24 (parallel [
            (set (reg:SI 126 [ D.2483 ])
                (ashift:SI (reg:SI 203)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:30 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 203)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -36 [0xffffffffffffffdc])) [0 j+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 176 175 177 24 (parallel [
            (set (reg:SI 127 [ D.2483 ])
                (mult:SI (reg:SI 126 [ D.2483 ])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 buffer_r+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:30 305 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 126 [ D.2483 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 177 176 178 24 (parallel [
            (set (reg:SI 128 [ D.2483 ])
                (plus:SI (reg:SI 125 [ D.2483 ])
                    (reg:SI 127 [ D.2483 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:30 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 127 [ D.2483 ])
        (expr_list:REG_DEAD (reg:SI 125 [ D.2483 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 178 177 179 24 (set (reg:DI 129 [ D.2484 ])
        (sign_extend:DI (reg:SI 128 [ D.2483 ]))) /home/kai/git_repos/obme/resampling.cpp:30 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 128 [ D.2483 ])
        (nil)))
(insn 179 178 180 24 (set (reg/f:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 buffer+0 S8 A64])) /home/kai/git_repos/obme/resampling.cpp:30 89 {*movdi_internal}
     (nil))
(insn 180 179 181 24 (parallel [
            (set (reg/f:DI 130 [ D.2485 ])
                (plus:DI (reg:DI 129 [ D.2484 ])
                    (reg/f:DI 204)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:30 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 204)
        (expr_list:REG_DEAD (reg:DI 129 [ D.2484 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 buffer+0 S8 A64])
                        (reg:DI 129 [ D.2484 ]))
                    (nil))))))
(insn 181 180 182 24 (set (reg:SI 205)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 a+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:30 90 {*movsi_internal}
     (nil))
(insn 182 181 183 24 (set (reg:SI 206)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 b+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:30 90 {*movsi_internal}
     (nil))
(insn 183 182 184 24 (parallel [
            (set (reg:SI 131 [ D.2483 ])
                (plus:SI (reg:SI 205)
                    (reg:SI 206)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:30 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 206)
        (expr_list:REG_DEAD (reg:SI 205)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -4 [0xfffffffffffffffc])) [0 a+0 S4 A32])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -28 [0xffffffffffffffe4])) [0 b+0 S4 A32]))
                    (nil))))))
(insn 184 183 185 24 (parallel [
            (set (reg:SI 207)
                (lshiftrt:SI (reg:SI 131 [ D.2483 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:30 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 185 184 186 24 (parallel [
            (set (reg:SI 208)
                (plus:SI (reg:SI 207)
                    (reg:SI 131 [ D.2483 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:30 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 207)
        (expr_list:REG_DEAD (reg:SI 131 [ D.2483 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 186 185 187 24 (parallel [
            (set (reg:SI 209)
                (ashiftrt:SI (reg:SI 208)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:30 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 208)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 187 186 188 24 (set (reg:SI 132 [ D.2483 ])
        (reg:SI 209)) /home/kai/git_repos/obme/resampling.cpp:30 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 209)
        (nil)))
(insn 188 187 189 24 (set (reg:QI 133 [ D.2486 ])
        (subreg:QI (reg:SI 132 [ D.2483 ]) 0)) /home/kai/git_repos/obme/resampling.cpp:30 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 132 [ D.2483 ])
        (nil)))
(insn 189 188 190 24 (set (mem:QI (reg/f:DI 130 [ D.2485 ]) [0 *_79+0 S1 A8])
        (reg:QI 133 [ D.2486 ])) /home/kai/git_repos/obme/resampling.cpp:30 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 133 [ D.2486 ])
        (expr_list:REG_DEAD (reg/f:DI 130 [ D.2485 ])
            (nil))))
(insn 190 189 191 24 (set (reg:SI 210)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:31 90 {*movsi_internal}
     (nil))
(insn 191 190 192 24 (parallel [
            (set (reg:SI 134 [ D.2483 ])
                (ashift:SI (reg:SI 210)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:31 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 210)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -32 [0xffffffffffffffe0])) [0 i+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 192 191 193 24 (set (reg:SI 211)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 j+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:31 90 {*movsi_internal}
     (nil))
(insn 193 192 194 24 (parallel [
            (set (reg:SI 135 [ D.2483 ])
                (ashift:SI (reg:SI 211)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:31 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 211)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -36 [0xffffffffffffffdc])) [0 j+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 194 193 195 24 (parallel [
            (set (reg:SI 136 [ D.2483 ])
                (plus:SI (reg:SI 135 [ D.2483 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:31 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 135 [ D.2483 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 195 194 196 24 (parallel [
            (set (reg:SI 137 [ D.2483 ])
                (mult:SI (reg:SI 136 [ D.2483 ])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 buffer_r+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:31 305 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 136 [ D.2483 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 196 195 197 24 (parallel [
            (set (reg:SI 138 [ D.2483 ])
                (plus:SI (reg:SI 134 [ D.2483 ])
                    (reg:SI 137 [ D.2483 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:31 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 137 [ D.2483 ])
        (expr_list:REG_DEAD (reg:SI 134 [ D.2483 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 197 196 198 24 (set (reg:DI 139 [ D.2484 ])
        (sign_extend:DI (reg:SI 138 [ D.2483 ]))) /home/kai/git_repos/obme/resampling.cpp:31 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 138 [ D.2483 ])
        (nil)))
(insn 198 197 199 24 (set (reg/f:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 buffer+0 S8 A64])) /home/kai/git_repos/obme/resampling.cpp:31 89 {*movdi_internal}
     (nil))
(insn 199 198 200 24 (parallel [
            (set (reg/f:DI 140 [ D.2485 ])
                (plus:DI (reg:DI 139 [ D.2484 ])
                    (reg/f:DI 212)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:31 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 212)
        (expr_list:REG_DEAD (reg:DI 139 [ D.2484 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 buffer+0 S8 A64])
                        (reg:DI 139 [ D.2484 ]))
                    (nil))))))
(insn 200 199 201 24 (set (reg:SI 213)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 a+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:31 90 {*movsi_internal}
     (nil))
(insn 201 200 202 24 (set (reg:SI 214)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 c+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:31 90 {*movsi_internal}
     (nil))
(insn 202 201 203 24 (parallel [
            (set (reg:SI 141 [ D.2483 ])
                (plus:SI (reg:SI 213)
                    (reg:SI 214)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:31 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 214)
        (expr_list:REG_DEAD (reg:SI 213)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -4 [0xfffffffffffffffc])) [0 a+0 S4 A32])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 c+0 S4 A32]))
                    (nil))))))
(insn 203 202 204 24 (parallel [
            (set (reg:SI 215)
                (lshiftrt:SI (reg:SI 141 [ D.2483 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:31 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 204 203 205 24 (parallel [
            (set (reg:SI 216)
                (plus:SI (reg:SI 215)
                    (reg:SI 141 [ D.2483 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:31 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 215)
        (expr_list:REG_DEAD (reg:SI 141 [ D.2483 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 205 204 206 24 (parallel [
            (set (reg:SI 217)
                (ashiftrt:SI (reg:SI 216)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:31 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 216)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 206 205 207 24 (set (reg:SI 142 [ D.2483 ])
        (reg:SI 217)) /home/kai/git_repos/obme/resampling.cpp:31 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 217)
        (nil)))
(insn 207 206 208 24 (set (reg:QI 143 [ D.2486 ])
        (subreg:QI (reg:SI 142 [ D.2483 ]) 0)) /home/kai/git_repos/obme/resampling.cpp:31 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 142 [ D.2483 ])
        (nil)))
(insn 208 207 209 24 (set (mem:QI (reg/f:DI 140 [ D.2485 ]) [0 *_90+0 S1 A8])
        (reg:QI 143 [ D.2486 ])) /home/kai/git_repos/obme/resampling.cpp:31 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 143 [ D.2486 ])
        (expr_list:REG_DEAD (reg/f:DI 140 [ D.2485 ])
            (nil))))
(insn 209 208 210 24 (set (reg:SI 218)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:32 90 {*movsi_internal}
     (nil))
(insn 210 209 211 24 (parallel [
            (set (reg:SI 144 [ D.2483 ])
                (ashift:SI (reg:SI 218)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:32 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 218)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -32 [0xffffffffffffffe0])) [0 i+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 211 210 212 24 (parallel [
            (set (reg:SI 145 [ D.2483 ])
                (plus:SI (reg:SI 144 [ D.2483 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:32 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 144 [ D.2483 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 212 211 213 24 (set (reg:SI 219)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 j+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:32 90 {*movsi_internal}
     (nil))
(insn 213 212 214 24 (parallel [
            (set (reg:SI 146 [ D.2483 ])
                (ashift:SI (reg:SI 219)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:32 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 219)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -36 [0xffffffffffffffdc])) [0 j+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 214 213 215 24 (parallel [
            (set (reg:SI 147 [ D.2483 ])
                (plus:SI (reg:SI 146 [ D.2483 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:32 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 146 [ D.2483 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 215 214 216 24 (parallel [
            (set (reg:SI 148 [ D.2483 ])
                (mult:SI (reg:SI 147 [ D.2483 ])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 buffer_r+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:32 305 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 147 [ D.2483 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 216 215 217 24 (parallel [
            (set (reg:SI 149 [ D.2483 ])
                (plus:SI (reg:SI 145 [ D.2483 ])
                    (reg:SI 148 [ D.2483 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:32 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 148 [ D.2483 ])
        (expr_list:REG_DEAD (reg:SI 145 [ D.2483 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 217 216 218 24 (set (reg:DI 150 [ D.2484 ])
        (sign_extend:DI (reg:SI 149 [ D.2483 ]))) /home/kai/git_repos/obme/resampling.cpp:32 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 149 [ D.2483 ])
        (nil)))
(insn 218 217 219 24 (set (reg/f:DI 220)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 buffer+0 S8 A64])) /home/kai/git_repos/obme/resampling.cpp:32 89 {*movdi_internal}
     (nil))
(insn 219 218 220 24 (parallel [
            (set (reg/f:DI 151 [ D.2485 ])
                (plus:DI (reg:DI 150 [ D.2484 ])
                    (reg/f:DI 220)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:32 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 220)
        (expr_list:REG_DEAD (reg:DI 150 [ D.2484 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 buffer+0 S8 A64])
                        (reg:DI 150 [ D.2484 ]))
                    (nil))))))
(insn 220 219 221 24 (set (reg:SI 221)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 a+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:32 90 {*movsi_internal}
     (nil))
(insn 221 220 222 24 (set (reg:SI 222)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 b+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:32 90 {*movsi_internal}
     (nil))
(insn 222 221 223 24 (parallel [
            (set (reg:SI 152 [ D.2483 ])
                (plus:SI (reg:SI 221)
                    (reg:SI 222)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:32 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 222)
        (expr_list:REG_DEAD (reg:SI 221)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -4 [0xfffffffffffffffc])) [0 a+0 S4 A32])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -28 [0xffffffffffffffe4])) [0 b+0 S4 A32]))
                    (nil))))))
(insn 223 222 224 24 (set (reg:SI 223)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 c+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:32 90 {*movsi_internal}
     (nil))
(insn 224 223 225 24 (parallel [
            (set (reg:SI 153 [ D.2483 ])
                (plus:SI (reg:SI 152 [ D.2483 ])
                    (reg:SI 223)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:32 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 223)
        (expr_list:REG_DEAD (reg:SI 152 [ D.2483 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 152 [ D.2483 ])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 c+0 S4 A32]))
                    (nil))))))
(insn 225 224 226 24 (set (reg:SI 224)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 d+0 S4 A32])) /home/kai/git_repos/obme/resampling.cpp:32 90 {*movsi_internal}
     (nil))
(insn 226 225 227 24 (parallel [
            (set (reg:SI 154 [ D.2483 ])
                (plus:SI (reg:SI 153 [ D.2483 ])
                    (reg:SI 224)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:32 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 224)
        (expr_list:REG_DEAD (reg:SI 153 [ D.2483 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 153 [ D.2483 ])
                        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                                (const_int -20 [0xffffffffffffffec])) [0 d+0 S4 A32]))
                    (nil))))))
(insn 227 226 228 24 (set (reg:SI 225)
        (reg:SI 154 [ D.2483 ])) /home/kai/git_repos/obme/resampling.cpp:32 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 154 [ D.2483 ])
        (nil)))
(insn 228 227 229 24 (parallel [
            (set (reg:SI 226)
                (plus:SI (reg:SI 225)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:32 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 229 228 230 24 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 225)
            (const_int 0 [0]))) /home/kai/git_repos/obme/resampling.cpp:32 3 {*cmpsi_ccno_1}
     (nil))
(insn 230 229 231 24 (set (reg:SI 225)
        (if_then_else:SI (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 226)
            (reg:SI 225))) /home/kai/git_repos/obme/resampling.cpp:32 953 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 226)
        (expr_list:REG_DEAD (reg:CCGOC 17 flags)
            (nil))))
(insn 231 230 232 24 (parallel [
            (set (reg:SI 227)
                (ashiftrt:SI (reg:SI 225)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:32 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 225)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 232 231 233 24 (set (reg:SI 155 [ D.2483 ])
        (reg:SI 227)) /home/kai/git_repos/obme/resampling.cpp:32 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 227)
        (nil)))
(insn 233 232 234 24 (set (reg:QI 156 [ D.2486 ])
        (subreg:QI (reg:SI 155 [ D.2483 ]) 0)) /home/kai/git_repos/obme/resampling.cpp:32 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 155 [ D.2483 ])
        (nil)))
(insn 234 233 235 24 (set (mem:QI (reg/f:DI 151 [ D.2485 ]) [0 *_102+0 S1 A8])
        (reg:QI 156 [ D.2486 ])) /home/kai/git_repos/obme/resampling.cpp:32 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 156 [ D.2486 ])
        (expr_list:REG_DEAD (reg/f:DI 151 [ D.2485 ])
            (nil))))
(insn 235 234 255 24 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -32 [0xffffffffffffffe0])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -32 [0xffffffffffffffe0])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:7 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 255 235 256 24 (set (pc)
        (label_ref 236)) /home/kai/git_repos/obme/resampling.cpp:7 654 {jump}
     (nil)
 -> 236)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 256 255 239)
;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 239 256 240 25 3 "" [1 uses])
(note 240 239 241 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 241 240 257 25 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -36 [0xffffffffffffffdc])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -36 [0xffffffffffffffdc])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/resampling.cpp:6 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 257 241 258 25 (set (pc)
        (label_ref 242)) /home/kai/git_repos/obme/resampling.cpp:6 654 {jump}
     (nil)
 -> 242)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 258 257 260)
;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 26, flags: (NEW, RTL, MODIFIED)
;;  pred:       3
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 260 258 259 27 16 "" [1 uses])
(note 259 260 261 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 261 259 247 27 (const_int 0 [0]) /home/kai/git_repos/obme/resampling.cpp:34 684 {nop}
     (nil))
;;  succ:       26 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       27 [100.0%]  (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 247 261 248 26 1 "" [0 uses])
(note 248 247 0 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

