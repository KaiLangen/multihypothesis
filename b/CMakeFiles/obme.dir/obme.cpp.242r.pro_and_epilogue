
;; Function int calcSAD(imgpel*, imgpel*, int, int) (_Z7calcSADPcS_ii, funcdef_no=1384, decl_uid=33301, cgraph_uid=400, symbol_order=402)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 10 count 15 (  1.7)
scanning new insn with uid = 78.
scanning new insn with uid = 79.
scanning new insn with uid = 80.
scanning new insn with uid = 83.
scanning new insn with uid = 84.
scanning new insn with uid = 85.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns


int calcSAD(imgpel*, imgpel*, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 17[flags]
;;  ref usage 	r0={22d,23u} r1={8d,9u,2e} r2={1d,1u} r4={1d,1u} r5={1d,1u} r6={3d,39u} r7={3d,11u} r17={15d,2u} r20={1d,1u,2e} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 157{65d,88u,4e} in 53{53 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	
(note 7 1 78 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 78 7 79 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg/f:DI 6 bp)) /home/kai/git_repos/obme/obme.cpp:9 -1
     (nil))
(insn/f 79 78 80 2 (set (reg/f:DI 6 bp)
        (reg/f:DI 7 sp)) /home/kai/git_repos/obme/obme.cpp:9 -1
     (nil))
(insn 80 79 81 2 (set (mem/v:BLK (scratch:DI) [0  A8])
        (unspec:BLK [
                (mem/v:BLK (scratch:DI) [0  A8])
            ] UNSPEC_MEMORY_BLOCKAGE)) /home/kai/git_repos/obme/obme.cpp:9 -1
     (nil))
(note 81 80 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 81 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 blk1+0 S8 A64])
        (reg:DI 5 di [ blk1 ])) /home/kai/git_repos/obme/obme.cpp:9 89 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 blk2+0 S8 A64])
        (reg:DI 4 si [ blk2 ])) /home/kai/git_repos/obme/obme.cpp:9 89 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 width+0 S4 A32])
        (reg:SI 1 dx [ width ])) /home/kai/git_repos/obme/obme.cpp:9 90 {*movsi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 blocksize+0 S4 A32])
        (reg:SI 2 cx [ blocksize ])) /home/kai/git_repos/obme/obme.cpp:9 90 {*movsi_internal}
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 sad+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:10 90 {*movsi_internal}
     (nil))
(insn 10 9 56 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 y+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:11 90 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              7 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 56 10 11 3 5 "" [1 uses])
(note 11 56 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg:SI 0 ax [103])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:11 90 {*movsi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [103])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [0 blocksize+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:11 7 {*cmpsi_1}
     (nil))
(jump_insn 14 13 15 3 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) /home/kai/git_repos/obme/obme.cpp:11 612 {*jcc_1}
     (nil)
 -> 59)
;;  succ:       8
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 50 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:12 90 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              6 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 50 16 17 5 4 "" [1 uses])
(note 17 50 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 5 (set (reg:SI 0 ax [104])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:12 90 {*movsi_internal}
     (nil))
(insn 19 18 20 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [104])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [0 blocksize+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:12 7 {*cmpsi_1}
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) /home/kai/git_repos/obme/obme.cpp:12 612 {*jcc_1}
     (nil)
 -> 53)
;;  succ:       7
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg:SI 0 ax [105])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:14 90 {*movsi_internal}
     (nil))
(insn 23 22 24 6 (set (reg:DI 1 dx [orig:87 D.35021 ] [87])
        (sign_extend:DI (reg:SI 0 ax [105]))) /home/kai/git_repos/obme/obme.cpp:14 142 {*extendsidi2_rex64}
     (nil))
(insn 24 23 25 6 (set (reg:SI 0 ax [106])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:14 90 {*movsi_internal}
     (nil))
(insn 25 24 26 6 (parallel [
            (set (reg:SI 0 ax [orig:88 D.35022 ] [88])
                (mult:SI (reg:SI 0 ax [106])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:14 305 {*mulsi3_1}
     (nil))
(insn 26 25 27 6 (set (reg:DI 0 ax [orig:89 D.35021 ] [89])
        (sign_extend:DI (reg:SI 0 ax [orig:88 D.35022 ] [88]))) /home/kai/git_repos/obme/obme.cpp:14 142 {*extendsidi2_rex64}
     (nil))
(insn 27 26 28 6 (parallel [
            (set (reg:DI 1 dx [orig:90 D.35021 ] [90])
                (plus:DI (reg:DI 1 dx [orig:87 D.35021 ] [87])
                    (reg:DI 0 ax [orig:89 D.35021 ] [89])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:14 218 {*adddi_1}
     (nil))
(insn 28 27 29 6 (set (reg/f:DI 0 ax [107])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 blk1+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:14 89 {*movdi_internal}
     (nil))
(insn 29 28 30 6 (parallel [
            (set (reg/f:DI 0 ax [orig:91 D.35023 ] [91])
                (plus:DI (reg/f:DI 0 ax [107])
                    (reg:DI 1 dx [orig:90 D.35021 ] [90])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:14 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [0 blk1+0 S8 A64])
            (reg:DI 1 dx [orig:90 D.35021 ] [90]))
        (nil)))
(insn 30 29 31 6 (set (reg:QI 0 ax [108])
        (mem:QI (reg/f:DI 0 ax [orig:91 D.35023 ] [91]) [0 *_15+0 S1 A8])) /home/kai/git_repos/obme/obme.cpp:14 93 {*movqi_internal}
     (nil))
(insn 31 30 32 6 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -14 [0xfffffffffffffff2])) [0 pel1+0 S1 A8])
        (reg:QI 0 ax [108])) /home/kai/git_repos/obme/obme.cpp:14 93 {*movqi_internal}
     (nil))
(insn 32 31 33 6 (set (reg:SI 0 ax [109])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:15 90 {*movsi_internal}
     (nil))
(insn 33 32 34 6 (set (reg:DI 1 dx [orig:92 D.35021 ] [92])
        (sign_extend:DI (reg:SI 0 ax [109]))) /home/kai/git_repos/obme/obme.cpp:15 142 {*extendsidi2_rex64}
     (nil))
(insn 34 33 35 6 (set (reg:SI 0 ax [110])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:15 90 {*movsi_internal}
     (nil))
(insn 35 34 36 6 (parallel [
            (set (reg:SI 0 ax [orig:93 D.35022 ] [93])
                (mult:SI (reg:SI 0 ax [110])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:15 305 {*mulsi3_1}
     (nil))
(insn 36 35 37 6 (set (reg:DI 0 ax [orig:94 D.35021 ] [94])
        (sign_extend:DI (reg:SI 0 ax [orig:93 D.35022 ] [93]))) /home/kai/git_repos/obme/obme.cpp:15 142 {*extendsidi2_rex64}
     (nil))
(insn 37 36 38 6 (parallel [
            (set (reg:DI 1 dx [orig:95 D.35021 ] [95])
                (plus:DI (reg:DI 1 dx [orig:92 D.35021 ] [92])
                    (reg:DI 0 ax [orig:94 D.35021 ] [94])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:15 218 {*adddi_1}
     (nil))
(insn 38 37 39 6 (set (reg/f:DI 0 ax [111])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 blk2+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:15 89 {*movdi_internal}
     (nil))
(insn 39 38 40 6 (parallel [
            (set (reg/f:DI 0 ax [orig:96 D.35023 ] [96])
                (plus:DI (reg/f:DI 0 ax [111])
                    (reg:DI 1 dx [orig:95 D.35021 ] [95])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:15 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [0 blk2+0 S8 A64])
            (reg:DI 1 dx [orig:95 D.35021 ] [95]))
        (nil)))
(insn 40 39 41 6 (set (reg:QI 0 ax [112])
        (mem:QI (reg/f:DI 0 ax [orig:96 D.35023 ] [96]) [0 *_23+0 S1 A8])) /home/kai/git_repos/obme/obme.cpp:15 93 {*movqi_internal}
     (nil))
(insn 41 40 42 6 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -13 [0xfffffffffffffff3])) [0 pel2+0 S1 A8])
        (reg:QI 0 ax [112])) /home/kai/git_repos/obme/obme.cpp:15 93 {*movqi_internal}
     (nil))
(insn 42 41 43 6 (set (reg:SI 1 dx [orig:97 D.35022 ] [97])
        (sign_extend:SI (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -14 [0xfffffffffffffff2])) [0 pel1+0 S1 A8]))) /home/kai/git_repos/obme/obme.cpp:16 148 {extendqisi2}
     (nil))
(insn 43 42 44 6 (set (reg:SI 0 ax [orig:98 D.35022 ] [98])
        (sign_extend:SI (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -13 [0xfffffffffffffff3])) [0 pel2+0 S1 A8]))) /home/kai/git_repos/obme/obme.cpp:16 148 {extendqisi2}
     (nil))
(insn 44 43 77 6 (parallel [
            (set (reg:SI 1 dx [orig:99 D.35022 ] [99])
                (minus:SI (reg:SI 1 dx [orig:99 D.35022 ] [99])
                    (reg:SI 0 ax [orig:98 D.35022 ] [98])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:16 260 {*subsi_1}
     (nil))
(insn 77 44 45 6 (set (reg:SI 0 ax [orig:99 D.35022 ] [99])
        (reg:SI 1 dx [orig:99 D.35022 ] [99])) /home/kai/git_repos/obme/obme.cpp:16 90 {*movsi_internal}
     (nil))
(insn 45 77 46 6 (parallel [
            (set (reg:SI 1 dx [113])
                (ashiftrt:SI (reg:SI 0 ax [orig:99 D.35022 ] [99])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:16 538 {ashrsi3_cvt}
     (nil))
(insn 46 45 47 6 (parallel [
            (set (reg:SI 0 ax [orig:100 D.35022 ] [100])
                (xor:SI (reg:SI 0 ax [orig:99 D.35022 ] [99])
                    (reg:SI 1 dx [113])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:16 400 {*xorsi_1}
     (nil))
(insn 47 46 48 6 (parallel [
            (set (reg:SI 0 ax [orig:100 D.35022 ] [100])
                (minus:SI (reg:SI 0 ax [orig:100 D.35022 ] [100])
                    (reg:SI 1 dx [113])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:16 260 {*subsi_1}
     (nil))
(insn 48 47 49 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -12 [0xfffffffffffffff4])) [0 sad+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -12 [0xfffffffffffffff4])) [0 sad+0 S4 A32])
                    (reg:SI 0 ax [orig:100 D.35022 ] [100])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:16 217 {*addsi_1}
     (nil))
(insn 49 48 71 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:12 217 {*addsi_1}
     (nil))
(jump_insn 71 49 72 6 (set (pc)
        (label_ref 50)) /home/kai/git_repos/obme/obme.cpp:12 654 {jump}
     (nil)
 -> 50)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 72 71 53)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 53 72 54 7 3 "" [1 uses])
(note 54 53 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 73 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -8 [0xfffffffffffffff8])) [0 y+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -8 [0xfffffffffffffff8])) [0 y+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:11 217 {*addsi_1}
     (nil))
(jump_insn 73 55 74 7 (set (pc)
        (label_ref 56)) /home/kai/git_repos/obme/obme.cpp:11 654 {jump}
     (nil)
 -> 56)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 74 73 59)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax]
(code_label 59 74 60 8 2 "" [1 uses])
(note 60 59 61 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 69 8 (set (reg:SI 0 ax [orig:101 D.35022 ] [101])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 sad+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:18 90 {*movsi_internal}
     (nil))
(insn 69 61 82 8 (use (reg/i:SI 0 ax)) /home/kai/git_repos/obme/obme.cpp:19 -1
     (nil))
(note 82 69 83 8 NOTE_INSN_EPILOGUE_BEG)
(insn 83 82 84 8 (set (mem/v:BLK (scratch:DI) [0  A8])
        (unspec:BLK [
                (mem/v:BLK (scratch:DI) [0  A8])
            ] UNSPEC_MEMORY_BLOCKAGE)) /home/kai/git_repos/obme/obme.cpp:19 -1
     (nil))
(insn/f 84 83 85 8 (set (reg/f:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) /home/kai/git_repos/obme/obme.cpp:19 -1
     (expr_list:REG_CFA_DEF_CFA (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))
        (nil)))
(jump_insn 85 84 86 8 (simple_return) /home/kai/git_repos/obme/obme.cpp:19 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 86 85 75)
(note 75 86 0 NOTE_INSN_DELETED)

;; Function void ES(imgpel*, imgpel*, mvinfo&, int, int, int, int, int) (_Z2ESPcS_R6mvinfoiiiii, funcdef_no=1385, decl_uid=33320, cgraph_uid=401, symbol_order=403)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 26 count 33 (  1.8)
scanning new insn with uid = 185.
scanning new insn with uid = 186.
scanning new insn with uid = 187.
scanning new insn with uid = 190.
scanning new insn with uid = 191.
verify found no changes in insn with uid = 100.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns


void ES(imgpel*, imgpel*, mvinfo&, int, int, int, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8] 38[r9]
;;  ref usage 	r0={47d,52u} r1={23d,20u,2e} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={3d,100u} r7={4d,23u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={3e} r17={33d,9u} r18={1d} r19={1d} r20={1d,1u,13e} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d,1u} r38={2d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} 
;;    total ref usage 427{196d,213u,18e} in 119{118 regular + 1 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
(note 9 1 185 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 185 9 186 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg/f:DI 6 bp)) /home/kai/git_repos/obme/obme.cpp:23 -1
     (nil))
(insn/f 186 185 187 2 (set (reg/f:DI 6 bp)
        (reg/f:DI 7 sp)) /home/kai/git_repos/obme/obme.cpp:23 -1
     (nil))
(insn/f 187 186 188 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -88 [0xffffffffffffffa8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) /home/kai/git_repos/obme/obme.cpp:23 -1
     (nil))
(note 188 187 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 188 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 trg+0 S8 A64])
        (reg:DI 5 di [ trg ])) /home/kai/git_repos/obme/obme.cpp:23 89 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 ref+0 S8 A64])
        (reg:DI 4 si [ ref ])) /home/kai/git_repos/obme/obme.cpp:23 89 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 mv+0 S8 A64])
        (reg:DI 1 dx [ mv ])) /home/kai/git_repos/obme/obme.cpp:23 89 {*movdi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [0 p+0 S4 A32])
        (reg:SI 2 cx [ p ])) /home/kai/git_repos/obme/obme.cpp:23 90 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 center+0 S4 A32])
        (reg:SI 37 r8 [ center ])) /home/kai/git_repos/obme/obme.cpp:23 90 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])
        (reg:SI 38 r9 [ width ])) /home/kai/git_repos/obme/obme.cpp:23 90 {*movsi_internal}
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 mincost+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) /home/kai/git_repos/obme/obme.cpp:27 90 {*movsi_internal}
     (nil))
(insn 12 11 181 2 (set (reg:SI 0 ax [102])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 center+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:28 90 {*movsi_internal}
     (nil))
(insn 181 12 182 2 (parallel [
            (set (reg:SI 1 dx [101])
                (ashiftrt:SI (reg:SI 0 ax [102])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:28 538 {ashrsi3_cvt}
     (nil))
(insn 182 181 14 2 (parallel [
            (set (reg:SI 0 ax [100])
                (div:SI (reg:SI 0 ax [102])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (set (reg:SI 1 dx [101])
                (mod:SI (reg:SI 0 ax [102])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (use (reg:SI 1 dx [101]))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:28 344 {*divmodsi4_noext}
     (nil))
(insn 14 182 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 cy+0 S4 A32])
        (reg:SI 0 ax [100])) /home/kai/git_repos/obme/obme.cpp:28 90 {*movsi_internal}
     (nil))
(insn 15 14 183 2 (set (reg:SI 0 ax [104])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 center+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:29 90 {*movsi_internal}
     (nil))
(insn 183 15 184 2 (parallel [
            (set (reg:SI 1 dx [105])
                (ashiftrt:SI (reg:SI 0 ax [104])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:29 538 {ashrsi3_cvt}
     (nil))
(insn 184 183 17 2 (parallel [
            (set (reg:SI 0 ax [106])
                (div:SI (reg:SI 0 ax [104])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (set (reg:SI 1 dx [105])
                (mod:SI (reg:SI 0 ax [104])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (use (reg:SI 1 dx [105]))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:29 344 {*divmodsi4_noext}
     (nil))
(insn 17 184 21 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 cx+0 S4 A32])
        (reg:SI 1 dx [105])) /home/kai/git_repos/obme/obme.cpp:29 90 {*movsi_internal}
     (nil))
(insn 21 17 22 2 (set (reg:SI 0 ax [110])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [0 p+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:30 90 {*movsi_internal}
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg:SI 0 ax [109])
                (neg:SI (reg:SI 0 ax [110])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:30 455 {*negsi2_1}
     (expr_list:REG_EQUAL (neg:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -76 [0xffffffffffffffb4])) [0 p+0 S4 A32]))
        (nil)))
(insn 23 22 126 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])
        (reg:SI 0 ax [109])) /home/kai/git_repos/obme/obme.cpp:30 90 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              16 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 126 23 24 3 14 "" [1 uses])
(note 24 126 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 3 (set (reg:SI 0 ax [111])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:30 90 {*movsi_internal}
     (nil))
(insn 26 25 27 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [111])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -76 [0xffffffffffffffb4])) [0 p+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:30 7 {*cmpsi_1}
     (nil))
(jump_insn 27 26 28 3 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 129)
            (pc))) /home/kai/git_repos/obme/obme.cpp:30 612 {*jcc_1}
     (nil)
 -> 129)
;;  succ:       17
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 28 27 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 32 28 33 4 (set (reg:SI 0 ax [115])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [0 p+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:32 90 {*movsi_internal}
     (nil))
(insn 33 32 34 4 (parallel [
            (set (reg:SI 0 ax [114])
                (neg:SI (reg:SI 0 ax [115])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:32 455 {*negsi2_1}
     (expr_list:REG_EQUAL (neg:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -76 [0xffffffffffffffb4])) [0 p+0 S4 A32]))
        (nil)))
(insn 34 33 120 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])
        (reg:SI 0 ax [114])) /home/kai/git_repos/obme/obme.cpp:32 90 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              15 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 120 34 35 5 13 "" [1 uses])
(note 35 120 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 5 (set (reg:SI 0 ax [116])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:32 90 {*movsi_internal}
     (nil))
(insn 37 36 38 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [116])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -76 [0xffffffffffffffb4])) [0 p+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:32 7 {*cmpsi_1}
     (nil))
(jump_insn 38 37 39 5 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 123)
            (pc))) /home/kai/git_repos/obme/obme.cpp:32 612 {*jcc_1}
     (nil)
 -> 123)
;;  succ:       16
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
(note 39 38 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 44 39 45 6 (set (reg:SI 1 dx [121])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 cy+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:34 90 {*movsi_internal}
     (nil))
(insn 45 44 46 6 (set (reg:SI 0 ax [122])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:34 90 {*movsi_internal}
     (nil))
(insn 46 45 47 6 (parallel [
            (set (reg:SI 0 ax [120])
                (plus:SI (reg:SI 0 ax [122])
                    (reg:SI 1 dx [121])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:34 217 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [0 cy+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32]))
        (nil)))
(insn 47 46 52 6 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])
        (reg:SI 0 ax [120])) /home/kai/git_repos/obme/obme.cpp:34 90 {*movsi_internal}
     (nil))
(insn 52 47 53 6 (set (reg:SI 1 dx [127])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 cx+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:35 90 {*movsi_internal}
     (nil))
(insn 53 52 54 6 (set (reg:SI 0 ax [128])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:35 90 {*movsi_internal}
     (nil))
(insn 54 53 55 6 (parallel [
            (set (reg:SI 0 ax [126])
                (plus:SI (reg:SI 0 ax [128])
                    (reg:SI 1 dx [127])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:35 217 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 cx+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32]))
        (nil)))
(insn 55 54 56 6 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32])
        (reg:SI 0 ax [126])) /home/kai/git_repos/obme/obme.cpp:35 90 {*movsi_internal}
     (nil))
(insn 56 55 57 6 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32])
            (const_int 0 [0]))) /home/kai/git_repos/obme/obme.cpp:38 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 57 56 58 6 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 164)
            (pc))) /home/kai/git_repos/obme/obme.cpp:38 612 {*jcc_1}
     (nil)
 -> 164)
;;  succ:       14
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 58 57 59 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 7 (set (reg:SI 0 ax [129])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:38 90 {*movsi_internal}
     (nil))
(insn 60 59 61 7 (parallel [
            (set (reg:SI 0 ax [orig:87 D.35024 ] [87])
                (minus:SI (reg:SI 0 ax [129])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int 24 [0x18])) [0 blocksize+0 S4 A64])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:38 260 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 16 argp)
                    (const_int 8 [0x8])) [0 blocksize+0 S4 A64]))
        (nil)))
(insn 61 60 62 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:87 D.35024 ] [87])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:38 7 {*cmpsi_1}
     (nil))
(jump_insn 62 61 63 7 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 164)
            (pc))) /home/kai/git_repos/obme/obme.cpp:38 612 {*jcc_1}
     (nil)
 -> 164)
;;  succ:       14
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(note 63 62 64 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 8 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])
            (const_int 0 [0]))) /home/kai/git_repos/obme/obme.cpp:38 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 65 64 66 8 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 164)
            (pc))) /home/kai/git_repos/obme/obme.cpp:38 612 {*jcc_1}
     (nil)
 -> 164)
;;  succ:       14
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 66 65 67 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 9 (set (reg:SI 0 ax [130])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [0 height+0 S4 A64])) /home/kai/git_repos/obme/obme.cpp:39 90 {*movsi_internal}
     (nil))
(insn 68 67 69 9 (parallel [
            (set (reg:SI 0 ax [orig:88 D.35024 ] [88])
                (minus:SI (reg:SI 0 ax [130])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int 24 [0x18])) [0 blocksize+0 S4 A64])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:39 260 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (reg/f:DI 16 argp) [0 height+0 S4 A64])
            (mem/c:SI (plus:DI (reg/f:DI 16 argp)
                    (const_int 8 [0x8])) [0 blocksize+0 S4 A64]))
        (nil)))
(insn 69 68 70 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:88 D.35024 ] [88])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:39 7 {*cmpsi_1}
     (nil))
(jump_insn 70 69 71 9 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 164)
            (pc))) /home/kai/git_repos/obme/obme.cpp:39 612 {*jcc_1}
     (nil)
 -> 164)
;;  succ:       14
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(note 71 70 72 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) /home/kai/git_repos/obme/obme.cpp:39 7 {*cmpsi_1}
     (nil))
(jump_insn 73 72 74 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) /home/kai/git_repos/obme/obme.cpp:39 612 {*jcc_1}
     (nil)
 -> 81)
;;  succ:       11 (FALLTHRU)
;;              12
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(note 74 73 75 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])
            (const_int 1 [0x1]))) /home/kai/git_repos/obme/obme.cpp:40 7 {*cmpsi_1}
     (nil))
(jump_insn 76 75 81 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 164)
            (pc))) /home/kai/git_repos/obme/obme.cpp:40 612 {*jcc_1}
     (nil)
 -> 164)
;;  succ:       14
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;;              11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 81 76 82 12 11 "" [1 uses])
(note 82 81 83 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 12 (set (reg:SI 0 ax [131])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:45 90 {*movsi_internal}
     (nil))
(insn 84 83 168 12 (parallel [
            (set (reg:SI 0 ax [orig:89 D.35024 ] [89])
                (mult:SI (reg:SI 0 ax [orig:89 D.35024 ] [89])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:45 305 {*mulsi3_1}
     (nil))
(insn 168 84 85 12 (set (reg:SI 1 dx [orig:89 D.35024 ] [89])
        (reg:SI 0 ax [orig:89 D.35024 ] [89])) /home/kai/git_repos/obme/obme.cpp:45 90 {*movsi_internal}
     (nil))
(insn 85 168 86 12 (set (reg:SI 0 ax [132])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:45 90 {*movsi_internal}
     (nil))
(insn 86 85 87 12 (parallel [
            (set (reg:SI 0 ax [orig:90 D.35024 ] [90])
                (plus:SI (reg:SI 0 ax [132])
                    (reg:SI 1 dx [orig:89 D.35024 ] [89])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:45 217 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 1 dx [orig:89 D.35024 ] [89])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32]))
        (nil)))
(insn 87 86 88 12 (set (reg:DI 1 dx [orig:91 D.35025 ] [91])
        (sign_extend:DI (reg:SI 0 ax [orig:90 D.35024 ] [90]))) /home/kai/git_repos/obme/obme.cpp:44 142 {*extendsidi2_rex64}
     (nil))
(insn 88 87 179 12 (set (reg/f:DI 0 ax [133])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 ref+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:44 89 {*movdi_internal}
     (nil))
(insn 179 88 90 12 (set (reg/f:DI 4 si [orig:92 D.35026 ] [92])
        (plus:DI (reg:DI 1 dx [orig:91 D.35025 ] [91])
            (reg/f:DI 0 ax [133]))) /home/kai/git_repos/obme/obme.cpp:44 214 {*leadi}
     (nil))
(insn 90 179 91 12 (set (reg:SI 0 ax [134])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 center+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:44 90 {*movsi_internal}
     (nil))
(insn 91 90 92 12 (set (reg:DI 1 dx [orig:93 D.35025 ] [93])
        (sign_extend:DI (reg:SI 0 ax [134]))) /home/kai/git_repos/obme/obme.cpp:44 142 {*extendsidi2_rex64}
     (nil))
(insn 92 91 180 12 (set (reg/f:DI 0 ax [135])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 trg+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:44 89 {*movdi_internal}
     (nil))
(insn 180 92 94 12 (set (reg/f:DI 5 di [orig:94 D.35026 ] [94])
        (plus:DI (reg:DI 1 dx [orig:93 D.35025 ] [93])
            (reg/f:DI 0 ax [135]))) /home/kai/git_repos/obme/obme.cpp:44 214 {*leadi}
     (nil))
(insn 94 180 95 12 (set (reg:SI 1 dx [136])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [0 blocksize+0 S4 A64])) /home/kai/git_repos/obme/obme.cpp:44 90 {*movsi_internal}
     (nil))
(insn 95 94 96 12 (set (reg:SI 0 ax [137])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:44 90 {*movsi_internal}
     (nil))
(insn 96 95 97 12 (set (reg:SI 2 cx)
        (reg:SI 1 dx [136])) /home/kai/git_repos/obme/obme.cpp:44 90 {*movsi_internal}
     (nil))
(insn 97 96 100 12 (set (reg:SI 1 dx)
        (reg:SI 0 ax [137])) /home/kai/git_repos/obme/obme.cpp:44 90 {*movsi_internal}
     (nil))
(call_insn 100 97 102 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z7calcSADPcS_ii") [flags 0x3]  <function_decl 0x7f86e163cca8 calcSAD>) [0 calcSAD S1 A8])
            (const_int 0 [0]))) /home/kai/git_repos/obme/obme.cpp:44 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 102 100 103 12 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 cost+0 S4 A32])
        (reg:SI 0 ax [orig:95 D.35024 ] [95])) /home/kai/git_repos/obme/obme.cpp:47 90 {*movsi_internal}
     (nil))
(insn 103 102 104 12 (set (reg:SI 0 ax [138])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 cost+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:48 90 {*movsi_internal}
     (nil))
(insn 104 103 105 12 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 0 ax [138])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [0 mincost+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:48 7 {*cmpsi_1}
     (nil))
(jump_insn 105 104 106 12 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 117)
            (pc))) /home/kai/git_repos/obme/obme.cpp:48 612 {*jcc_1}
     (nil)
 -> 117)
;;  succ:       13 (FALLTHRU)
;;              15
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
(note 106 105 107 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 13 (set (reg:SI 0 ax [139])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:49 90 {*movsi_internal}
     (nil))
(insn 108 107 170 13 (parallel [
            (set (reg:SI 0 ax [orig:96 D.35024 ] [96])
                (mult:SI (reg:SI 0 ax [orig:96 D.35024 ] [96])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:49 305 {*mulsi3_1}
     (nil))
(insn 170 108 112 13 (set (reg:SI 1 dx [orig:96 D.35024 ] [96])
        (reg:SI 0 ax [orig:96 D.35024 ] [96])) /home/kai/git_repos/obme/obme.cpp:49 90 {*movsi_internal}
     (nil))
(insn 112 170 113 13 (set (reg:SI 0 ax [143])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:49 90 {*movsi_internal}
     (nil))
(insn 113 112 114 13 (parallel [
            (set (reg:SI 0 ax [142])
                (plus:SI (reg:SI 0 ax [143])
                    (reg:SI 1 dx [orig:96 D.35024 ] [96])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:49 217 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 1 dx [orig:96 D.35024 ] [96])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32]))
        (nil)))
(insn 114 113 115 13 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 loc+0 S4 A32])
        (reg:SI 0 ax [142])) /home/kai/git_repos/obme/obme.cpp:49 90 {*movsi_internal}
     (nil))
(insn 115 114 116 13 (set (reg:SI 0 ax [144])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 cost+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:50 90 {*movsi_internal}
     (nil))
(insn 116 115 161 13 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 mincost+0 S4 A32])
        (reg:SI 0 ax [144])) /home/kai/git_repos/obme/obme.cpp:50 90 {*movsi_internal}
     (nil))
(jump_insn 161 116 162 13 (set (pc)
        (label_ref 117)) 654 {jump}
     (nil)
 -> 117)
;;  succ:       15
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 162 161 164)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;;              11
;;              9
;;              8
;;              7
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 164 162 163 14 15 "" [5 uses])
(note 163 164 165 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 165 163 117 14 (const_int 0 [0]) /home/kai/git_repos/obme/obme.cpp:42 684 {nop}
     (nil))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13
;;              12
;;              14 [100.0%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 117 165 118 15 12 "" [2 uses])
(note 118 117 119 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 157 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:32 217 {*addsi_1}
     (nil))
(jump_insn 157 119 158 15 (set (pc)
        (label_ref 120)) /home/kai/git_repos/obme/obme.cpp:32 654 {jump}
     (nil)
 -> 120)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 158 157 123)
;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 123 158 124 16 9 "" [1 uses])
(note 124 123 125 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 159 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:30 217 {*addsi_1}
     (nil))
(jump_insn 159 125 160 16 (set (pc)
        (label_ref 126)) /home/kai/git_repos/obme/obme.cpp:30 654 {jump}
     (nil)
 -> 126)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 160 159 129)
;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
(code_label 129 160 130 17 8 "" [1 uses])
(note 130 129 131 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 175 17 (set (reg:SI 0 ax [146])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 loc+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:56 90 {*movsi_internal}
     (nil))
(insn 175 131 176 17 (parallel [
            (set (reg:SI 1 dx [147])
                (ashiftrt:SI (reg:SI 0 ax [146])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:56 538 {ashrsi3_cvt}
     (nil))
(insn 176 175 133 17 (parallel [
            (set (reg:SI 0 ax [148])
                (div:SI (reg:SI 0 ax [146])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (set (reg:SI 1 dx [147])
                (mod:SI (reg:SI 0 ax [146])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (use (reg:SI 1 dx [147]))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:56 344 {*divmodsi4_noext}
     (nil))
(insn 133 176 134 17 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32])
        (reg:SI 1 dx [147])) /home/kai/git_repos/obme/obme.cpp:56 90 {*movsi_internal}
     (nil))
(insn 134 133 177 17 (set (reg:SI 0 ax [152])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 loc+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:57 90 {*movsi_internal}
     (nil))
(insn 177 134 178 17 (parallel [
            (set (reg:SI 1 dx [151])
                (ashiftrt:SI (reg:SI 0 ax [152])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:57 538 {ashrsi3_cvt}
     (nil))
(insn 178 177 136 17 (parallel [
            (set (reg:SI 0 ax [150])
                (div:SI (reg:SI 0 ax [152])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (set (reg:SI 1 dx [151])
                (mod:SI (reg:SI 0 ax [152])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (use (reg:SI 1 dx [151]))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:57 344 {*divmodsi4_noext}
     (nil))
(insn 136 178 137 17 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])
        (reg:SI 0 ax [150])) /home/kai/git_repos/obme/obme.cpp:57 90 {*movsi_internal}
     (nil))
(insn 137 136 138 17 (set (reg/f:DI 0 ax [153])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 mv+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:58 89 {*movdi_internal}
     (nil))
(insn 138 137 139 17 (set (reg:SI 1 dx [154])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 cx+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:58 90 {*movsi_internal}
     (nil))
(insn 139 138 140 17 (set (mem/j:SI (reg/f:DI 0 ax [153]) [0 mv_46(D)->iCx+0 S4 A32])
        (reg:SI 1 dx [154])) /home/kai/git_repos/obme/obme.cpp:58 90 {*movsi_internal}
     (nil))
(insn 140 139 141 17 (set (reg/f:DI 0 ax [155])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 mv+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:59 89 {*movdi_internal}
     (nil))
(insn 141 140 142 17 (set (reg:SI 1 dx [156])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 cy+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:59 90 {*movsi_internal}
     (nil))
(insn 142 141 143 17 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [155])
                (const_int 4 [0x4])) [0 mv_46(D)->iCy+0 S4 A32])
        (reg:SI 1 dx [156])) /home/kai/git_repos/obme/obme.cpp:59 90 {*movsi_internal}
     (nil))
(insn 143 142 144 17 (set (reg:SI 0 ax [157])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:61 90 {*movsi_internal}
     (nil))
(insn 144 143 172 17 (parallel [
            (set (reg:SI 0 ax [orig:97 D.35024 ] [97])
                (minus:SI (reg:SI 0 ax [orig:97 D.35024 ] [97])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -16 [0xfffffffffffffff0])) [0 cx+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:61 260 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 cx+0 S4 A32]))
        (nil)))
(insn 172 144 145 17 (set (reg:SI 1 dx [orig:97 D.35024 ] [97])
        (reg:SI 0 ax [orig:97 D.35024 ] [97])) /home/kai/git_repos/obme/obme.cpp:61 90 {*movsi_internal}
     (nil))
(insn 145 172 146 17 (set (reg/f:DI 0 ax [158])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 mv+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:61 89 {*movdi_internal}
     (nil))
(insn 146 145 147 17 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [158])
                (const_int 8 [0x8])) [0 mv_46(D)->iMvx+0 S4 A32])
        (reg:SI 1 dx [orig:97 D.35024 ] [97])) /home/kai/git_repos/obme/obme.cpp:61 90 {*movsi_internal}
     (nil))
(insn 147 146 148 17 (set (reg:SI 0 ax [159])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:62 90 {*movsi_internal}
     (nil))
(insn 148 147 174 17 (parallel [
            (set (reg:SI 0 ax [orig:98 D.35024 ] [98])
                (minus:SI (reg:SI 0 ax [orig:98 D.35024 ] [98])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [0 cy+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:62 260 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [0 cy+0 S4 A32]))
        (nil)))
(insn 174 148 149 17 (set (reg:SI 1 dx [orig:98 D.35024 ] [98])
        (reg:SI 0 ax [orig:98 D.35024 ] [98])) /home/kai/git_repos/obme/obme.cpp:62 90 {*movsi_internal}
     (nil))
(insn 149 174 150 17 (set (reg/f:DI 0 ax [160])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 mv+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:62 89 {*movdi_internal}
     (nil))
(insn 150 149 151 17 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [160])
                (const_int 12 [0xc])) [0 mv_46(D)->iMvy+0 S4 A32])
        (reg:SI 1 dx [orig:98 D.35024 ] [98])) /home/kai/git_repos/obme/obme.cpp:62 90 {*movsi_internal}
     (nil))
(insn 151 150 152 17 (set (reg/f:DI 0 ax [161])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 mv+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:63 89 {*movdi_internal}
     (nil))
(insn 152 151 153 17 (set (reg:SI 1 dx [162])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 mincost+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:63 90 {*movsi_internal}
     (nil))
(insn 153 152 156 17 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [161])
                (const_int 16 [0x10])) [0 mv_46(D)->SAD+0 S4 A32])
        (reg:SI 1 dx [162])) /home/kai/git_repos/obme/obme.cpp:63 90 {*movsi_internal}
     (nil))
(insn 156 153 189 17 (const_int 0 [0]) /home/kai/git_repos/obme/obme.cpp:64 684 {nop}
     (nil))
(note 189 156 190 17 NOTE_INSN_EPILOGUE_BEG)
(insn/f 190 189 191 17 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 6 bp)
                    (const_int 8 [0x8])))
            (set (reg/f:DI 6 bp)
                (mem:DI (reg/f:DI 6 bp) [0  S8 A8]))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) /home/kai/git_repos/obme/obme.cpp:64 -1
     (expr_list:REG_CFA_DEF_CFA (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))
        (nil)))
(jump_insn 191 190 192 17 (simple_return) /home/kai/git_repos/obme/obme.cpp:64 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 192 191 166)
(note 166 192 0 NOTE_INSN_DELETED)

;; Function void obme(imgpel**, imgpel*, mvinfo*, int, int, int, int, int) (_Z4obmePPcS_P6mvinfoiiiii, funcdef_no=1386, decl_uid=33288, cgraph_uid=402, symbol_order=404)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 20 count 29 (  1.7)
scanning new insn with uid = 148.
scanning new insn with uid = 149.
scanning new insn with uid = 150.
scanning new insn with uid = 153.
scanning new insn with uid = 154.
verify found no changes in insn with uid = 66.
verify found no changes in insn with uid = 128.


try_optimize_cfg iteration 1

Merging block 14 into block 13...
changing bb of uid 126
  from 14 to 13
changing bb of uid 127
  from 14 to 13
Merged blocks 13 and 14.
Merged 13 and 14 without moving.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns


void obme(imgpel**, imgpel*, mvinfo*, int, int, int, int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8] 38[r9]
;;  ref usage 	r0={39d,36u} r1={14d,14u,6e} r2={4d,2u} r4={4d,2u} r5={6d,4u} r6={3d,75u} r7={7d,28u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={2e} r17={29d,5u} r18={2d} r19={2d} r20={1d,1u,6e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={4d,2u} r38={4d,2u} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} 
;;    total ref usage 436{251d,171u,14e} in 99{97 regular + 2 call} insns.
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 17 [flags]
(note 10 1 148 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 148 10 149 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg/f:DI 6 bp)) /home/kai/git_repos/obme/obme.cpp:68 -1
     (nil))
(insn/f 149 148 150 2 (set (reg/f:DI 6 bp)
        (reg/f:DI 7 sp)) /home/kai/git_repos/obme/obme.cpp:68 -1
     (nil))
(insn/f 150 149 151 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) /home/kai/git_repos/obme/obme.cpp:68 -1
     (nil))
(note 151 150 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 151 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 refFrame+0 S8 A64])
        (reg:DI 5 di [ refFrame ])) /home/kai/git_repos/obme/obme.cpp:68 89 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 currFrame+0 S8 A64])
        (reg:DI 4 si [ currFrame ])) /home/kai/git_repos/obme/obme.cpp:68 89 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [0 mvs+0 S8 A64])
        (reg:DI 1 dx [ mvs ])) /home/kai/git_repos/obme/obme.cpp:68 89 {*movdi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [0 nRefs+0 S4 A32])
        (reg:SI 2 cx [ nRefs ])) /home/kai/git_repos/obme/obme.cpp:68 90 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 width+0 S4 A32])
        (reg:SI 37 r8 [ width ])) /home/kai/git_repos/obme/obme.cpp:68 90 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -100 [0xffffffffffffff9c])) [0 height+0 S4 A32])
        (reg:SI 38 r9 [ height ])) /home/kai/git_repos/obme/obme.cpp:68 90 {*movsi_internal}
     (nil))
(note 8 7 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 8 12 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.35033+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (reg:DI 0 ax [135])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:68 986 {stack_tls_protect_set_di}
     (nil))
(insn 12 9 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 cnt+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:72 90 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S4 A32])
        (const_int 7 [0x7])) /home/kai/git_repos/obme/obme.cpp:73 90 {*movsi_internal}
     (nil))
(insn 14 13 120 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [0 x+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:76 90 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              12 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 120 14 15 3 23 "" [1 uses])
(note 15 120 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg:SI 0 ax [103])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 width+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:76 90 {*movsi_internal}
     (nil))
(insn 17 16 18 3 (parallel [
            (set (reg:SI 0 ax [orig:87 D.35027 ] [87])
                (minus:SI (reg:SI 0 ax [103])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int 16 [0x10])) [0 blocksize+0 S4 A64])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:76 260 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [0 width+0 S4 A32])
            (mem/c:SI (reg/f:DI 16 argp) [0 blocksize+0 S4 A64]))
        (nil)))
(insn 18 17 19 3 (parallel [
            (set (reg:SI 0 ax [orig:88 D.35027 ] [88])
                (plus:SI (reg:SI 0 ax [orig:87 D.35027 ] [87])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:76 217 {*addsi_1}
     (nil))
(insn 19 18 20 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:88 D.35027 ] [88])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [0 x+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:76 7 {*cmpsi_1}
     (nil))
(jump_insn 20 19 21 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 141)
            (pc))) /home/kai/git_repos/obme/obme.cpp:76 612 {*jcc_1}
     (nil)
 -> 141)
;;  succ:       13
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 113 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 y+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:77 90 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              11 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 113 22 23 5 22 "" [1 uses])
(note 23 113 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg:SI 0 ax [104])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -100 [0xffffffffffffff9c])) [0 height+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:77 90 {*movsi_internal}
     (nil))
(insn 25 24 26 5 (parallel [
            (set (reg:SI 0 ax [orig:89 D.35027 ] [89])
                (minus:SI (reg:SI 0 ax [104])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int 16 [0x10])) [0 blocksize+0 S4 A64])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:77 260 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -100 [0xffffffffffffff9c])) [0 height+0 S4 A32])
            (mem/c:SI (reg/f:DI 16 argp) [0 blocksize+0 S4 A64]))
        (nil)))
(insn 26 25 27 5 (parallel [
            (set (reg:SI 0 ax [orig:90 D.35027 ] [90])
                (plus:SI (reg:SI 0 ax [orig:89 D.35027 ] [89])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:77 217 {*addsi_1}
     (nil))
(insn 27 26 28 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:90 D.35027 ] [90])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -48 [0xffffffffffffffd0])) [0 y+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:77 7 {*cmpsi_1}
     (nil))
(jump_insn 28 27 29 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) /home/kai/git_repos/obme/obme.cpp:77 612 {*jcc_1}
     (nil)
 -> 116)
;;  succ:       12
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 6 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [0 sad+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) /home/kai/git_repos/obme/obme.cpp:78 90 {*movsi_internal}
     (nil))
(insn 31 30 105 6 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [0 i+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:79 90 {*movsi_internal}
     (nil))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              10 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 105 31 32 7 21 "" [1 uses])
(note 32 105 33 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 7 (set (reg:SI 0 ax [105])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:79 90 {*movsi_internal}
     (nil))
(insn 34 33 35 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [105])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -92 [0xffffffffffffffa4])) [0 nRefs+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:79 7 {*cmpsi_1}
     (nil))
(jump_insn 35 34 36 7 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 108)
            (pc))) /home/kai/git_repos/obme/obme.cpp:79 612 {*jcc_1}
     (nil)
 -> 108)
;;  succ:       11
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 36 35 37 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 8 (set (reg:SI 0 ax [106])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:80 90 {*movsi_internal}
     (nil))
(insn 38 37 145 8 (parallel [
            (set (reg:SI 0 ax [orig:91 D.35027 ] [91])
                (mult:SI (reg:SI 0 ax [orig:91 D.35027 ] [91])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -96 [0xffffffffffffffa0])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:80 305 {*mulsi3_1}
     (nil))
(insn 145 38 42 8 (set (reg:SI 1 dx [orig:91 D.35027 ] [91])
        (reg:SI 0 ax [orig:91 D.35027 ] [91])) /home/kai/git_repos/obme/obme.cpp:80 90 {*movsi_internal}
     (nil))
(insn 42 145 43 8 (set (reg:SI 0 ax [110])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:80 90 {*movsi_internal}
     (nil))
(insn 43 42 44 8 (parallel [
            (set (reg:SI 0 ax [109])
                (plus:SI (reg:SI 0 ax [110])
                    (reg:SI 1 dx [orig:91 D.35027 ] [91])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:80 217 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 1 dx [orig:91 D.35027 ] [91])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -52 [0xffffffffffffffcc])) [0 x+0 S4 A32]))
        (nil)))
(insn 44 43 45 8 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 idx+0 S4 A32])
        (reg:SI 0 ax [109])) /home/kai/git_repos/obme/obme.cpp:80 90 {*movsi_internal}
     (nil))
(insn 45 44 46 8 (set (reg:SI 0 ax [111])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:81 90 {*movsi_internal}
     (nil))
(insn 46 45 146 8 (set (reg:DI 0 ax [orig:92 D.35028 ] [92])
        (sign_extend:DI (reg:SI 0 ax [111]))) /home/kai/git_repos/obme/obme.cpp:81 142 {*extendsidi2_rex64}
     (nil))
(insn 146 46 48 8 (set (reg:DI 1 dx [orig:93 D.35028 ] [93])
        (mult:DI (reg:DI 0 ax [orig:92 D.35028 ] [92])
            (const_int 8 [0x8]))) /home/kai/git_repos/obme/obme.cpp:81 214 {*leadi}
     (nil))
(insn 48 146 49 8 (set (reg/f:DI 0 ax [112])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 refFrame+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:81 89 {*movdi_internal}
     (nil))
(insn 49 48 50 8 (parallel [
            (set (reg/f:DI 0 ax [orig:94 D.35029 ] [94])
                (plus:DI (reg/f:DI 0 ax [112])
                    (reg:DI 1 dx [orig:93 D.35028 ] [93])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:81 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -72 [0xffffffffffffffb8])) [0 refFrame+0 S8 A64])
            (reg:DI 1 dx [orig:93 D.35028 ] [93]))
        (nil)))
(insn 50 49 51 8 (set (reg/f:DI 4 si [orig:95 D.35030 ] [95])
        (mem/f:DI (reg/f:DI 0 ax [orig:94 D.35029 ] [94]) [0 *_32+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:81 89 {*movdi_internal}
     (nil))
(insn 51 50 52 8 (set (reg:SI 38 r9 [113])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 width+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:81 90 {*movsi_internal}
     (nil))
(insn 52 51 53 8 (set (reg:SI 37 r8 [114])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 idx+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:81 90 {*movsi_internal}
     (nil))
(insn 53 52 147 8 (set (reg:SI 2 cx [115])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:81 90 {*movsi_internal}
     (nil))
(insn 147 53 55 8 (set (reg:DI 1 dx [116])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -32 [0xffffffffffffffe0]))) /home/kai/git_repos/obme/obme.cpp:81 214 {*leadi}
     (nil))
(insn 55 147 56 8 (set (reg:DI 0 ax [117])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 currFrame+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:81 89 {*movdi_internal}
     (nil))
(insn 56 55 57 8 (set (reg:SI 5 di [118])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [0 blocksize+0 S4 A64])) /home/kai/git_repos/obme/obme.cpp:81 90 {*movsi_internal}
     (nil))
(insn 57 56 58 8 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 5 di [118])) /home/kai/git_repos/obme/obme.cpp:81 69 {*pushsi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 58 57 59 8 (set (reg:SI 5 di [119])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -100 [0xffffffffffffff9c])) [0 height+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:81 90 {*movsi_internal}
     (nil))
(insn 59 58 65 8 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 5 di [119])) /home/kai/git_repos/obme/obme.cpp:81 69 {*pushsi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 65 59 66 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [117])) /home/kai/git_repos/obme/obme.cpp:81 89 {*movdi_internal}
     (nil))
(call_insn 66 65 67 8 (call (mem:QI (symbol_ref:DI ("_Z2ESPcS_R6mvinfoiiiii") [flags 0x3]  <function_decl 0x7f86e163ce58 ES>) [0 ES S1 A8])
        (const_int 16 [0x10])) /home/kai/git_repos/obme/obme.cpp:81 660 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 67 66 68 8 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:81 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 68 67 69 8 (set (reg:SI 0 ax [orig:96 D.35031 ] [96])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 mv.SAD+0 S4 A64])) /home/kai/git_repos/obme/obme.cpp:82 90 {*movsi_internal}
     (nil))
(insn 69 68 70 8 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 0 ax [orig:96 D.35031 ] [96])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -60 [0xffffffffffffffc4])) [0 sad+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:82 7 {*cmpsi_1}
     (nil))
(jump_insn 70 69 71 8 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) /home/kai/git_repos/obme/obme.cpp:82 612 {*jcc_1}
     (nil)
 -> 102)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
(note 71 70 72 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 9 (set (reg:SI 0 ax [120])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 cnt+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:84 90 {*movsi_internal}
     (nil))
(insn 73 72 74 9 (set (reg:DI 1 dx [orig:97 D.35028 ] [97])
        (sign_extend:DI (reg:SI 0 ax [120]))) /home/kai/git_repos/obme/obme.cpp:84 142 {*extendsidi2_rex64}
     (nil))
(insn 74 73 75 9 (set (reg:DI 0 ax [121])
        (reg:DI 1 dx [orig:97 D.35028 ] [97])) /home/kai/git_repos/obme/obme.cpp:84 89 {*movdi_internal}
     (nil))
(insn 75 74 76 9 (parallel [
            (set (reg:DI 0 ax [121])
                (ashift:DI (reg:DI 0 ax [121])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:84 512 {*ashldi3_1}
     (nil))
(insn 76 75 77 9 (parallel [
            (set (reg:DI 0 ax [121])
                (plus:DI (reg:DI 0 ax [121])
                    (reg:DI 1 dx [orig:97 D.35028 ] [97])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:84 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:97 D.35028 ] [97])
            (const_int 3 [0x3]))
        (nil)))
(insn 77 76 79 9 (parallel [
            (set (reg:DI 0 ax [122])
                (ashift:DI (reg:DI 0 ax [121])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:84 512 {*ashldi3_1}
     (nil))
(insn 79 77 80 9 (set (reg:DI 1 dx [orig:98 D.35028 ] [98])
        (reg:DI 0 ax [121])) /home/kai/git_repos/obme/obme.cpp:84 89 {*movdi_internal}
     (nil))
(insn 80 79 81 9 (set (reg/f:DI 0 ax [123])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [0 mvs+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:84 89 {*movdi_internal}
     (nil))
(insn 81 80 82 9 (parallel [
            (set (reg/f:DI 0 ax [orig:99 D.35032 ] [99])
                (plus:DI (reg/f:DI 0 ax [123])
                    (reg:DI 1 dx [orig:98 D.35028 ] [98])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:84 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [0 mvs+0 S8 A64])
            (reg:DI 1 dx [orig:98 D.35028 ] [98]))
        (nil)))
(insn 82 81 83 9 (set (reg:DI 1 dx [124])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 mv+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:84 89 {*movdi_internal}
     (nil))
(insn 83 82 84 9 (set (mem:DI (reg/f:DI 0 ax [orig:99 D.35032 ] [99]) [0 *_40+0 S8 A32])
        (reg:DI 1 dx [124])) /home/kai/git_repos/obme/obme.cpp:84 89 {*movdi_internal}
     (nil))
(insn 84 83 85 9 (set (reg:DI 1 dx [125])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 mv+8 S8 A64])) /home/kai/git_repos/obme/obme.cpp:84 89 {*movdi_internal}
     (nil))
(insn 85 84 86 9 (set (mem:DI (plus:DI (reg/f:DI 0 ax [orig:99 D.35032 ] [99])
                (const_int 8 [0x8])) [0 *_40+8 S8 A32])
        (reg:DI 1 dx [125])) /home/kai/git_repos/obme/obme.cpp:84 89 {*movdi_internal}
     (nil))
(insn 86 85 87 9 (set (reg:DI 1 dx [126])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 mv+16 S8 A64])) /home/kai/git_repos/obme/obme.cpp:84 89 {*movdi_internal}
     (nil))
(insn 87 86 88 9 (set (mem:DI (plus:DI (reg/f:DI 0 ax [orig:99 D.35032 ] [99])
                (const_int 16 [0x10])) [0 *_40+16 S8 A32])
        (reg:DI 1 dx [126])) /home/kai/git_repos/obme/obme.cpp:84 89 {*movdi_internal}
     (nil))
(insn 88 87 89 9 (set (reg:SI 0 ax [127])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 cnt+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:85 90 {*movsi_internal}
     (nil))
(insn 89 88 90 9 (set (reg:DI 1 dx [orig:100 D.35028 ] [100])
        (sign_extend:DI (reg:SI 0 ax [127]))) /home/kai/git_repos/obme/obme.cpp:85 142 {*extendsidi2_rex64}
     (nil))
(insn 90 89 91 9 (set (reg:DI 0 ax [128])
        (reg:DI 1 dx [orig:100 D.35028 ] [100])) /home/kai/git_repos/obme/obme.cpp:85 89 {*movdi_internal}
     (nil))
(insn 91 90 92 9 (parallel [
            (set (reg:DI 0 ax [128])
                (ashift:DI (reg:DI 0 ax [128])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:85 512 {*ashldi3_1}
     (nil))
(insn 92 91 93 9 (parallel [
            (set (reg:DI 0 ax [128])
                (plus:DI (reg:DI 0 ax [128])
                    (reg:DI 1 dx [orig:100 D.35028 ] [100])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:85 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:100 D.35028 ] [100])
            (const_int 3 [0x3]))
        (nil)))
(insn 93 92 95 9 (parallel [
            (set (reg:DI 0 ax [129])
                (ashift:DI (reg:DI 0 ax [128])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:85 512 {*ashldi3_1}
     (nil))
(insn 95 93 96 9 (set (reg:DI 1 dx [orig:101 D.35028 ] [101])
        (reg:DI 0 ax [128])) /home/kai/git_repos/obme/obme.cpp:85 89 {*movdi_internal}
     (nil))
(insn 96 95 97 9 (set (reg/f:DI 0 ax [130])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [0 mvs+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:85 89 {*movdi_internal}
     (nil))
(insn 97 96 98 9 (parallel [
            (set (reg/f:DI 1 dx [orig:102 D.35032 ] [102])
                (plus:DI (reg:DI 1 dx [orig:101 D.35028 ] [101])
                    (reg/f:DI 0 ax [130])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:85 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [0 mvs+0 S8 A64])
            (reg:DI 1 dx [orig:101 D.35028 ] [101]))
        (nil)))
(insn 98 97 99 9 (set (reg:SI 0 ax [131])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:85 90 {*movsi_internal}
     (nil))
(insn 99 98 100 9 (set (mem/j:SI (plus:DI (reg/f:DI 1 dx [orig:102 D.35032 ] [102])
                (const_int 20 [0x14])) [0 _44->frame+0 S4 A32])
        (reg:SI 0 ax [131])) /home/kai/git_repos/obme/obme.cpp:85 90 {*movsi_internal}
     (nil))
(insn 100 99 101 9 (set (reg:SI 0 ax [132])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 mv.SAD+0 S4 A64])) /home/kai/git_repos/obme/obme.cpp:86 90 {*movsi_internal}
     (nil))
(insn 101 100 102 9 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [0 sad+0 S4 A32])
        (reg:SI 0 ax [132])) /home/kai/git_repos/obme/obme.cpp:86 90 {*movsi_internal}
     (nil))
;;  succ:       10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;;              9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 102 101 103 10 20 "" [1 uses])
(note 103 102 104 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 134 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -44 [0xffffffffffffffd4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -44 [0xffffffffffffffd4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:79 217 {*addsi_1}
     (nil))
(jump_insn 134 104 135 10 (set (pc)
        (label_ref 105)) /home/kai/git_repos/obme/obme.cpp:79 654 {jump}
     (nil)
 -> 105)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 135 134 108)
;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 108 135 109 11 19 "" [1 uses])
(note 109 108 110 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 11 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [0 cnt+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [0 cnt+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:89 217 {*addsi_1}
     (nil))
(insn 111 110 112 11 (set (reg:SI 0 ax [133])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [0 overlap+0 S4 A64])) /home/kai/git_repos/obme/obme.cpp:77 90 {*movsi_internal}
     (nil))
(insn 112 111 136 11 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -48 [0xffffffffffffffd0])) [0 y+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -48 [0xffffffffffffffd0])) [0 y+0 S4 A32])
                    (reg:SI 0 ax [133])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:77 217 {*addsi_1}
     (nil))
(jump_insn 136 112 137 11 (set (pc)
        (label_ref 113)) /home/kai/git_repos/obme/obme.cpp:77 654 {jump}
     (nil)
 -> 113)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 137 136 116)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 116 137 117 12 18 "" [1 uses])
(note 117 116 118 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 12 (set (reg:SI 0 ax [134])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [0 overlap+0 S4 A64])) /home/kai/git_repos/obme/obme.cpp:76 90 {*movsi_internal}
     (nil))
(insn 119 118 138 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [0 x+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [0 x+0 S4 A32])
                    (reg:SI 0 ax [134])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:76 217 {*addsi_1}
     (nil))
(jump_insn 138 119 139 12 (set (pc)
        (label_ref 120)) /home/kai/git_repos/obme/obme.cpp:76 654 {jump}
     (nil)
 -> 120)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 139 138 141)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 141 139 140 13 25 "" [1 uses])
(note 140 141 142 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 142 140 126 13 (const_int 0 [0]) /home/kai/git_repos/obme/obme.cpp:92 684 {nop}
     (nil))
(insn 126 142 127 13 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.35033+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (reg:DI 0 ax [136]))
        ]) /home/kai/git_repos/obme/obme.cpp:92 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 127 126 132 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 130)
            (pc))) /home/kai/git_repos/obme/obme.cpp:92 612 {*jcc_1}
     (nil)
 -> 130)
;;  succ:       16
;;              15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 132 127 128 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(call_insn 128 132 129 15 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f86e1400af8 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:92 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp]

(barrier 129 128 130)
;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 130 129 133 16 24 "" [1 uses])
(note 133 130 152 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(note 152 133 153 16 NOTE_INSN_EPILOGUE_BEG)
(insn/f 153 152 154 16 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 6 bp)
                    (const_int 8 [0x8])))
            (set (reg/f:DI 6 bp)
                (mem:DI (reg/f:DI 6 bp) [0  S8 A8]))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) /home/kai/git_repos/obme/obme.cpp:92 -1
     (expr_list:REG_CFA_DEF_CFA (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))
        (nil)))
(jump_insn 154 153 155 16 (simple_return) /home/kai/git_repos/obme/obme.cpp:92 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 155 154 143)
(note 143 155 0 NOTE_INSN_DELETED)

;; Function void __static_initialization_and_destruction_0(int, int) (_Z41__static_initialization_and_destruction_0ii, funcdef_no=1567, decl_uid=34841, cgraph_uid=583, symbol_order=609)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 7 (    1)
scanning new insn with uid = 27.
scanning new insn with uid = 28.
scanning new insn with uid = 29.
scanning new insn with uid = 32.
scanning new insn with uid = 33.
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 18.


try_optimize_cfg iteration 1

Merging block 6 into block 5...
changing bb of uid 31
  unscanned insn
changing bb of uid 32
  from 6 to 5
changing bb of uid 33
  from 6 to 5
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns


void __static_initialization_and_destruction_0(int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={4d,1u} r2={3d} r4={4d,2u} r5={5d,3u} r6={3d,12u} r7={4d,12u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={5d,2u} r18={2d} r19={2d} r20={1d,1u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} 
;;    total ref usage 207{174d,33u,0e} in 18{16 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(note 5 1 27 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 27 5 28 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg/f:DI 6 bp)) /home/kai/git_repos/obme/obme.cpp:92 -1
     (nil))
(insn/f 28 27 29 2 (set (reg/f:DI 6 bp)
        (reg/f:DI 7 sp)) /home/kai/git_repos/obme/obme.cpp:92 -1
     (nil))
(insn/f 29 28 30 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) /home/kai/git_repos/obme/obme.cpp:92 -1
     (nil))
(note 30 29 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 30 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 __initialize_p+0 S4 A32])
        (reg:SI 5 di [ __initialize_p ])) /home/kai/git_repos/obme/obme.cpp:92 90 {*movsi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 __priority+0 S4 A32])
        (reg:SI 4 si [ __priority ])) /home/kai/git_repos/obme/obme.cpp:92 90 {*movsi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [0 __initialize_p+0 S4 A32])
            (const_int 1 [0x1]))) /home/kai/git_repos/obme/obme.cpp:92 7 {*cmpsi_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 25)
            (pc))) /home/kai/git_repos/obme/obme.cpp:92 612 {*jcc_1}
     (nil)
 -> 25)
;;  succ:       3 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [0 __priority+0 S4 A32])
            (const_int 65535 [0xffff]))) /home/kai/git_repos/obme/obme.cpp:92 7 {*cmpsi_1}
     (nil))
(jump_insn 11 10 12 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 25)
            (pc))) /home/kai/git_repos/obme/obme.cpp:92 612 {*jcc_1}
     (nil)
 -> 25)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f86e161e480 __ioinit>)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(call_insn 14 13 15 4 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x7f86e1948e58 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/iostream:74 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 4 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7f86e13c4cf0 __dso_handle>)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(insn 16 15 17 4 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f86e161e480 __ioinit>)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7f86e195c0d8 __comp_dtor >)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(call_insn 18 17 25 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7f86e13ce000 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/iostream:74 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              2
;;              3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 25 18 23 5 28 "" [2 uses])
(note 23 25 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 31 5 (const_int 0 [0]) /home/kai/git_repos/obme/obme.cpp:92 684 {nop}
     (nil))
(note 31 24 32 5 NOTE_INSN_EPILOGUE_BEG)
(insn/f 32 31 33 5 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 6 bp)
                    (const_int 8 [0x8])))
            (set (reg/f:DI 6 bp)
                (mem:DI (reg/f:DI 6 bp) [0  S8 A8]))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) /home/kai/git_repos/obme/obme.cpp:92 -1
     (expr_list:REG_CFA_DEF_CFA (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))
        (nil)))
(jump_insn 33 32 34 5 (simple_return) /home/kai/git_repos/obme/obme.cpp:92 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 34 33 26)
(note 26 34 0 NOTE_INSN_DELETED)

;; Function (static initializers for /home/kai/git_repos/obme/obme.cpp) (_GLOBAL__sub_I__Z7calcSADPcS_ii, funcdef_no=1568, decl_uid=34847, cgraph_uid=584, symbol_order=731)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
scanning new insn with uid = 11.
scanning new insn with uid = 12.
scanning new insn with uid = 15.
scanning new insn with uid = 16.
verify found no changes in insn with uid = 7.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns


(static initializers for /home/kai/git_repos/obme/obme.cpp)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={3d,1u} r5={3d,1u} r6={3d,3u} r7={3d,6u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r20={1d,1u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} 
;;    total ref usage 108{96d,12u,0e} in 7{6 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 3 1 11 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 11 3 12 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg/f:DI 6 bp)) /home/kai/git_repos/obme/obme.cpp:92 -1
     (nil))
(insn/f 12 11 13 2 (set (reg/f:DI 6 bp)
        (reg/f:DI 7 sp)) /home/kai/git_repos/obme/obme.cpp:92 -1
     (nil))
(note 13 12 2 2 NOTE_INSN_PROLOGUE_END)
(note 2 13 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 4 si)
        (const_int 65535 [0xffff])) /home/kai/git_repos/obme/obme.cpp:92 90 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) /home/kai/git_repos/obme/obme.cpp:92 90 {*movsi_internal}
     (nil))
(call_insn 7 6 14 2 (call (mem:QI (symbol_ref:DI ("_Z41__static_initialization_and_destruction_0ii") [flags 0x3]  <function_decl 0x7f86e13c9d80 __static_initialization_and_destruction_0>) [0 __static_initialization_and_destruction_0 S1 A8])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:92 660 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(note 14 7 15 2 NOTE_INSN_EPILOGUE_BEG)
(insn/f 15 14 16 2 (set (reg/f:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) /home/kai/git_repos/obme/obme.cpp:92 -1
     (expr_list:REG_CFA_DEF_CFA (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))
        (nil)))
(jump_insn 16 15 17 2 (simple_return) /home/kai/git_repos/obme/obme.cpp:92 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 17 16 10)
(note 10 17 0 NOTE_INSN_DELETED)
