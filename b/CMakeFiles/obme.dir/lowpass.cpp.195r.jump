
;; Function void lowpassFilter(imgpel*, imgpel*, int, int, int) (_Z13lowpassFilterPcS_iii, funcdef_no=0, decl_uid=2339, cgraph_uid=0, symbol_order=0)


20 basic blocks, 27 edges.
basic block 0, loop depth 0, count 0, freq 0, maybe hot
 prev block (nil), next block 2, flags: (RTL)
 pred:      
 succ:       2 (FALLTHRU)

basic block 2, loop depth 0, count 0, freq 0, maybe hot
 prev block 0, next block 3, flags: (NEW, REACHABLE, RTL)
 pred:       ENTRY (FALLTHRU)
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 src+0 S8 A64])
        (reg:DI 5 di [ src ])) /home/kai/git_repos/obme/lowpass.cpp:6 89 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 dst+0 S8 A64])
        (reg:DI 4 si [ dst ])) /home/kai/git_repos/obme/lowpass.cpp:6 89 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 boxSize+0 S4 A32])
        (reg:SI 1 dx [ boxSize ])) /home/kai/git_repos/obme/lowpass.cpp:6 90 {*movsi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 width+0 S4 A32])
        (reg:SI 2 cx [ width ])) /home/kai/git_repos/obme/lowpass.cpp:6 90 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [0 height+0 S4 A32])
        (reg:SI 37 r8 [ height ])) /home/kai/git_repos/obme/lowpass.cpp:6 90 {*movsi_internal}
     (nil))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 boxSize+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:7 90 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (parallel [
            (set (reg:SI 104)
                (lshiftrt:SI (reg:SI 103)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:7 544 {*lshrsi3_1}
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:SI 105)
                (plus:SI (reg:SI 104)
                    (reg:SI 103)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:7 217 {*addsi_1}
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:SI 106)
                (ashiftrt:SI (reg:SI 105)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:7 545 {*ashrsi3_1}
     (expr_list:REG_EQUAL (div:SI (reg:SI 103)
            (const_int 2 [0x2]))
        (nil)))
(insn 14 13 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 left+0 S4 A32])
        (reg:SI 106)) /home/kai/git_repos/obme/lowpass.cpp:7 90 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:SI 107)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 left+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:8 90 {*movsi_internal}
     (nil))
(insn 16 15 20 2 (parallel [
            (set (reg:SI 87 [ D.2421 ])
                (plus:SI (reg:SI 107)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:8 217 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 left+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 20 16 21 2 (set (reg:SI 111)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 boxSize+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:8 90 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (parallel [
            (set (reg:SI 110)
                (minus:SI (reg:SI 111)
                    (reg:SI 87 [ D.2421 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:8 260 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -52 [0xffffffffffffffcc])) [0 boxSize+0 S4 A32])
            (reg:SI 87 [ D.2421 ]))
        (nil)))
(insn 22 21 23 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 right+0 S4 A32])
        (reg:SI 110)) /home/kai/git_repos/obme/lowpass.cpp:8 90 {*movsi_internal}
     (nil))
(insn 23 22 121 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/lowpass.cpp:10 90 {*movsi_internal}
     (nil))
 succ:       3 (FALLTHRU)

basic block 3, loop depth 1, count 0, freq 0, maybe hot
 prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
 pred:       2 (FALLTHRU)
             18 [100.0%]  (FALLTHRU)
(code_label 121 23 24 3 10 "" [0 uses])
(note 24 121 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 3 (set (reg:SI 112)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:10 90 {*movsi_internal}
     (nil))
(insn 26 25 27 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 112)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -60 [0xffffffffffffffc4])) [0 height+0 S4 A32]))) /home/kai/git_repos/obme/lowpass.cpp:10 7 {*cmpsi_1}
     (nil))
(jump_insn 27 26 28 3 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 126)
            (pc))) /home/kai/git_repos/obme/lowpass.cpp:10 612 {*jcc_1}
     (nil)
 -> 126)
 succ:       19
             4 (FALLTHRU)

basic block 4, loop depth 1, count 0, freq 0, maybe hot
 prev block 3, next block 5, flags: (NEW, REACHABLE, RTL)
 pred:       3 (FALLTHRU)
(note 28 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 115 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/lowpass.cpp:11 90 {*movsi_internal}
     (nil))
 succ:       5 (FALLTHRU)

basic block 5, loop depth 2, count 0, freq 0, maybe hot
 prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
 pred:       4 (FALLTHRU)
             17 [100.0%]  (FALLTHRU)
(code_label 115 29 30 5 9 "" [0 uses])
(note 30 115 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 5 (set (reg:SI 113)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:11 90 {*movsi_internal}
     (nil))
(insn 32 31 33 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 113)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [0 width+0 S4 A32]))) /home/kai/git_repos/obme/lowpass.cpp:11 7 {*cmpsi_1}
     (nil))
(jump_insn 33 32 34 5 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 118)
            (pc))) /home/kai/git_repos/obme/lowpass.cpp:11 612 {*jcc_1}
     (nil)
 -> 118)
 succ:       18
             6 (FALLTHRU)

basic block 6, loop depth 2, count 0, freq 0, maybe hot
 prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
 pred:       5 (FALLTHRU)
(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 sum+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/lowpass.cpp:12 90 {*movsi_internal}
     (nil))
(insn 36 35 40 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 total+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/lowpass.cpp:13 90 {*movsi_internal}
     (nil))
(insn 40 36 41 6 (set (reg:SI 117)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:16 90 {*movsi_internal}
     (nil))
(insn 41 40 42 6 (parallel [
            (set (reg:SI 116)
                (minus:SI (reg:SI 117)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 left+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:16 260 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 left+0 S4 A32]))
        (nil)))
(insn 42 41 97 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
        (reg:SI 116)) /home/kai/git_repos/obme/lowpass.cpp:16 90 {*movsi_internal}
     (nil))
 succ:       7 (FALLTHRU)

basic block 7, loop depth 3, count 0, freq 0, maybe hot
 prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
 pred:       6 (FALLTHRU)
             16 [100.0%]  (FALLTHRU)
(code_label 97 42 43 7 8 "" [0 uses])
(note 43 97 44 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 7 (set (reg:SI 118)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:16 90 {*movsi_internal}
     (nil))
(insn 45 44 46 7 (set (reg:SI 119)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 right+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:16 90 {*movsi_internal}
     (nil))
(insn 46 45 47 7 (parallel [
            (set (reg:SI 88 [ D.2421 ])
                (plus:SI (reg:SI 118)
                    (reg:SI 119)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:16 217 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 right+0 S4 A32]))
        (nil)))
(insn 47 46 48 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88 [ D.2421 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32]))) /home/kai/git_repos/obme/lowpass.cpp:16 7 {*cmpsi_1}
     (nil))
(jump_insn 48 47 49 7 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 100)
            (pc))) /home/kai/git_repos/obme/lowpass.cpp:16 612 {*jcc_1}
     (nil)
 -> 100)
 succ:       17
             8 (FALLTHRU)

basic block 8, loop depth 3, count 0, freq 0, maybe hot
 prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
 pred:       7 (FALLTHRU)
(note 49 48 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 53 49 54 8 (set (reg:SI 123)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:17 90 {*movsi_internal}
     (nil))
(insn 54 53 55 8 (parallel [
            (set (reg:SI 122)
                (minus:SI (reg:SI 123)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 left+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:17 260 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 left+0 S4 A32]))
        (nil)))
(insn 55 54 91 8 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (reg:SI 122)) /home/kai/git_repos/obme/lowpass.cpp:17 90 {*movsi_internal}
     (nil))
 succ:       9 (FALLTHRU)

basic block 9, loop depth 4, count 0, freq 0, maybe hot
 prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
 pred:       8 (FALLTHRU)
             15 [100.0%]  (FALLTHRU)
(code_label 91 55 56 9 7 "" [0 uses])
(note 56 91 57 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 9 (set (reg:SI 124)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:17 90 {*movsi_internal}
     (nil))
(insn 58 57 59 9 (set (reg:SI 125)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 right+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:17 90 {*movsi_internal}
     (nil))
(insn 59 58 60 9 (parallel [
            (set (reg:SI 89 [ D.2421 ])
                (plus:SI (reg:SI 124)
                    (reg:SI 125)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:17 217 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 right+0 S4 A32]))
        (nil)))
(insn 60 59 61 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 89 [ D.2421 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32]))) /home/kai/git_repos/obme/lowpass.cpp:17 7 {*cmpsi_1}
     (nil))
(jump_insn 61 60 62 9 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) /home/kai/git_repos/obme/lowpass.cpp:17 612 {*jcc_1}
     (nil)
 -> 94)
 succ:       16
             10 (FALLTHRU)

basic block 10, loop depth 4, count 0, freq 0, maybe hot
 prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
 pred:       9 (FALLTHRU)
(note 62 61 63 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 10 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 0 [0]))) /home/kai/git_repos/obme/lowpass.cpp:18 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 64 63 65 10 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) /home/kai/git_repos/obme/lowpass.cpp:18 612 {*jcc_1}
     (nil)
 -> 88)
 succ:       11 (FALLTHRU)
             15

basic block 11, loop depth 4, count 0, freq 0, maybe hot
 prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
 pred:       10 (FALLTHRU)
(note 65 64 66 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 11 (set (reg:SI 126)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:18 90 {*movsi_internal}
     (nil))
(insn 67 66 68 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 126)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [0 width+0 S4 A32]))) /home/kai/git_repos/obme/lowpass.cpp:18 7 {*cmpsi_1}
     (nil))
(jump_insn 68 67 69 11 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) /home/kai/git_repos/obme/lowpass.cpp:18 612 {*jcc_1}
     (nil)
 -> 88)
 succ:       12 (FALLTHRU)
             15

basic block 12, loop depth 4, count 0, freq 0, maybe hot
 prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
 pred:       11 (FALLTHRU)
(note 69 68 70 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 12 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
            (const_int 0 [0]))) /home/kai/git_repos/obme/lowpass.cpp:18 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 71 70 72 12 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) /home/kai/git_repos/obme/lowpass.cpp:18 612 {*jcc_1}
     (nil)
 -> 88)
 succ:       13 (FALLTHRU)
             15

basic block 13, loop depth 4, count 0, freq 0, maybe hot
 prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
 pred:       12 (FALLTHRU)
(note 72 71 73 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 13 (set (reg:SI 127)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:19 90 {*movsi_internal}
     (nil))
(insn 74 73 75 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 127)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -60 [0xffffffffffffffc4])) [0 height+0 S4 A32]))) /home/kai/git_repos/obme/lowpass.cpp:19 7 {*cmpsi_1}
     (nil))
(jump_insn 75 74 76 13 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) /home/kai/git_repos/obme/lowpass.cpp:19 612 {*jcc_1}
     (nil)
 -> 88)
 succ:       14 (FALLTHRU)
             15

basic block 14, loop depth 4, count 0, freq 0, maybe hot
 prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
 pred:       13 (FALLTHRU)
(note 76 75 77 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 14 (set (reg:SI 128)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:20 90 {*movsi_internal}
     (nil))
(insn 78 77 79 14 (parallel [
            (set (reg:SI 90 [ D.2421 ])
                (mult:SI (reg:SI 128)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -56 [0xffffffffffffffc8])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:20 305 {*mulsi3_1}
     (nil))
(insn 79 78 80 14 (set (reg:SI 129)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:20 90 {*movsi_internal}
     (nil))
(insn 80 79 81 14 (parallel [
            (set (reg:SI 91 [ D.2421 ])
                (plus:SI (reg:SI 90 [ D.2421 ])
                    (reg:SI 129)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:20 217 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 90 [ D.2421 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32]))
        (nil)))
(insn 81 80 82 14 (set (reg:DI 92 [ D.2422 ])
        (sign_extend:DI (reg:SI 91 [ D.2421 ]))) /home/kai/git_repos/obme/lowpass.cpp:20 142 {*extendsidi2_rex64}
     (nil))
(insn 82 81 83 14 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 src+0 S8 A64])) /home/kai/git_repos/obme/lowpass.cpp:20 89 {*movdi_internal}
     (nil))
(insn 83 82 84 14 (parallel [
            (set (reg/f:DI 93 [ D.2423 ])
                (plus:DI (reg:DI 92 [ D.2422 ])
                    (reg/f:DI 130)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:20 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [0 src+0 S8 A64])
            (reg:DI 92 [ D.2422 ]))
        (nil)))
(insn 84 83 85 14 (set (reg:QI 94 [ D.2424 ])
        (mem:QI (reg/f:DI 93 [ D.2423 ]) [0 *_32+0 S1 A8])) /home/kai/git_repos/obme/lowpass.cpp:20 93 {*movqi_internal}
     (nil))
(insn 85 84 86 14 (set (reg:SI 95 [ D.2421 ])
        (sign_extend:SI (reg:QI 94 [ D.2424 ]))) /home/kai/git_repos/obme/lowpass.cpp:20 148 {extendqisi2}
     (nil))
(insn 86 85 87 14 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -24 [0xffffffffffffffe8])) [0 sum+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 sum+0 S4 A32])
                    (reg:SI 95 [ D.2421 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:20 217 {*addsi_1}
     (nil))
(insn 87 86 88 14 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -20 [0xffffffffffffffec])) [0 total+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [0 total+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:21 217 {*addsi_1}
     (nil))
 succ:       15 (FALLTHRU)

basic block 15, loop depth 4, count 0, freq 0, maybe hot
 prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
 pred:       10
             11
             12
             13
             14 (FALLTHRU)
(code_label 88 87 89 15 6 "" [4 uses])
(note 89 88 90 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 94 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:17 217 {*addsi_1}
     (nil))
 succ:       9 [100.0%]  (FALLTHRU)

basic block 16, loop depth 3, count 0, freq 0, maybe hot
 prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
 pred:       9
(code_label 94 90 95 16 5 "" [1 uses])
(note 95 94 96 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 100 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:16 217 {*addsi_1}
     (nil))
 succ:       7 [100.0%]  (FALLTHRU)

basic block 17, loop depth 2, count 0, freq 0, maybe hot
 prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
 pred:       7
(code_label 100 96 101 17 4 "" [1 uses])
(note 101 100 102 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 17 (set (reg:SI 131)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:24 90 {*movsi_internal}
     (nil))
(insn 103 102 104 17 (parallel [
            (set (reg:SI 96 [ D.2421 ])
                (mult:SI (reg:SI 131)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -56 [0xffffffffffffffc8])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:24 305 {*mulsi3_1}
     (nil))
(insn 104 103 105 17 (set (reg:SI 132)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:24 90 {*movsi_internal}
     (nil))
(insn 105 104 106 17 (parallel [
            (set (reg:SI 97 [ D.2421 ])
                (plus:SI (reg:SI 96 [ D.2421 ])
                    (reg:SI 132)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:24 217 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 96 [ D.2421 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32]))
        (nil)))
(insn 106 105 107 17 (set (reg:DI 98 [ D.2422 ])
        (sign_extend:DI (reg:SI 97 [ D.2421 ]))) /home/kai/git_repos/obme/lowpass.cpp:24 142 {*extendsidi2_rex64}
     (nil))
(insn 107 106 108 17 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 dst+0 S8 A64])) /home/kai/git_repos/obme/lowpass.cpp:24 89 {*movdi_internal}
     (nil))
(insn 108 107 109 17 (parallel [
            (set (reg/f:DI 99 [ D.2423 ])
                (plus:DI (reg:DI 98 [ D.2422 ])
                    (reg/f:DI 133)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:24 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [0 dst+0 S8 A64])
            (reg:DI 98 [ D.2422 ]))
        (nil)))
(insn 109 108 110 17 (set (reg:SI 136)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 sum+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:24 90 {*movsi_internal}
     (nil))
(insn 110 109 111 17 (parallel [
            (set (reg:SI 134)
                (div:SI (reg:SI 136)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [0 total+0 S4 A32])))
            (set (reg:SI 135)
                (mod:SI (reg:SI 136)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [0 total+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:24 341 {*divmodsi4}
     (nil))
(insn 111 110 112 17 (set (reg:SI 100 [ D.2421 ])
        (reg:SI 134)) /home/kai/git_repos/obme/lowpass.cpp:24 90 {*movsi_internal}
     (nil))
(insn 112 111 113 17 (set (reg:QI 101 [ D.2424 ])
        (subreg:QI (reg:SI 100 [ D.2421 ]) 0)) /home/kai/git_repos/obme/lowpass.cpp:24 93 {*movqi_internal}
     (nil))
(insn 113 112 114 17 (set (mem:QI (reg/f:DI 99 [ D.2423 ]) [0 *_43+0 S1 A8])
        (reg:QI 101 [ D.2424 ])) /home/kai/git_repos/obme/lowpass.cpp:24 93 {*movqi_internal}
     (nil))
(insn 114 113 118 17 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:11 217 {*addsi_1}
     (nil))
 succ:       5 [100.0%]  (FALLTHRU)

basic block 18, loop depth 1, count 0, freq 0, maybe hot
 prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
 pred:       5
(code_label 118 114 119 18 3 "" [1 uses])
(note 119 118 120 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 126 18 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:10 217 {*addsi_1}
     (nil))
 succ:       3 [100.0%]  (FALLTHRU)

basic block 19, loop depth 0, count 0, freq 0, maybe hot
 prev block 18, next block 1, flags: (NEW, REACHABLE, RTL)
 pred:       3
(code_label 126 120 127 19 1 "" [1 uses])
(note 127 126 0 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
 succ:       EXIT [100.0%]  (FALLTHRU)

basic block 1, loop depth 0, count 0, freq 0, maybe hot
 prev block 19, next block (nil), flags: (REACHABLE, RTL)
 pred:       19 [100.0%]  (FALLTHRU)
 succ:      




try_optimize_cfg iteration 1

;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 src+0 S8 A64])
        (reg:DI 5 di [ src ])) /home/kai/git_repos/obme/lowpass.cpp:6 89 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 dst+0 S8 A64])
        (reg:DI 4 si [ dst ])) /home/kai/git_repos/obme/lowpass.cpp:6 89 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 boxSize+0 S4 A32])
        (reg:SI 1 dx [ boxSize ])) /home/kai/git_repos/obme/lowpass.cpp:6 90 {*movsi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 width+0 S4 A32])
        (reg:SI 2 cx [ width ])) /home/kai/git_repos/obme/lowpass.cpp:6 90 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [0 height+0 S4 A32])
        (reg:SI 37 r8 [ height ])) /home/kai/git_repos/obme/lowpass.cpp:6 90 {*movsi_internal}
     (nil))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 boxSize+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:7 90 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (parallel [
            (set (reg:SI 104)
                (lshiftrt:SI (reg:SI 103)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:7 544 {*lshrsi3_1}
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:SI 105)
                (plus:SI (reg:SI 104)
                    (reg:SI 103)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:7 217 {*addsi_1}
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:SI 106)
                (ashiftrt:SI (reg:SI 105)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:7 545 {*ashrsi3_1}
     (expr_list:REG_EQUAL (div:SI (reg:SI 103)
            (const_int 2 [0x2]))
        (nil)))
(insn 14 13 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 left+0 S4 A32])
        (reg:SI 106)) /home/kai/git_repos/obme/lowpass.cpp:7 90 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:SI 107)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 left+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:8 90 {*movsi_internal}
     (nil))
(insn 16 15 20 2 (parallel [
            (set (reg:SI 87 [ D.2421 ])
                (plus:SI (reg:SI 107)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:8 217 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 left+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 20 16 21 2 (set (reg:SI 111)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 boxSize+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:8 90 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (parallel [
            (set (reg:SI 110)
                (minus:SI (reg:SI 111)
                    (reg:SI 87 [ D.2421 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:8 260 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -52 [0xffffffffffffffcc])) [0 boxSize+0 S4 A32])
            (reg:SI 87 [ D.2421 ]))
        (nil)))
(insn 22 21 23 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 right+0 S4 A32])
        (reg:SI 110)) /home/kai/git_repos/obme/lowpass.cpp:8 90 {*movsi_internal}
     (nil))
(insn 23 22 121 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/lowpass.cpp:10 90 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)

;; basic block 3, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              18 [100.0%]  (FALLTHRU)
(code_label 121 23 24 3 10 "" [0 uses])
(note 24 121 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 3 (set (reg:SI 112)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:10 90 {*movsi_internal}
     (nil))
(insn 26 25 27 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 112)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -60 [0xffffffffffffffc4])) [0 height+0 S4 A32]))) /home/kai/git_repos/obme/lowpass.cpp:10 7 {*cmpsi_1}
     (nil))
(jump_insn 27 26 28 3 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 126)
            (pc))) /home/kai/git_repos/obme/lowpass.cpp:10 612 {*jcc_1}
     (nil)
 -> 126)
;;  succ:       19
;;              4 (FALLTHRU)

;; basic block 4, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       3 (FALLTHRU)
(note 28 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 115 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/lowpass.cpp:11 90 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
;;              17 [100.0%]  (FALLTHRU)
(code_label 115 29 30 5 9 "" [0 uses])
(note 30 115 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 5 (set (reg:SI 113)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:11 90 {*movsi_internal}
     (nil))
(insn 32 31 33 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 113)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [0 width+0 S4 A32]))) /home/kai/git_repos/obme/lowpass.cpp:11 7 {*cmpsi_1}
     (nil))
(jump_insn 33 32 34 5 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 118)
            (pc))) /home/kai/git_repos/obme/lowpass.cpp:11 612 {*jcc_1}
     (nil)
 -> 118)
;;  succ:       18
;;              6 (FALLTHRU)

;; basic block 6, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 sum+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/lowpass.cpp:12 90 {*movsi_internal}
     (nil))
(insn 36 35 40 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 total+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/lowpass.cpp:13 90 {*movsi_internal}
     (nil))
(insn 40 36 41 6 (set (reg:SI 117)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:16 90 {*movsi_internal}
     (nil))
(insn 41 40 42 6 (parallel [
            (set (reg:SI 116)
                (minus:SI (reg:SI 117)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 left+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:16 260 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 left+0 S4 A32]))
        (nil)))
(insn 42 41 97 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
        (reg:SI 116)) /home/kai/git_repos/obme/lowpass.cpp:16 90 {*movsi_internal}
     (nil))
;;  succ:       7 (FALLTHRU)

;; basic block 7, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
;;              16 [100.0%]  (FALLTHRU)
(code_label 97 42 43 7 8 "" [0 uses])
(note 43 97 44 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 7 (set (reg:SI 118)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:16 90 {*movsi_internal}
     (nil))
(insn 45 44 46 7 (set (reg:SI 119)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 right+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:16 90 {*movsi_internal}
     (nil))
(insn 46 45 47 7 (parallel [
            (set (reg:SI 88 [ D.2421 ])
                (plus:SI (reg:SI 118)
                    (reg:SI 119)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:16 217 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 right+0 S4 A32]))
        (nil)))
(insn 47 46 48 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88 [ D.2421 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32]))) /home/kai/git_repos/obme/lowpass.cpp:16 7 {*cmpsi_1}
     (nil))
(jump_insn 48 47 49 7 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 100)
            (pc))) /home/kai/git_repos/obme/lowpass.cpp:16 612 {*jcc_1}
     (nil)
 -> 100)
;;  succ:       17
;;              8 (FALLTHRU)

;; basic block 8, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 49 48 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 53 49 54 8 (set (reg:SI 123)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:17 90 {*movsi_internal}
     (nil))
(insn 54 53 55 8 (parallel [
            (set (reg:SI 122)
                (minus:SI (reg:SI 123)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 left+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:17 260 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 left+0 S4 A32]))
        (nil)))
(insn 55 54 91 8 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (reg:SI 122)) /home/kai/git_repos/obme/lowpass.cpp:17 90 {*movsi_internal}
     (nil))
;;  succ:       9 (FALLTHRU)

;; basic block 9, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
;;              15 [100.0%]  (FALLTHRU)
(code_label 91 55 56 9 7 "" [0 uses])
(note 56 91 57 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 9 (set (reg:SI 124)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:17 90 {*movsi_internal}
     (nil))
(insn 58 57 59 9 (set (reg:SI 125)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 right+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:17 90 {*movsi_internal}
     (nil))
(insn 59 58 60 9 (parallel [
            (set (reg:SI 89 [ D.2421 ])
                (plus:SI (reg:SI 124)
                    (reg:SI 125)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:17 217 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 right+0 S4 A32]))
        (nil)))
(insn 60 59 61 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 89 [ D.2421 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32]))) /home/kai/git_repos/obme/lowpass.cpp:17 7 {*cmpsi_1}
     (nil))
(jump_insn 61 60 62 9 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) /home/kai/git_repos/obme/lowpass.cpp:17 612 {*jcc_1}
     (nil)
 -> 94)
;;  succ:       16
;;              10 (FALLTHRU)

;; basic block 10, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 62 61 63 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 10 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 0 [0]))) /home/kai/git_repos/obme/lowpass.cpp:18 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 64 63 65 10 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) /home/kai/git_repos/obme/lowpass.cpp:18 612 {*jcc_1}
     (nil)
 -> 88)
;;  succ:       11 (FALLTHRU)
;;              15

;; basic block 11, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 (FALLTHRU)
(note 65 64 66 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 11 (set (reg:SI 126)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:18 90 {*movsi_internal}
     (nil))
(insn 67 66 68 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 126)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [0 width+0 S4 A32]))) /home/kai/git_repos/obme/lowpass.cpp:18 7 {*cmpsi_1}
     (nil))
(jump_insn 68 67 69 11 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) /home/kai/git_repos/obme/lowpass.cpp:18 612 {*jcc_1}
     (nil)
 -> 88)
;;  succ:       12 (FALLTHRU)
;;              15

;; basic block 12, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
(note 69 68 70 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 12 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
            (const_int 0 [0]))) /home/kai/git_repos/obme/lowpass.cpp:18 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 71 70 72 12 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) /home/kai/git_repos/obme/lowpass.cpp:18 612 {*jcc_1}
     (nil)
 -> 88)
;;  succ:       13 (FALLTHRU)
;;              15

;; basic block 13, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 (FALLTHRU)
(note 72 71 73 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 13 (set (reg:SI 127)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:19 90 {*movsi_internal}
     (nil))
(insn 74 73 75 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 127)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -60 [0xffffffffffffffc4])) [0 height+0 S4 A32]))) /home/kai/git_repos/obme/lowpass.cpp:19 7 {*cmpsi_1}
     (nil))
(jump_insn 75 74 76 13 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) /home/kai/git_repos/obme/lowpass.cpp:19 612 {*jcc_1}
     (nil)
 -> 88)
;;  succ:       14 (FALLTHRU)
;;              15

;; basic block 14, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       13 (FALLTHRU)
(note 76 75 77 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 14 (set (reg:SI 128)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:20 90 {*movsi_internal}
     (nil))
(insn 78 77 79 14 (parallel [
            (set (reg:SI 90 [ D.2421 ])
                (mult:SI (reg:SI 128)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -56 [0xffffffffffffffc8])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:20 305 {*mulsi3_1}
     (nil))
(insn 79 78 80 14 (set (reg:SI 129)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:20 90 {*movsi_internal}
     (nil))
(insn 80 79 81 14 (parallel [
            (set (reg:SI 91 [ D.2421 ])
                (plus:SI (reg:SI 90 [ D.2421 ])
                    (reg:SI 129)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:20 217 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 90 [ D.2421 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32]))
        (nil)))
(insn 81 80 82 14 (set (reg:DI 92 [ D.2422 ])
        (sign_extend:DI (reg:SI 91 [ D.2421 ]))) /home/kai/git_repos/obme/lowpass.cpp:20 142 {*extendsidi2_rex64}
     (nil))
(insn 82 81 83 14 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 src+0 S8 A64])) /home/kai/git_repos/obme/lowpass.cpp:20 89 {*movdi_internal}
     (nil))
(insn 83 82 84 14 (parallel [
            (set (reg/f:DI 93 [ D.2423 ])
                (plus:DI (reg:DI 92 [ D.2422 ])
                    (reg/f:DI 130)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:20 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [0 src+0 S8 A64])
            (reg:DI 92 [ D.2422 ]))
        (nil)))
(insn 84 83 85 14 (set (reg:QI 94 [ D.2424 ])
        (mem:QI (reg/f:DI 93 [ D.2423 ]) [0 *_32+0 S1 A8])) /home/kai/git_repos/obme/lowpass.cpp:20 93 {*movqi_internal}
     (nil))
(insn 85 84 86 14 (set (reg:SI 95 [ D.2421 ])
        (sign_extend:SI (reg:QI 94 [ D.2424 ]))) /home/kai/git_repos/obme/lowpass.cpp:20 148 {extendqisi2}
     (nil))
(insn 86 85 87 14 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -24 [0xffffffffffffffe8])) [0 sum+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 sum+0 S4 A32])
                    (reg:SI 95 [ D.2421 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:20 217 {*addsi_1}
     (nil))
(insn 87 86 88 14 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -20 [0xffffffffffffffec])) [0 total+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [0 total+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:21 217 {*addsi_1}
     (nil))
;;  succ:       15 (FALLTHRU)

;; basic block 15, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       10
;;              11
;;              12
;;              13
;;              14 (FALLTHRU)
(code_label 88 87 89 15 6 "" [4 uses])
(note 89 88 90 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 94 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:17 217 {*addsi_1}
     (nil))
;;  succ:       9 [100.0%]  (FALLTHRU)

;; basic block 16, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
(code_label 94 90 95 16 5 "" [1 uses])
(note 95 94 96 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 100 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:16 217 {*addsi_1}
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)

;; basic block 17, loop depth 2, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 100 96 101 17 4 "" [1 uses])
(note 101 100 102 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 17 (set (reg:SI 131)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:24 90 {*movsi_internal}
     (nil))
(insn 103 102 104 17 (parallel [
            (set (reg:SI 96 [ D.2421 ])
                (mult:SI (reg:SI 131)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -56 [0xffffffffffffffc8])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:24 305 {*mulsi3_1}
     (nil))
(insn 104 103 105 17 (set (reg:SI 132)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:24 90 {*movsi_internal}
     (nil))
(insn 105 104 106 17 (parallel [
            (set (reg:SI 97 [ D.2421 ])
                (plus:SI (reg:SI 96 [ D.2421 ])
                    (reg:SI 132)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:24 217 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 96 [ D.2421 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32]))
        (nil)))
(insn 106 105 107 17 (set (reg:DI 98 [ D.2422 ])
        (sign_extend:DI (reg:SI 97 [ D.2421 ]))) /home/kai/git_repos/obme/lowpass.cpp:24 142 {*extendsidi2_rex64}
     (nil))
(insn 107 106 108 17 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 dst+0 S8 A64])) /home/kai/git_repos/obme/lowpass.cpp:24 89 {*movdi_internal}
     (nil))
(insn 108 107 109 17 (parallel [
            (set (reg/f:DI 99 [ D.2423 ])
                (plus:DI (reg:DI 98 [ D.2422 ])
                    (reg/f:DI 133)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:24 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [0 dst+0 S8 A64])
            (reg:DI 98 [ D.2422 ]))
        (nil)))
(insn 109 108 110 17 (set (reg:SI 136)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 sum+0 S4 A32])) /home/kai/git_repos/obme/lowpass.cpp:24 90 {*movsi_internal}
     (nil))
(insn 110 109 111 17 (parallel [
            (set (reg:SI 134)
                (div:SI (reg:SI 136)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [0 total+0 S4 A32])))
            (set (reg:SI 135)
                (mod:SI (reg:SI 136)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [0 total+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:24 341 {*divmodsi4}
     (nil))
(insn 111 110 112 17 (set (reg:SI 100 [ D.2421 ])
        (reg:SI 134)) /home/kai/git_repos/obme/lowpass.cpp:24 90 {*movsi_internal}
     (nil))
(insn 112 111 113 17 (set (reg:QI 101 [ D.2424 ])
        (subreg:QI (reg:SI 100 [ D.2421 ]) 0)) /home/kai/git_repos/obme/lowpass.cpp:24 93 {*movqi_internal}
     (nil))
(insn 113 112 114 17 (set (mem:QI (reg/f:DI 99 [ D.2423 ]) [0 *_43+0 S1 A8])
        (reg:QI 101 [ D.2424 ])) /home/kai/git_repos/obme/lowpass.cpp:24 93 {*movqi_internal}
     (nil))
(insn 114 113 118 17 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -28 [0xffffffffffffffe4])) [0 x+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:11 217 {*addsi_1}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)

;; basic block 18, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 118 114 119 18 3 "" [1 uses])
(note 119 118 120 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 126 18 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -32 [0xffffffffffffffe0])) [0 y+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/lowpass.cpp:10 217 {*addsi_1}
     (nil))
;;  succ:       3 [100.0%]  (FALLTHRU)

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       3
(code_label 126 120 127 19 1 "" [1 uses])
(note 127 126 0 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)

