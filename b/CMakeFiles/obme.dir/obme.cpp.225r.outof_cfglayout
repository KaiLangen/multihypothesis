
;; Function int calcSAD(imgpel*, imgpel*, int, int) (_Z7calcSADPcS_ii, funcdef_no=1384, decl_uid=33301, cgraph_uid=400, symbol_order=402)

Reordered sequence:
 2 bb 2  [0]
 3 bb 3  [0]
 4 bb 4  [0]
 5 bb 5  [0]
 6 bb 6  [0]
 7 bb 7  [0]
 8 bb 8  [0]
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 blk1+0 S8 A64])
        (reg:DI 5 di [ blk1 ])) /home/kai/git_repos/obme/obme.cpp:9 89 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 blk2+0 S8 A64])
        (reg:DI 4 si [ blk2 ])) /home/kai/git_repos/obme/obme.cpp:9 89 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 width+0 S4 A32])
        (reg:SI 1 dx [ width ])) /home/kai/git_repos/obme/obme.cpp:9 90 {*movsi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 blocksize+0 S4 A32])
        (reg:SI 2 cx [ blocksize ])) /home/kai/git_repos/obme/obme.cpp:9 90 {*movsi_internal}
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 sad+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:10 90 {*movsi_internal}
     (nil))
(insn 10 9 56 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 y+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:11 90 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
;;              7 [100.0%] 
(code_label 56 10 11 3 5 "" [1 uses])
(note 11 56 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:11 90 {*movsi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 103)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [0 blocksize+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:11 7 {*cmpsi_1}
     (nil))
(jump_insn 14 13 15 3 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) /home/kai/git_repos/obme/obme.cpp:11 612 {*jcc_1}
     (nil)
 -> 59)
;;  succ:       8
;;              4 (FALLTHRU)

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       3 (FALLTHRU)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 50 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:12 90 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
;;              6 [100.0%] 
(code_label 50 16 17 5 4 "" [1 uses])
(note 17 50 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 5 (set (reg:SI 104)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:12 90 {*movsi_internal}
     (nil))
(insn 19 18 20 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 104)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [0 blocksize+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:12 7 {*cmpsi_1}
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) /home/kai/git_repos/obme/obme.cpp:12 612 {*jcc_1}
     (nil)
 -> 53)
;;  succ:       7
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg:SI 105)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:14 90 {*movsi_internal}
     (nil))
(insn 23 22 24 6 (set (reg:DI 87 [ D.35021 ])
        (sign_extend:DI (reg:SI 105))) /home/kai/git_repos/obme/obme.cpp:14 142 {*extendsidi2_rex64}
     (nil))
(insn 24 23 25 6 (set (reg:SI 106)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:14 90 {*movsi_internal}
     (nil))
(insn 25 24 26 6 (parallel [
            (set (reg:SI 88 [ D.35022 ])
                (mult:SI (reg:SI 106)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -36 [0xffffffffffffffdc])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:14 305 {*mulsi3_1}
     (nil))
(insn 26 25 27 6 (set (reg:DI 89 [ D.35021 ])
        (sign_extend:DI (reg:SI 88 [ D.35022 ]))) /home/kai/git_repos/obme/obme.cpp:14 142 {*extendsidi2_rex64}
     (nil))
(insn 27 26 28 6 (parallel [
            (set (reg:DI 90 [ D.35021 ])
                (plus:DI (reg:DI 87 [ D.35021 ])
                    (reg:DI 89 [ D.35021 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:14 218 {*adddi_1}
     (nil))
(insn 28 27 29 6 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 blk1+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:14 89 {*movdi_internal}
     (nil))
(insn 29 28 30 6 (parallel [
            (set (reg/f:DI 91 [ D.35023 ])
                (plus:DI (reg:DI 90 [ D.35021 ])
                    (reg/f:DI 107)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:14 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [0 blk1+0 S8 A64])
            (reg:DI 90 [ D.35021 ]))
        (nil)))
(insn 30 29 31 6 (set (reg:QI 108)
        (mem:QI (reg/f:DI 91 [ D.35023 ]) [0 *_15+0 S1 A8])) /home/kai/git_repos/obme/obme.cpp:14 93 {*movqi_internal}
     (nil))
(insn 31 30 32 6 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -14 [0xfffffffffffffff2])) [0 pel1+0 S1 A8])
        (reg:QI 108)) /home/kai/git_repos/obme/obme.cpp:14 93 {*movqi_internal}
     (nil))
(insn 32 31 33 6 (set (reg:SI 109)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:15 90 {*movsi_internal}
     (nil))
(insn 33 32 34 6 (set (reg:DI 92 [ D.35021 ])
        (sign_extend:DI (reg:SI 109))) /home/kai/git_repos/obme/obme.cpp:15 142 {*extendsidi2_rex64}
     (nil))
(insn 34 33 35 6 (set (reg:SI 110)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:15 90 {*movsi_internal}
     (nil))
(insn 35 34 36 6 (parallel [
            (set (reg:SI 93 [ D.35022 ])
                (mult:SI (reg:SI 110)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -36 [0xffffffffffffffdc])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:15 305 {*mulsi3_1}
     (nil))
(insn 36 35 37 6 (set (reg:DI 94 [ D.35021 ])
        (sign_extend:DI (reg:SI 93 [ D.35022 ]))) /home/kai/git_repos/obme/obme.cpp:15 142 {*extendsidi2_rex64}
     (nil))
(insn 37 36 38 6 (parallel [
            (set (reg:DI 95 [ D.35021 ])
                (plus:DI (reg:DI 92 [ D.35021 ])
                    (reg:DI 94 [ D.35021 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:15 218 {*adddi_1}
     (nil))
(insn 38 37 39 6 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 blk2+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:15 89 {*movdi_internal}
     (nil))
(insn 39 38 40 6 (parallel [
            (set (reg/f:DI 96 [ D.35023 ])
                (plus:DI (reg:DI 95 [ D.35021 ])
                    (reg/f:DI 111)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:15 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [0 blk2+0 S8 A64])
            (reg:DI 95 [ D.35021 ]))
        (nil)))
(insn 40 39 41 6 (set (reg:QI 112)
        (mem:QI (reg/f:DI 96 [ D.35023 ]) [0 *_23+0 S1 A8])) /home/kai/git_repos/obme/obme.cpp:15 93 {*movqi_internal}
     (nil))
(insn 41 40 42 6 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -13 [0xfffffffffffffff3])) [0 pel2+0 S1 A8])
        (reg:QI 112)) /home/kai/git_repos/obme/obme.cpp:15 93 {*movqi_internal}
     (nil))
(insn 42 41 43 6 (set (reg:SI 97 [ D.35022 ])
        (sign_extend:SI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -14 [0xfffffffffffffff2])) [0 pel1+0 S1 A8]))) /home/kai/git_repos/obme/obme.cpp:16 148 {extendqisi2}
     (nil))
(insn 43 42 44 6 (set (reg:SI 98 [ D.35022 ])
        (sign_extend:SI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -13 [0xfffffffffffffff3])) [0 pel2+0 S1 A8]))) /home/kai/git_repos/obme/obme.cpp:16 148 {extendqisi2}
     (nil))
(insn 44 43 45 6 (parallel [
            (set (reg:SI 99 [ D.35022 ])
                (minus:SI (reg:SI 97 [ D.35022 ])
                    (reg:SI 98 [ D.35022 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:16 260 {*subsi_1}
     (nil))
(insn 45 44 46 6 (parallel [
            (set (reg:SI 113)
                (ashiftrt:SI (reg:SI 99 [ D.35022 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:16 538 {ashrsi3_cvt}
     (nil))
(insn 46 45 47 6 (parallel [
            (set (reg:SI 100 [ D.35022 ])
                (xor:SI (reg:SI 113)
                    (reg:SI 99 [ D.35022 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:16 400 {*xorsi_1}
     (nil))
(insn 47 46 48 6 (parallel [
            (set (reg:SI 100 [ D.35022 ])
                (minus:SI (reg:SI 100 [ D.35022 ])
                    (reg:SI 113)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:16 260 {*subsi_1}
     (nil))
(insn 48 47 49 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [0 sad+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 sad+0 S4 A32])
                    (reg:SI 100 [ D.35022 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:16 217 {*addsi_1}
     (nil))
(insn 49 48 71 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 x+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:12 217 {*addsi_1}
     (nil))
(jump_insn 71 49 72 6 (set (pc)
        (label_ref 50)) /home/kai/git_repos/obme/obme.cpp:12 -1
     (nil)
 -> 50)
;;  succ:       5 [100.0%] 

(barrier 72 71 53)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 53 72 54 7 3 "" [1 uses])
(note 54 53 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 73 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 y+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 y+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:11 217 {*addsi_1}
     (nil))
(jump_insn 73 55 74 7 (set (pc)
        (label_ref 56)) /home/kai/git_repos/obme/obme.cpp:11 -1
     (nil)
 -> 56)
;;  succ:       3 [100.0%] 

(barrier 74 73 59)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       3
(code_label 59 74 60 8 2 "" [1 uses])
(note 60 59 61 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 64 8 (set (reg:SI 101 [ D.35022 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 sad+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:18 90 {*movsi_internal}
     (nil))
(insn 64 61 68 8 (set (reg:SI 102 [ <retval> ])
        (reg:SI 101 [ D.35022 ])) /home/kai/git_repos/obme/obme.cpp:18 90 {*movsi_internal}
     (nil))
(insn 68 64 69 8 (set (reg/i:SI 0 ax)
        (reg:SI 102 [ <retval> ])) /home/kai/git_repos/obme/obme.cpp:19 90 {*movsi_internal}
     (nil))
(insn 69 68 0 8 (use (reg/i:SI 0 ax)) /home/kai/git_repos/obme/obme.cpp:19 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void ES(imgpel*, imgpel*, mvinfo&, int, int, int, int, int) (_Z2ESPcS_R6mvinfoiiiii, funcdef_no=1385, decl_uid=33320, cgraph_uid=401, symbol_order=403)

Reordered sequence:
 2 bb 2  [0]
 3 bb 3  [0]
 4 bb 4  [0]
 5 bb 5  [0]
 6 bb 6  [0]
 7 bb 7  [0]
 8 bb 8  [0]
 9 bb 9  [0]
 10 bb 10  [0]
 11 bb 11  [0]
 12 bb 12  [0]
 13 bb 13  [0]
 14 bb 14  [0]
 15 bb 15  [0]
 16 bb 16  [0]
Edge 6->14 redirected to 17
Edge 11->14 redirected to 17
Edge 9->14 redirected to 17
Edge 8->14 redirected to 17
Edge 7->14 redirected to 17
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 trg+0 S8 A64])
        (reg:DI 5 di [ trg ])) /home/kai/git_repos/obme/obme.cpp:23 89 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 ref+0 S8 A64])
        (reg:DI 4 si [ ref ])) /home/kai/git_repos/obme/obme.cpp:23 89 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 mv+0 S8 A64])
        (reg:DI 1 dx [ mv ])) /home/kai/git_repos/obme/obme.cpp:23 89 {*movdi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 p+0 S4 A32])
        (reg:SI 2 cx [ p ])) /home/kai/git_repos/obme/obme.cpp:23 90 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 center+0 S4 A32])
        (reg:SI 37 r8 [ center ])) /home/kai/git_repos/obme/obme.cpp:23 90 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])
        (reg:SI 38 r9 [ width ])) /home/kai/git_repos/obme/obme.cpp:23 90 {*movsi_internal}
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 mincost+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) /home/kai/git_repos/obme/obme.cpp:27 90 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 102)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 center+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:28 90 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:SI 100)
                (div:SI (reg:SI 102)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (set (reg:SI 101)
                (mod:SI (reg:SI 102)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:28 341 {*divmodsi4}
     (nil))
(insn 14 13 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 cy+0 S4 A32])
        (reg:SI 100)) /home/kai/git_repos/obme/obme.cpp:28 90 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:SI 104)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 center+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:29 90 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (parallel [
            (set (reg:SI 106)
                (div:SI (reg:SI 104)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (set (reg:SI 105)
                (mod:SI (reg:SI 104)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:29 341 {*divmodsi4}
     (nil))
(insn 17 16 21 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 cx+0 S4 A32])
        (reg:SI 105)) /home/kai/git_repos/obme/obme.cpp:29 90 {*movsi_internal}
     (nil))
(insn 21 17 22 2 (set (reg:SI 110)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 p+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:30 90 {*movsi_internal}
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg:SI 109)
                (neg:SI (reg:SI 110)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:30 455 {*negsi2_1}
     (expr_list:REG_EQUAL (neg:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -76 [0xffffffffffffffb4])) [0 p+0 S4 A32]))
        (nil)))
(insn 23 22 126 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])
        (reg:SI 109)) /home/kai/git_repos/obme/obme.cpp:30 90 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
;;              15 [100.0%] 
(code_label 126 23 24 3 14 "" [1 uses])
(note 24 126 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 3 (set (reg:SI 111)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:30 90 {*movsi_internal}
     (nil))
(insn 26 25 27 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 111)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -76 [0xffffffffffffffb4])) [0 p+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:30 7 {*cmpsi_1}
     (nil))
(jump_insn 27 26 28 3 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 129)
            (pc))) /home/kai/git_repos/obme/obme.cpp:30 612 {*jcc_1}
     (nil)
 -> 129)
;;  succ:       16
;;              4 (FALLTHRU)

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       3 (FALLTHRU)
(note 28 27 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 32 28 33 4 (set (reg:SI 115)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 p+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:32 90 {*movsi_internal}
     (nil))
(insn 33 32 34 4 (parallel [
            (set (reg:SI 114)
                (neg:SI (reg:SI 115)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:32 455 {*negsi2_1}
     (expr_list:REG_EQUAL (neg:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -76 [0xffffffffffffffb4])) [0 p+0 S4 A32]))
        (nil)))
(insn 34 33 120 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])
        (reg:SI 114)) /home/kai/git_repos/obme/obme.cpp:32 90 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
;;              14 [100.0%] 
(code_label 120 34 35 5 13 "" [1 uses])
(note 35 120 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 5 (set (reg:SI 116)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:32 90 {*movsi_internal}
     (nil))
(insn 37 36 38 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 116)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -76 [0xffffffffffffffb4])) [0 p+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:32 7 {*cmpsi_1}
     (nil))
(jump_insn 38 37 39 5 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 123)
            (pc))) /home/kai/git_repos/obme/obme.cpp:32 612 {*jcc_1}
     (nil)
 -> 123)
;;  succ:       15
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
(note 39 38 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 44 39 45 6 (set (reg:SI 121)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 cy+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:34 90 {*movsi_internal}
     (nil))
(insn 45 44 46 6 (set (reg:SI 122)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:34 90 {*movsi_internal}
     (nil))
(insn 46 45 47 6 (parallel [
            (set (reg:SI 120)
                (plus:SI (reg:SI 121)
                    (reg:SI 122)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:34 217 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [0 cy+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32]))
        (nil)))
(insn 47 46 52 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])
        (reg:SI 120)) /home/kai/git_repos/obme/obme.cpp:34 90 {*movsi_internal}
     (nil))
(insn 52 47 53 6 (set (reg:SI 127)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 cx+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:35 90 {*movsi_internal}
     (nil))
(insn 53 52 54 6 (set (reg:SI 128)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:35 90 {*movsi_internal}
     (nil))
(insn 54 53 55 6 (parallel [
            (set (reg:SI 126)
                (plus:SI (reg:SI 127)
                    (reg:SI 128)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:35 217 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 cx+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32]))
        (nil)))
(insn 55 54 56 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32])
        (reg:SI 126)) /home/kai/git_repos/obme/obme.cpp:35 90 {*movsi_internal}
     (nil))
(insn 56 55 57 6 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32])
            (const_int 0 [0]))) /home/kai/git_repos/obme/obme.cpp:38 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 57 56 58 6 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 164)
            (pc))) /home/kai/git_repos/obme/obme.cpp:38 612 {*jcc_1}
     (nil)
 -> 164)
;;  succ:       17
;;              7 (FALLTHRU)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
(note 58 57 59 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 7 (set (reg:SI 129)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:38 90 {*movsi_internal}
     (nil))
(insn 60 59 61 7 (parallel [
            (set (reg:SI 87 [ D.35024 ])
                (minus:SI (reg:SI 129)
                    (mem/c:SI (plus:DI (reg/f:DI 16 argp)
                            (const_int 8 [0x8])) [0 blocksize+0 S4 A64])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:38 260 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 16 argp)
                    (const_int 8 [0x8])) [0 blocksize+0 S4 A64]))
        (nil)))
(insn 61 60 62 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 87 [ D.35024 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:38 7 {*cmpsi_1}
     (nil))
(jump_insn 62 61 63 7 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 164)
            (pc))) /home/kai/git_repos/obme/obme.cpp:38 612 {*jcc_1}
     (nil)
 -> 164)
;;  succ:       17
;;              8 (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
(note 63 62 64 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 8 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])
            (const_int 0 [0]))) /home/kai/git_repos/obme/obme.cpp:38 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 65 64 66 8 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 164)
            (pc))) /home/kai/git_repos/obme/obme.cpp:38 612 {*jcc_1}
     (nil)
 -> 164)
;;  succ:       17
;;              9 (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
(note 66 65 67 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 9 (set (reg:SI 130)
        (mem/c:SI (reg/f:DI 16 argp) [0 height+0 S4 A64])) /home/kai/git_repos/obme/obme.cpp:39 90 {*movsi_internal}
     (nil))
(insn 68 67 69 9 (parallel [
            (set (reg:SI 88 [ D.35024 ])
                (minus:SI (reg:SI 130)
                    (mem/c:SI (plus:DI (reg/f:DI 16 argp)
                            (const_int 8 [0x8])) [0 blocksize+0 S4 A64])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:39 260 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (reg/f:DI 16 argp) [0 height+0 S4 A64])
            (mem/c:SI (plus:DI (reg/f:DI 16 argp)
                    (const_int 8 [0x8])) [0 blocksize+0 S4 A64]))
        (nil)))
(insn 69 68 70 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88 [ D.35024 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:39 7 {*cmpsi_1}
     (nil))
(jump_insn 70 69 71 9 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 164)
            (pc))) /home/kai/git_repos/obme/obme.cpp:39 612 {*jcc_1}
     (nil)
 -> 164)
;;  succ:       17
;;              10 (FALLTHRU)

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 71 70 72 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) /home/kai/git_repos/obme/obme.cpp:39 7 {*cmpsi_1}
     (nil))
(jump_insn 73 72 74 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) /home/kai/git_repos/obme/obme.cpp:39 612 {*jcc_1}
     (nil)
 -> 81)
;;  succ:       11 (FALLTHRU)
;;              12

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
(note 74 73 75 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])
            (const_int 1 [0x1]))) /home/kai/git_repos/obme/obme.cpp:40 7 {*cmpsi_1}
     (nil))
(jump_insn 76 75 81 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 164)
            (pc))) /home/kai/git_repos/obme/obme.cpp:40 612 {*jcc_1}
     (nil)
 -> 164)
;;  succ:       17
;;              12 (FALLTHRU)

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       10
;;              11 (FALLTHRU)
(code_label 81 76 82 12 11 "" [1 uses])
(note 82 81 83 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 12 (set (reg:SI 131)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:45 90 {*movsi_internal}
     (nil))
(insn 84 83 85 12 (parallel [
            (set (reg:SI 89 [ D.35024 ])
                (mult:SI (reg:SI 131)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:45 305 {*mulsi3_1}
     (nil))
(insn 85 84 86 12 (set (reg:SI 132)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:45 90 {*movsi_internal}
     (nil))
(insn 86 85 87 12 (parallel [
            (set (reg:SI 90 [ D.35024 ])
                (plus:SI (reg:SI 89 [ D.35024 ])
                    (reg:SI 132)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:45 217 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 89 [ D.35024 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32]))
        (nil)))
(insn 87 86 88 12 (set (reg:DI 91 [ D.35025 ])
        (sign_extend:DI (reg:SI 90 [ D.35024 ]))) /home/kai/git_repos/obme/obme.cpp:44 142 {*extendsidi2_rex64}
     (nil))
(insn 88 87 89 12 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 ref+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:44 89 {*movdi_internal}
     (nil))
(insn 89 88 90 12 (parallel [
            (set (reg/f:DI 92 [ D.35026 ])
                (plus:DI (reg:DI 91 [ D.35025 ])
                    (reg/f:DI 133)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:44 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])) [0 ref+0 S8 A64])
            (reg:DI 91 [ D.35025 ]))
        (nil)))
(insn 90 89 91 12 (set (reg:SI 134)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 center+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:44 90 {*movsi_internal}
     (nil))
(insn 91 90 92 12 (set (reg:DI 93 [ D.35025 ])
        (sign_extend:DI (reg:SI 134))) /home/kai/git_repos/obme/obme.cpp:44 142 {*extendsidi2_rex64}
     (nil))
(insn 92 91 93 12 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 trg+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:44 89 {*movdi_internal}
     (nil))
(insn 93 92 94 12 (parallel [
            (set (reg/f:DI 94 [ D.35026 ])
                (plus:DI (reg:DI 93 [ D.35025 ])
                    (reg/f:DI 135)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:44 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [0 trg+0 S8 A64])
            (reg:DI 93 [ D.35025 ]))
        (nil)))
(insn 94 93 95 12 (set (reg:SI 136)
        (mem/c:SI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 blocksize+0 S4 A64])) /home/kai/git_repos/obme/obme.cpp:44 90 {*movsi_internal}
     (nil))
(insn 95 94 96 12 (set (reg:SI 137)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:44 90 {*movsi_internal}
     (nil))
(insn 96 95 97 12 (set (reg:SI 2 cx)
        (reg:SI 136)) /home/kai/git_repos/obme/obme.cpp:44 90 {*movsi_internal}
     (nil))
(insn 97 96 98 12 (set (reg:SI 1 dx)
        (reg:SI 137)) /home/kai/git_repos/obme/obme.cpp:44 90 {*movsi_internal}
     (nil))
(insn 98 97 99 12 (set (reg:DI 4 si)
        (reg/f:DI 92 [ D.35026 ])) /home/kai/git_repos/obme/obme.cpp:44 89 {*movdi_internal}
     (nil))
(insn 99 98 100 12 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.35026 ])) /home/kai/git_repos/obme/obme.cpp:44 89 {*movdi_internal}
     (nil))
(call_insn 100 99 101 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z7calcSADPcS_ii") [flags 0x3]  <function_decl 0x7f86e163cca8 calcSAD>) [0 calcSAD S1 A8])
            (const_int 0 [0]))) /home/kai/git_repos/obme/obme.cpp:44 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 101 100 102 12 (set (reg:SI 95 [ D.35024 ])
        (reg:SI 0 ax)) /home/kai/git_repos/obme/obme.cpp:44 90 {*movsi_internal}
     (nil))
(insn 102 101 103 12 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 cost+0 S4 A32])
        (reg:SI 95 [ D.35024 ])) /home/kai/git_repos/obme/obme.cpp:47 90 {*movsi_internal}
     (nil))
(insn 103 102 104 12 (set (reg:SI 138)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 cost+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:48 90 {*movsi_internal}
     (nil))
(insn 104 103 105 12 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 138)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [0 mincost+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:48 7 {*cmpsi_1}
     (nil))
(jump_insn 105 104 106 12 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 117)
            (pc))) /home/kai/git_repos/obme/obme.cpp:48 612 {*jcc_1}
     (nil)
 -> 117)
;;  succ:       13 (FALLTHRU)
;;              14

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 (FALLTHRU)
(note 106 105 107 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 13 (set (reg:SI 139)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:49 90 {*movsi_internal}
     (nil))
(insn 108 107 112 13 (parallel [
            (set (reg:SI 96 [ D.35024 ])
                (mult:SI (reg:SI 139)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:49 305 {*mulsi3_1}
     (nil))
(insn 112 108 113 13 (set (reg:SI 143)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:49 90 {*movsi_internal}
     (nil))
(insn 113 112 114 13 (parallel [
            (set (reg:SI 142)
                (plus:SI (reg:SI 96 [ D.35024 ])
                    (reg:SI 143)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:49 217 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 96 [ D.35024 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32]))
        (nil)))
(insn 114 113 115 13 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 loc+0 S4 A32])
        (reg:SI 142)) /home/kai/git_repos/obme/obme.cpp:49 90 {*movsi_internal}
     (nil))
(insn 115 114 116 13 (set (reg:SI 144)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 cost+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:50 90 {*movsi_internal}
     (nil))
(insn 116 115 161 13 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 mincost+0 S4 A32])
        (reg:SI 144)) /home/kai/git_repos/obme/obme.cpp:50 90 {*movsi_internal}
     (nil))
(jump_insn 161 116 162 13 (set (pc)
        (label_ref 117)) -1
     (nil)
 -> 117)
;;  succ:       14

(barrier 162 161 164)
;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 14, flags: (NEW, RTL)
;;  pred:       6
;;              11
;;              9
;;              8
;;              7
(code_label 164 162 163 17 15 "" [5 uses])
(note 163 164 165 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 165 163 117 17 (const_int 0 [0]) /home/kai/git_repos/obme/obme.cpp:42 -1
     (nil))
;;  succ:       14 [100.0%]  (FALLTHRU)

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       13
;;              12
;;              17 [100.0%]  (FALLTHRU)
(code_label 117 165 118 14 12 "" [2 uses])
(note 118 117 119 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 157 14 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:32 217 {*addsi_1}
     (nil))
(jump_insn 157 119 158 14 (set (pc)
        (label_ref 120)) /home/kai/git_repos/obme/obme.cpp:32 -1
     (nil)
 -> 120)
;;  succ:       5 [100.0%] 

(barrier 158 157 123)
;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 123 158 124 15 9 "" [1 uses])
(note 124 123 125 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 159 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:30 217 {*addsi_1}
     (nil))
(jump_insn 159 125 160 15 (set (pc)
        (label_ref 126)) /home/kai/git_repos/obme/obme.cpp:30 -1
     (nil)
 -> 126)
;;  succ:       3 [100.0%] 

(barrier 160 159 129)
;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       3
(code_label 129 160 130 16 8 "" [1 uses])
(note 130 129 131 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 16 (set (reg:SI 146)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 loc+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:56 90 {*movsi_internal}
     (nil))
(insn 132 131 133 16 (parallel [
            (set (reg:SI 148)
                (div:SI (reg:SI 146)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (set (reg:SI 147)
                (mod:SI (reg:SI 146)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:56 341 {*divmodsi4}
     (nil))
(insn 133 132 134 16 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32])
        (reg:SI 147)) /home/kai/git_repos/obme/obme.cpp:56 90 {*movsi_internal}
     (nil))
(insn 134 133 135 16 (set (reg:SI 152)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 loc+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:57 90 {*movsi_internal}
     (nil))
(insn 135 134 136 16 (parallel [
            (set (reg:SI 150)
                (div:SI (reg:SI 152)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (set (reg:SI 151)
                (mod:SI (reg:SI 152)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -84 [0xffffffffffffffac])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:57 341 {*divmodsi4}
     (nil))
(insn 136 135 137 16 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])
        (reg:SI 150)) /home/kai/git_repos/obme/obme.cpp:57 90 {*movsi_internal}
     (nil))
(insn 137 136 138 16 (set (reg/f:DI 153)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 mv+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:58 89 {*movdi_internal}
     (nil))
(insn 138 137 139 16 (set (reg:SI 154)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 cx+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:58 90 {*movsi_internal}
     (nil))
(insn 139 138 140 16 (set (mem/j:SI (reg/f:DI 153) [0 mv_46(D)->iCx+0 S4 A32])
        (reg:SI 154)) /home/kai/git_repos/obme/obme.cpp:58 90 {*movsi_internal}
     (nil))
(insn 140 139 141 16 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 mv+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:59 89 {*movdi_internal}
     (nil))
(insn 141 140 142 16 (set (reg:SI 156)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 cy+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:59 90 {*movsi_internal}
     (nil))
(insn 142 141 143 16 (set (mem/j:SI (plus:DI (reg/f:DI 155)
                (const_int 4 [0x4])) [0 mv_46(D)->iCy+0 S4 A32])
        (reg:SI 156)) /home/kai/git_repos/obme/obme.cpp:59 90 {*movsi_internal}
     (nil))
(insn 143 142 144 16 (set (reg:SI 157)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:61 90 {*movsi_internal}
     (nil))
(insn 144 143 145 16 (parallel [
            (set (reg:SI 97 [ D.35024 ])
                (minus:SI (reg:SI 157)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 cx+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:61 260 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 x+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 cx+0 S4 A32]))
        (nil)))
(insn 145 144 146 16 (set (reg/f:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 mv+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:61 89 {*movdi_internal}
     (nil))
(insn 146 145 147 16 (set (mem/j:SI (plus:DI (reg/f:DI 158)
                (const_int 8 [0x8])) [0 mv_46(D)->iMvx+0 S4 A32])
        (reg:SI 97 [ D.35024 ])) /home/kai/git_repos/obme/obme.cpp:61 90 {*movsi_internal}
     (nil))
(insn 147 146 148 16 (set (reg:SI 159)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:62 90 {*movsi_internal}
     (nil))
(insn 148 147 149 16 (parallel [
            (set (reg:SI 98 [ D.35024 ])
                (minus:SI (reg:SI 159)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [0 cy+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:62 260 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 y+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [0 cy+0 S4 A32]))
        (nil)))
(insn 149 148 150 16 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 mv+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:62 89 {*movdi_internal}
     (nil))
(insn 150 149 151 16 (set (mem/j:SI (plus:DI (reg/f:DI 160)
                (const_int 12 [0xc])) [0 mv_46(D)->iMvy+0 S4 A32])
        (reg:SI 98 [ D.35024 ])) /home/kai/git_repos/obme/obme.cpp:62 90 {*movsi_internal}
     (nil))
(insn 151 150 152 16 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 mv+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:63 89 {*movdi_internal}
     (nil))
(insn 152 151 153 16 (set (reg:SI 162)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 mincost+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:63 90 {*movsi_internal}
     (nil))
(insn 153 152 156 16 (set (mem/j:SI (plus:DI (reg/f:DI 161)
                (const_int 16 [0x10])) [0 mv_46(D)->SAD+0 S4 A32])
        (reg:SI 162)) /home/kai/git_repos/obme/obme.cpp:63 90 {*movsi_internal}
     (nil))
(insn 156 153 0 16 (const_int 0 [0]) /home/kai/git_repos/obme/obme.cpp:64 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void obme(imgpel**, imgpel*, mvinfo*, int, int, int, int, int) (_Z4obmePPcS_P6mvinfoiiiii, funcdef_no=1386, decl_uid=33288, cgraph_uid=402, symbol_order=404)

Reordered sequence:
 2 bb 2  [0]
 3 bb 3  [0]
 4 bb 4  [0]
 5 bb 5  [0]
 6 bb 6  [0]
 7 bb 7  [0]
 8 bb 8  [0]
 9 bb 9  [0]
 10 bb 10  [0]
 11 bb 11  [0]
 12 bb 12  [0]
 13 bb 13  [0]
 14 bb 14  [0]
 15 bb 15  [0]
Edge 3->13 redirected to 16
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 refFrame+0 S8 A64])
        (reg:DI 5 di [ refFrame ])) /home/kai/git_repos/obme/obme.cpp:68 89 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 currFrame+0 S8 A64])
        (reg:DI 4 si [ currFrame ])) /home/kai/git_repos/obme/obme.cpp:68 89 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 mvs+0 S8 A64])
        (reg:DI 1 dx [ mvs ])) /home/kai/git_repos/obme/obme.cpp:68 89 {*movdi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -92 [0xffffffffffffffa4])) [0 nRefs+0 S4 A32])
        (reg:SI 2 cx [ nRefs ])) /home/kai/git_repos/obme/obme.cpp:68 90 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 width+0 S4 A32])
        (reg:SI 37 r8 [ width ])) /home/kai/git_repos/obme/obme.cpp:68 90 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 height+0 S4 A32])
        (reg:SI 38 r9 [ height ])) /home/kai/git_repos/obme/obme.cpp:68 90 {*movsi_internal}
     (nil))
(note 8 7 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 8 12 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.35033+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:68 986 {stack_tls_protect_set_di}
     (nil))
(insn 12 9 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 cnt+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:72 90 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S4 A32])
        (const_int 7 [0x7])) /home/kai/git_repos/obme/obme.cpp:73 90 {*movsi_internal}
     (nil))
(insn 14 13 120 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 x+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:76 90 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              12 [100.0%] 
(code_label 120 14 15 3 23 "" [1 uses])
(note 15 120 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 width+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:76 90 {*movsi_internal}
     (nil))
(insn 17 16 18 3 (parallel [
            (set (reg:SI 87 [ D.35027 ])
                (minus:SI (reg:SI 103)
                    (mem/c:SI (reg/f:DI 16 argp) [0 blocksize+0 S4 A64])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:76 260 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [0 width+0 S4 A32])
            (mem/c:SI (reg/f:DI 16 argp) [0 blocksize+0 S4 A64]))
        (nil)))
(insn 18 17 19 3 (parallel [
            (set (reg:SI 88 [ D.35027 ])
                (plus:SI (reg:SI 87 [ D.35027 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:76 217 {*addsi_1}
     (nil))
(insn 19 18 20 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88 [ D.35027 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -52 [0xffffffffffffffcc])) [0 x+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:76 7 {*cmpsi_1}
     (nil))
(jump_insn 20 19 21 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 141)
            (pc))) /home/kai/git_repos/obme/obme.cpp:76 612 {*jcc_1}
     (nil)
 -> 141)
;;  succ:       16
;;              4 (FALLTHRU)

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       3 (FALLTHRU)
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 113 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 y+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:77 90 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
;;              11 [100.0%] 
(code_label 113 22 23 5 22 "" [1 uses])
(note 23 113 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg:SI 104)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 height+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:77 90 {*movsi_internal}
     (nil))
(insn 25 24 26 5 (parallel [
            (set (reg:SI 89 [ D.35027 ])
                (minus:SI (reg:SI 104)
                    (mem/c:SI (reg/f:DI 16 argp) [0 blocksize+0 S4 A64])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:77 260 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -100 [0xffffffffffffff9c])) [0 height+0 S4 A32])
            (mem/c:SI (reg/f:DI 16 argp) [0 blocksize+0 S4 A64]))
        (nil)))
(insn 26 25 27 5 (parallel [
            (set (reg:SI 90 [ D.35027 ])
                (plus:SI (reg:SI 89 [ D.35027 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:77 217 {*addsi_1}
     (nil))
(insn 27 26 28 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 90 [ D.35027 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [0 y+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:77 7 {*cmpsi_1}
     (nil))
(jump_insn 28 27 29 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) /home/kai/git_repos/obme/obme.cpp:77 612 {*jcc_1}
     (nil)
 -> 116)
;;  succ:       12
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [0 sad+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) /home/kai/git_repos/obme/obme.cpp:78 90 {*movsi_internal}
     (nil))
(insn 31 30 105 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 i+0 S4 A32])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:79 90 {*movsi_internal}
     (nil))
;;  succ:       7 (FALLTHRU)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
;;              10 [100.0%] 
(code_label 105 31 32 7 21 "" [1 uses])
(note 32 105 33 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 7 (set (reg:SI 105)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:79 90 {*movsi_internal}
     (nil))
(insn 34 33 35 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 105)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -92 [0xffffffffffffffa4])) [0 nRefs+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:79 7 {*cmpsi_1}
     (nil))
(jump_insn 35 34 36 7 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 108)
            (pc))) /home/kai/git_repos/obme/obme.cpp:79 612 {*jcc_1}
     (nil)
 -> 108)
;;  succ:       11
;;              8 (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 36 35 37 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 8 (set (reg:SI 106)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 y+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:80 90 {*movsi_internal}
     (nil))
(insn 38 37 42 8 (parallel [
            (set (reg:SI 91 [ D.35027 ])
                (mult:SI (reg:SI 106)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -96 [0xffffffffffffffa0])) [0 width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:80 305 {*mulsi3_1}
     (nil))
(insn 42 38 43 8 (set (reg:SI 110)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 x+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:80 90 {*movsi_internal}
     (nil))
(insn 43 42 44 8 (parallel [
            (set (reg:SI 109)
                (plus:SI (reg:SI 91 [ D.35027 ])
                    (reg:SI 110)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:80 217 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 91 [ D.35027 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -52 [0xffffffffffffffcc])) [0 x+0 S4 A32]))
        (nil)))
(insn 44 43 45 8 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 idx+0 S4 A32])
        (reg:SI 109)) /home/kai/git_repos/obme/obme.cpp:80 90 {*movsi_internal}
     (nil))
(insn 45 44 46 8 (set (reg:SI 111)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:81 90 {*movsi_internal}
     (nil))
(insn 46 45 47 8 (set (reg:DI 92 [ D.35028 ])
        (sign_extend:DI (reg:SI 111))) /home/kai/git_repos/obme/obme.cpp:81 142 {*extendsidi2_rex64}
     (nil))
(insn 47 46 48 8 (parallel [
            (set (reg:DI 93 [ D.35028 ])
                (ashift:DI (reg:DI 92 [ D.35028 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:81 512 {*ashldi3_1}
     (nil))
(insn 48 47 49 8 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 refFrame+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:81 89 {*movdi_internal}
     (nil))
(insn 49 48 50 8 (parallel [
            (set (reg/f:DI 94 [ D.35029 ])
                (plus:DI (reg:DI 93 [ D.35028 ])
                    (reg/f:DI 112)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:81 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -72 [0xffffffffffffffb8])) [0 refFrame+0 S8 A64])
            (reg:DI 93 [ D.35028 ]))
        (nil)))
(insn 50 49 51 8 (set (reg/f:DI 95 [ D.35030 ])
        (mem/f:DI (reg/f:DI 94 [ D.35029 ]) [0 *_32+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:81 89 {*movdi_internal}
     (nil))
(insn 51 50 52 8 (set (reg:SI 113)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 width+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:81 90 {*movsi_internal}
     (nil))
(insn 52 51 53 8 (set (reg:SI 114)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 idx+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:81 90 {*movsi_internal}
     (nil))
(insn 53 52 54 8 (set (reg:SI 115)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:81 90 {*movsi_internal}
     (nil))
(insn 54 53 55 8 (parallel [
            (set (reg:DI 116)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:81 218 {*adddi_1}
     (nil))
(insn 55 54 56 8 (set (reg:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 currFrame+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:81 89 {*movdi_internal}
     (nil))
(insn 56 55 57 8 (set (reg:SI 118)
        (mem/c:SI (reg/f:DI 16 argp) [0 blocksize+0 S4 A64])) /home/kai/git_repos/obme/obme.cpp:81 90 {*movsi_internal}
     (nil))
(insn 57 56 58 8 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 118)) /home/kai/git_repos/obme/obme.cpp:81 69 {*pushsi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 58 57 59 8 (set (reg:SI 119)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 height+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:81 90 {*movsi_internal}
     (nil))
(insn 59 58 60 8 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 119)) /home/kai/git_repos/obme/obme.cpp:81 69 {*pushsi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 60 59 61 8 (set (reg:SI 38 r9)
        (reg:SI 113)) /home/kai/git_repos/obme/obme.cpp:81 90 {*movsi_internal}
     (nil))
(insn 61 60 62 8 (set (reg:SI 37 r8)
        (reg:SI 114)) /home/kai/git_repos/obme/obme.cpp:81 90 {*movsi_internal}
     (nil))
(insn 62 61 63 8 (set (reg:SI 2 cx)
        (reg:SI 115)) /home/kai/git_repos/obme/obme.cpp:81 90 {*movsi_internal}
     (nil))
(insn 63 62 64 8 (set (reg:DI 1 dx)
        (reg:DI 116)) /home/kai/git_repos/obme/obme.cpp:81 89 {*movdi_internal}
     (nil))
(insn 64 63 65 8 (set (reg:DI 4 si)
        (reg/f:DI 95 [ D.35030 ])) /home/kai/git_repos/obme/obme.cpp:81 89 {*movdi_internal}
     (nil))
(insn 65 64 66 8 (set (reg:DI 5 di)
        (reg:DI 117)) /home/kai/git_repos/obme/obme.cpp:81 89 {*movdi_internal}
     (nil))
(call_insn 66 65 67 8 (call (mem:QI (symbol_ref:DI ("_Z2ESPcS_R6mvinfoiiiii") [flags 0x3]  <function_decl 0x7f86e163ce58 ES>) [0 ES S1 A8])
        (const_int 16 [0x10])) /home/kai/git_repos/obme/obme.cpp:81 660 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 67 66 68 8 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:81 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 68 67 69 8 (set (reg:SI 96 [ D.35031 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 mv.SAD+0 S4 A64])) /home/kai/git_repos/obme/obme.cpp:82 90 {*movsi_internal}
     (nil))
(insn 69 68 70 8 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 96 [ D.35031 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -60 [0xffffffffffffffc4])) [0 sad+0 S4 A32]))) /home/kai/git_repos/obme/obme.cpp:82 7 {*cmpsi_1}
     (nil))
(jump_insn 70 69 71 8 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) /home/kai/git_repos/obme/obme.cpp:82 612 {*jcc_1}
     (nil)
 -> 102)
;;  succ:       9 (FALLTHRU)
;;              10

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 71 70 72 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 9 (set (reg:SI 120)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 cnt+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:84 90 {*movsi_internal}
     (nil))
(insn 73 72 74 9 (set (reg:DI 97 [ D.35028 ])
        (sign_extend:DI (reg:SI 120))) /home/kai/git_repos/obme/obme.cpp:84 142 {*extendsidi2_rex64}
     (nil))
(insn 74 73 75 9 (set (reg:DI 121)
        (reg:DI 97 [ D.35028 ])) /home/kai/git_repos/obme/obme.cpp:84 89 {*movdi_internal}
     (nil))
(insn 75 74 76 9 (parallel [
            (set (reg:DI 121)
                (ashift:DI (reg:DI 121)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:84 512 {*ashldi3_1}
     (nil))
(insn 76 75 77 9 (parallel [
            (set (reg:DI 121)
                (plus:DI (reg:DI 121)
                    (reg:DI 97 [ D.35028 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:84 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 97 [ D.35028 ])
            (const_int 3 [0x3]))
        (nil)))
(insn 77 76 78 9 (parallel [
            (set (reg:DI 122)
                (ashift:DI (reg:DI 121)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:84 512 {*ashldi3_1}
     (nil))
(insn 78 77 79 9 (set (reg:DI 121)
        (reg:DI 122)) /home/kai/git_repos/obme/obme.cpp:84 89 {*movdi_internal}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 97 [ D.35028 ])
            (const_int 24 [0x18]))
        (nil)))
(insn 79 78 80 9 (set (reg:DI 98 [ D.35028 ])
        (reg:DI 121)) /home/kai/git_repos/obme/obme.cpp:84 89 {*movdi_internal}
     (nil))
(insn 80 79 81 9 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 mvs+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:84 89 {*movdi_internal}
     (nil))
(insn 81 80 82 9 (parallel [
            (set (reg/f:DI 99 [ D.35032 ])
                (plus:DI (reg:DI 98 [ D.35028 ])
                    (reg/f:DI 123)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:84 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [0 mvs+0 S8 A64])
            (reg:DI 98 [ D.35028 ]))
        (nil)))
(insn 82 81 83 9 (set (reg:DI 124)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 mv+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:84 89 {*movdi_internal}
     (nil))
(insn 83 82 84 9 (set (mem:DI (reg/f:DI 99 [ D.35032 ]) [0 *_40+0 S8 A32])
        (reg:DI 124)) /home/kai/git_repos/obme/obme.cpp:84 89 {*movdi_internal}
     (nil))
(insn 84 83 85 9 (set (reg:DI 125)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 mv+8 S8 A64])) /home/kai/git_repos/obme/obme.cpp:84 89 {*movdi_internal}
     (nil))
(insn 85 84 86 9 (set (mem:DI (plus:DI (reg/f:DI 99 [ D.35032 ])
                (const_int 8 [0x8])) [0 *_40+8 S8 A32])
        (reg:DI 125)) /home/kai/git_repos/obme/obme.cpp:84 89 {*movdi_internal}
     (nil))
(insn 86 85 87 9 (set (reg:DI 126)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 mv+16 S8 A64])) /home/kai/git_repos/obme/obme.cpp:84 89 {*movdi_internal}
     (nil))
(insn 87 86 88 9 (set (mem:DI (plus:DI (reg/f:DI 99 [ D.35032 ])
                (const_int 16 [0x10])) [0 *_40+16 S8 A32])
        (reg:DI 126)) /home/kai/git_repos/obme/obme.cpp:84 89 {*movdi_internal}
     (nil))
(insn 88 87 89 9 (set (reg:SI 127)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 cnt+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:85 90 {*movsi_internal}
     (nil))
(insn 89 88 90 9 (set (reg:DI 100 [ D.35028 ])
        (sign_extend:DI (reg:SI 127))) /home/kai/git_repos/obme/obme.cpp:85 142 {*extendsidi2_rex64}
     (nil))
(insn 90 89 91 9 (set (reg:DI 128)
        (reg:DI 100 [ D.35028 ])) /home/kai/git_repos/obme/obme.cpp:85 89 {*movdi_internal}
     (nil))
(insn 91 90 92 9 (parallel [
            (set (reg:DI 128)
                (ashift:DI (reg:DI 128)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:85 512 {*ashldi3_1}
     (nil))
(insn 92 91 93 9 (parallel [
            (set (reg:DI 128)
                (plus:DI (reg:DI 128)
                    (reg:DI 100 [ D.35028 ])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:85 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 100 [ D.35028 ])
            (const_int 3 [0x3]))
        (nil)))
(insn 93 92 94 9 (parallel [
            (set (reg:DI 129)
                (ashift:DI (reg:DI 128)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:85 512 {*ashldi3_1}
     (nil))
(insn 94 93 95 9 (set (reg:DI 128)
        (reg:DI 129)) /home/kai/git_repos/obme/obme.cpp:85 89 {*movdi_internal}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 100 [ D.35028 ])
            (const_int 24 [0x18]))
        (nil)))
(insn 95 94 96 9 (set (reg:DI 101 [ D.35028 ])
        (reg:DI 128)) /home/kai/git_repos/obme/obme.cpp:85 89 {*movdi_internal}
     (nil))
(insn 96 95 97 9 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 mvs+0 S8 A64])) /home/kai/git_repos/obme/obme.cpp:85 89 {*movdi_internal}
     (nil))
(insn 97 96 98 9 (parallel [
            (set (reg/f:DI 102 [ D.35032 ])
                (plus:DI (reg:DI 101 [ D.35028 ])
                    (reg/f:DI 130)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:85 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [0 mvs+0 S8 A64])
            (reg:DI 101 [ D.35028 ]))
        (nil)))
(insn 98 97 99 9 (set (reg:SI 131)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 i+0 S4 A32])) /home/kai/git_repos/obme/obme.cpp:85 90 {*movsi_internal}
     (nil))
(insn 99 98 100 9 (set (mem/j:SI (plus:DI (reg/f:DI 102 [ D.35032 ])
                (const_int 20 [0x14])) [0 _44->frame+0 S4 A32])
        (reg:SI 131)) /home/kai/git_repos/obme/obme.cpp:85 90 {*movsi_internal}
     (nil))
(insn 100 99 101 9 (set (reg:SI 132)
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 mv.SAD+0 S4 A64])) /home/kai/git_repos/obme/obme.cpp:86 90 {*movsi_internal}
     (nil))
(insn 101 100 102 9 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [0 sad+0 S4 A32])
        (reg:SI 132)) /home/kai/git_repos/obme/obme.cpp:86 90 {*movsi_internal}
     (nil))
;;  succ:       10 (FALLTHRU)

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
;;              9 (FALLTHRU)
(code_label 102 101 103 10 20 "" [1 uses])
(note 103 102 104 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 134 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -44 [0xffffffffffffffd4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -44 [0xffffffffffffffd4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:79 217 {*addsi_1}
     (nil))
(jump_insn 134 104 135 10 (set (pc)
        (label_ref 105)) /home/kai/git_repos/obme/obme.cpp:79 -1
     (nil)
 -> 105)
;;  succ:       7 [100.0%] 

(barrier 135 134 108)
;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 108 135 109 11 19 "" [1 uses])
(note 109 108 110 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 11 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -56 [0xffffffffffffffc8])) [0 cnt+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -56 [0xffffffffffffffc8])) [0 cnt+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:89 217 {*addsi_1}
     (nil))
(insn 111 110 112 11 (set (reg:SI 133)
        (mem/c:SI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 overlap+0 S4 A64])) /home/kai/git_repos/obme/obme.cpp:77 90 {*movsi_internal}
     (nil))
(insn 112 111 136 11 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -48 [0xffffffffffffffd0])) [0 y+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -48 [0xffffffffffffffd0])) [0 y+0 S4 A32])
                    (reg:SI 133)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:77 217 {*addsi_1}
     (nil))
(jump_insn 136 112 137 11 (set (pc)
        (label_ref 113)) /home/kai/git_repos/obme/obme.cpp:77 -1
     (nil)
 -> 113)
;;  succ:       5 [100.0%] 

(barrier 137 136 116)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 116 137 117 12 18 "" [1 uses])
(note 117 116 118 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 12 (set (reg:SI 134)
        (mem/c:SI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [0 overlap+0 S4 A64])) /home/kai/git_repos/obme/obme.cpp:76 90 {*movsi_internal}
     (nil))
(insn 119 118 138 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -52 [0xffffffffffffffcc])) [0 x+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -52 [0xffffffffffffffcc])) [0 x+0 S4 A32])
                    (reg:SI 134)))
            (clobber (reg:CC 17 flags))
        ]) /home/kai/git_repos/obme/obme.cpp:76 217 {*addsi_1}
     (nil))
(jump_insn 138 119 139 12 (set (pc)
        (label_ref 120)) /home/kai/git_repos/obme/obme.cpp:76 -1
     (nil)
 -> 120)
;;  succ:       3 [100.0%] 

(barrier 139 138 141)
;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 13, flags: (NEW, RTL)
;;  pred:       3
(code_label 141 139 140 16 25 "" [1 uses])
(note 140 141 142 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 142 140 125 16 (const_int 0 [0]) /home/kai/git_repos/obme/obme.cpp:92 -1
     (nil))
;;  succ:       13 [100.0%]  (FALLTHRU)

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 [100.0%]  (FALLTHRU)
(code_label 125 142 131 13 16 "" [0 uses])
(note 131 125 126 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 126 131 127 13 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.35033+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) /home/kai/git_repos/obme/obme.cpp:92 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 127 126 132 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 130)
            (pc))) /home/kai/git_repos/obme/obme.cpp:92 612 {*jcc_1}
     (nil)
 -> 130)
;;  succ:       15
;;              14 (FALLTHRU)

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
(note 132 127 128 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(call_insn 128 132 129 14 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f86e1400af8 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:92 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      

(barrier 129 128 130)
;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       13
(code_label 130 129 133 15 24 "" [1 uses])
(note 133 130 0 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void __static_initialization_and_destruction_0(int, int) (_Z41__static_initialization_and_destruction_0ii, funcdef_no=1567, decl_uid=34841, cgraph_uid=583, symbol_order=609)

Reordered sequence:
 2 bb 2  [0]
 3 bb 3  [0]
 4 bb 4  [0]
 5 bb 5  [0]
Edge 2->5 redirected to 6
Edge 3->5 redirected to 6
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 __initialize_p+0 S4 A32])
        (reg:SI 5 di [ __initialize_p ])) /home/kai/git_repos/obme/obme.cpp:92 90 {*movsi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __priority+0 S4 A32])
        (reg:SI 4 si [ __priority ])) /home/kai/git_repos/obme/obme.cpp:92 90 {*movsi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 __initialize_p+0 S4 A32])
            (const_int 1 [0x1]))) /home/kai/git_repos/obme/obme.cpp:92 7 {*cmpsi_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 25)
            (pc))) /home/kai/git_repos/obme/obme.cpp:92 612 {*jcc_1}
     (nil)
 -> 25)
;;  succ:       3 (FALLTHRU)
;;              6

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 __priority+0 S4 A32])
            (const_int 65535 [0xffff]))) /home/kai/git_repos/obme/obme.cpp:92 7 {*cmpsi_1}
     (nil))
(jump_insn 11 10 12 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 25)
            (pc))) /home/kai/git_repos/obme/obme.cpp:92 612 {*jcc_1}
     (nil)
 -> 25)
;;  succ:       4 (FALLTHRU)
;;              6

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       3 (FALLTHRU)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f86e161e480 __ioinit>)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(call_insn 14 13 15 4 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x7f86e1948e58 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/iostream:74 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 4 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7f86e13c4cf0 __dso_handle>)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(insn 16 15 17 4 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f86e161e480 __ioinit>)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7f86e195c0d8 __comp_dtor >)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(call_insn 18 17 25 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7f86e13ce000 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/iostream:74 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 5, flags: (NEW, RTL)
;;  pred:       4 (FALLTHRU)
;;              2
;;              3
(code_label 25 18 23 6 28 "" [2 uses])
(note 23 25 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 21 6 (const_int 0 [0]) /home/kai/git_repos/obme/obme.cpp:92 -1
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 [100.0%]  (FALLTHRU)
(code_label 21 24 22 5 26 "" [0 uses])
(note 22 21 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function (static initializers for /home/kai/git_repos/obme/obme.cpp) (_GLOBAL__sub_I__Z7calcSADPcS_ii, funcdef_no=1568, decl_uid=34847, cgraph_uid=584, symbol_order=731)

Reordered sequence:
 2 bb 2  [0]
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 4 si)
        (const_int 65535 [0xffff])) /home/kai/git_repos/obme/obme.cpp:92 90 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) /home/kai/git_repos/obme/obme.cpp:92 90 {*movsi_internal}
     (nil))
(call_insn 7 6 0 2 (call (mem:QI (symbol_ref:DI ("_Z41__static_initialization_and_destruction_0ii") [flags 0x3]  <function_decl 0x7f86e13c9d80 __static_initialization_and_destruction_0>) [0 __static_initialization_and_destruction_0 S1 A8])
        (const_int 0 [0])) /home/kai/git_repos/obme/obme.cpp:92 660 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)

